//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Wed Dec  5 18:09:50 2012 by ROOT version 5.30/02)
//      from the StreamerInfo in file /storage/physics/phujbk/4_reconstructed_path_analysis/part1/prod5_analysis.root
//////////////////////////////////////////////////////////


#ifndef ND__TP0DECALReconModule_h
#define ND__TP0DECALReconModule_h
namespace ND {
class TP0DECALReconModule;
} // end of namespace.

#include "ND__TAnalysisReconModuleBase.h"
#include "TObject.h"
#include "TVector3.h"
#include "TLorentzVector.h"

namespace ND {
class TP0DECALReconModule : public ND::TAnalysisReconModuleBase {

public:
// Nested classes forward declaration.
class TP0DECALReconTrack;
class TP0DECALReconShower;

public:
// Nested classes declaration.
class TP0DECALReconShower : public TObject {

public:
// Nested classes declaration.

public:
// Data Members.
   UInt_t      UniqueID;    //
   TVector3    ConeAngle;    //
   TVector3    Direction;    //
   double      EDeposit;     //
   int         NDOF;         //
   TLorentzVector Position;     //
   double         Quality;      //
   double         AMR;          //
   double         CWTrackWidth;    //
   double         Max_Ratio;       //
   double         NormChargeSD;    //
   double         PathChargeRatio;    //
   double         TrShval;            //
   int            NHits;              //
   TVector3       BenCWPosition;      //
   int            StackNo;            //

   TP0DECALReconShower();
   TP0DECALReconShower(const TP0DECALReconShower & );
   virtual ~TP0DECALReconShower();

   ClassDef(TP0DECALReconShower,2); // Generated by MakeProject.
};
class TP0DECALReconTrack : public TObject {

public:
// Nested classes declaration.

public:
// Data Members.
   UInt_t      UniqueID;    //
   double      Curvature;    //
   TVector3    Direction;    //
   double      EDeposit;     //
   int         NDOF;         //
   TLorentzVector Position;     //
   double         Quality;      //
   TVector3       Width;        //
   double         AMR;          //
   double         CWTrackWidth;    //
   double         Max_Ratio;       //
   double         NormChargeSD;    //
   double         PathChargeRatio;    //
   double         TrShval;            //
   int            NHits;              //
   TVector3       BenCWPosition;      //
   int            StackNo;            //

   TP0DECALReconTrack();
   TP0DECALReconTrack(const TP0DECALReconTrack & );
   virtual ~TP0DECALReconTrack();

   ClassDef(TP0DECALReconTrack,2); // Generated by MakeProject.
};

public:
// Data Members.

   TP0DECALReconModule();
   TP0DECALReconModule(const TP0DECALReconModule & );
   virtual ~TP0DECALReconModule();

   ClassDef(TP0DECALReconModule,2); // Generated by MakeProject.
};
} // namespace
#endif
