//
// File generated by rootcint at Sun Dec 23 15:43:23 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME nd280ProjectDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "nd280ProjectDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace ND {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ND::TND280Context TND280Context;
      #else
      class TND280Context  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ND::TND280Context::Time Time;
         #else
         enum Time  {
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~TND280Context() throw() {};
         int fPartition; //
         int fRun; //
         int fSubRun; //
         int fEvent; //
         int fSpill; //
         unsigned int fTimeStamp; //
      };
      #endif
      } 
      namespace ND {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ND::TSHAHashValue TSHAHashValue;
      #else
      class TSHAHashValue  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TSHAHashValue() throw() {};
         unsigned int fHash[5]; //
      };
      #endif
      } 
      namespace ND {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ND::TAlignmentId TAlignmentId;
      #else
      class TAlignmentId  :  public ::ND::TSHAHashValue {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TAlignmentId() throw() {};
         string fDocString; //
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ND {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void ND_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("ND", 0 /*version*/, "./ND__TNRooTrackerVtxModule.h", 16,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &ND_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void ND_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void NDcLcLTND280Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTND280Event(void *p = 0);
   static void *newArray_NDcLcLTND280Event(Long_t size, void *p);
   static void delete_NDcLcLTND280Event(void *p);
   static void deleteArray_NDcLcLTND280Event(void *p);
   static void destruct_NDcLcLTND280Event(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TND280Event*)
   {
      ::ND::TND280Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TND280Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TND280Event", ::ND::TND280Event::Class_Version(), "./ND__TND280Event.h", 21,
                  typeid(::ND::TND280Event), DefineBehavior(ptr, ptr),
                  &::ND::TND280Event::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TND280Event) );
      instance.SetNew(&new_NDcLcLTND280Event);
      instance.SetNewArray(&newArray_NDcLcLTND280Event);
      instance.SetDelete(&delete_NDcLcLTND280Event);
      instance.SetDeleteArray(&deleteArray_NDcLcLTND280Event);
      instance.SetDestructor(&destruct_NDcLcLTND280Event);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TND280Event*)
   {
      return GenerateInitInstanceLocal((::ND::TND280Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TND280Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTDataVector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTDataVector(void *p = 0);
   static void *newArray_NDcLcLTDataVector(Long_t size, void *p);
   static void delete_NDcLcLTDataVector(void *p);
   static void deleteArray_NDcLcLTDataVector(void *p);
   static void destruct_NDcLcLTDataVector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TDataVector*)
   {
      ::ND::TDataVector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TDataVector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TDataVector", ::ND::TDataVector::Class_Version(), "./ND__TDataVector.h", 20,
                  typeid(::ND::TDataVector), DefineBehavior(ptr, ptr),
                  &::ND::TDataVector::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TDataVector) );
      instance.SetNew(&new_NDcLcLTDataVector);
      instance.SetNewArray(&newArray_NDcLcLTDataVector);
      instance.SetDelete(&delete_NDcLcLTDataVector);
      instance.SetDeleteArray(&deleteArray_NDcLcLTDataVector);
      instance.SetDestructor(&destruct_NDcLcLTDataVector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TDataVector*)
   {
      return GenerateInitInstanceLocal((::ND::TDataVector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TDataVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTData(void *p = 0);
   static void *newArray_NDcLcLTData(Long_t size, void *p);
   static void delete_NDcLcLTData(void *p);
   static void deleteArray_NDcLcLTData(void *p);
   static void destruct_NDcLcLTData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TData*)
   {
      ::ND::TData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TData", ::ND::TData::Class_Version(), "./ND__TData.h", 17,
                  typeid(::ND::TData), DefineBehavior(ptr, ptr),
                  &::ND::TData::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TData) );
      instance.SetNew(&new_NDcLcLTData);
      instance.SetNewArray(&newArray_NDcLcLTData);
      instance.SetDelete(&delete_NDcLcLTData);
      instance.SetDeleteArray(&deleteArray_NDcLcLTData);
      instance.SetDestructor(&destruct_NDcLcLTData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TData*)
   {
      return GenerateInitInstanceLocal((::ND::TData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTDatum_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTDatum(void *p = 0);
   static void *newArray_NDcLcLTDatum(Long_t size, void *p);
   static void delete_NDcLcLTDatum(void *p);
   static void deleteArray_NDcLcLTDatum(void *p);
   static void destruct_NDcLcLTDatum(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TDatum*)
   {
      ::ND::TDatum *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TDatum >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TDatum", ::ND::TDatum::Class_Version(), "./ND__TDatum.h", 18,
                  typeid(::ND::TDatum), DefineBehavior(ptr, ptr),
                  &::ND::TDatum::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TDatum) );
      instance.SetNew(&new_NDcLcLTDatum);
      instance.SetNewArray(&newArray_NDcLcLTDatum);
      instance.SetDelete(&delete_NDcLcLTDatum);
      instance.SetDeleteArray(&deleteArray_NDcLcLTDatum);
      instance.SetDestructor(&destruct_NDcLcLTDatum);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TDatum*)
   {
      return GenerateInitInstanceLocal((::ND::TDatum*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TDatum*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTND280Context_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void NDcLcLTND280Context_Dictionary();
   static void *new_NDcLcLTND280Context(void *p = 0);
   static void *newArray_NDcLcLTND280Context(Long_t size, void *p);
   static void delete_NDcLcLTND280Context(void *p);
   static void deleteArray_NDcLcLTND280Context(void *p);
   static void destruct_NDcLcLTND280Context(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TND280Context*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ND::TND280Context) == sizeof(::ROOT::Shadow::ND::TND280Context));
      ::ND::TND280Context *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ND::TND280Context),0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TND280Context", "./ND__TND280Context.h", 17,
                  typeid(::ND::TND280Context), DefineBehavior(ptr, ptr),
                  &NDcLcLTND280Context_ShowMembers, &NDcLcLTND280Context_Dictionary, isa_proxy, 4,
                  sizeof(::ND::TND280Context) );
      instance.SetNew(&new_NDcLcLTND280Context);
      instance.SetNewArray(&newArray_NDcLcLTND280Context);
      instance.SetDelete(&delete_NDcLcLTND280Context);
      instance.SetDeleteArray(&deleteArray_NDcLcLTND280Context);
      instance.SetDestructor(&destruct_NDcLcLTND280Context);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TND280Context*)
   {
      return GenerateInitInstanceLocal((::ND::TND280Context*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TND280Context*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void NDcLcLTND280Context_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ND::TND280Context*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTSHAHashValue_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void NDcLcLTSHAHashValue_Dictionary();
   static void *new_NDcLcLTSHAHashValue(void *p = 0);
   static void *newArray_NDcLcLTSHAHashValue(Long_t size, void *p);
   static void delete_NDcLcLTSHAHashValue(void *p);
   static void deleteArray_NDcLcLTSHAHashValue(void *p);
   static void destruct_NDcLcLTSHAHashValue(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TSHAHashValue*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ND::TSHAHashValue) == sizeof(::ROOT::Shadow::ND::TSHAHashValue));
      ::ND::TSHAHashValue *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ND::TSHAHashValue),0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TSHAHashValue", "./ND__TSHAHashValue.h", 17,
                  typeid(::ND::TSHAHashValue), DefineBehavior(ptr, ptr),
                  &NDcLcLTSHAHashValue_ShowMembers, &NDcLcLTSHAHashValue_Dictionary, isa_proxy, 4,
                  sizeof(::ND::TSHAHashValue) );
      instance.SetNew(&new_NDcLcLTSHAHashValue);
      instance.SetNewArray(&newArray_NDcLcLTSHAHashValue);
      instance.SetDelete(&delete_NDcLcLTSHAHashValue);
      instance.SetDeleteArray(&deleteArray_NDcLcLTSHAHashValue);
      instance.SetDestructor(&destruct_NDcLcLTSHAHashValue);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TSHAHashValue*)
   {
      return GenerateInitInstanceLocal((::ND::TSHAHashValue*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TSHAHashValue*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void NDcLcLTSHAHashValue_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ND::TSHAHashValue*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTAlignmentId_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void NDcLcLTAlignmentId_Dictionary();
   static void *new_NDcLcLTAlignmentId(void *p = 0);
   static void *newArray_NDcLcLTAlignmentId(Long_t size, void *p);
   static void delete_NDcLcLTAlignmentId(void *p);
   static void deleteArray_NDcLcLTAlignmentId(void *p);
   static void destruct_NDcLcLTAlignmentId(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TAlignmentId*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ND::TAlignmentId) == sizeof(::ROOT::Shadow::ND::TAlignmentId));
      ::ND::TAlignmentId *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ND::TAlignmentId),0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TAlignmentId", "./ND__TAlignmentId.h", 19,
                  typeid(::ND::TAlignmentId), DefineBehavior(ptr, ptr),
                  &NDcLcLTAlignmentId_ShowMembers, &NDcLcLTAlignmentId_Dictionary, isa_proxy, 4,
                  sizeof(::ND::TAlignmentId) );
      instance.SetNew(&new_NDcLcLTAlignmentId);
      instance.SetNewArray(&newArray_NDcLcLTAlignmentId);
      instance.SetDelete(&delete_NDcLcLTAlignmentId);
      instance.SetDeleteArray(&deleteArray_NDcLcLTAlignmentId);
      instance.SetDestructor(&destruct_NDcLcLTAlignmentId);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TAlignmentId*)
   {
      return GenerateInitInstanceLocal((::ND::TAlignmentId*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TAlignmentId*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void NDcLcLTAlignmentId_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ND::TAlignmentId*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTND280EventcLcLHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTND280EventcLcLHeader(void *p = 0);
   static void *newArray_NDcLcLTND280EventcLcLHeader(Long_t size, void *p);
   static void delete_NDcLcLTND280EventcLcLHeader(void *p);
   static void deleteArray_NDcLcLTND280EventcLcLHeader(void *p);
   static void destruct_NDcLcLTND280EventcLcLHeader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TND280Event::Header*)
   {
      ::ND::TND280Event::Header *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TND280Event::Header >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TND280Event::Header", ::ND::TND280Event::Header::Class_Version(), "./ND__TND280Event.h", 29,
                  typeid(::ND::TND280Event::Header), DefineBehavior(ptr, ptr),
                  &::ND::TND280Event::Header::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TND280Event::Header) );
      instance.SetNew(&new_NDcLcLTND280EventcLcLHeader);
      instance.SetNewArray(&newArray_NDcLcLTND280EventcLcLHeader);
      instance.SetDelete(&delete_NDcLcLTND280EventcLcLHeader);
      instance.SetDeleteArray(&deleteArray_NDcLcLTND280EventcLcLHeader);
      instance.SetDestructor(&destruct_NDcLcLTND280EventcLcLHeader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TND280Event::Header*)
   {
      return GenerateInitInstanceLocal((::ND::TND280Event::Header*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TND280Event::Header*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrueVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrueVertex(void *p = 0);
   static void *newArray_NDcLcLTTrueVertex(Long_t size, void *p);
   static void delete_NDcLcLTTrueVertex(void *p);
   static void deleteArray_NDcLcLTTrueVertex(void *p);
   static void destruct_NDcLcLTTrueVertex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrueVertex*)
   {
      ::ND::TTrueVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrueVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrueVertex", ::ND::TTrueVertex::Class_Version(), "./ND__TTrueVertex.h", 18,
                  typeid(::ND::TTrueVertex), DefineBehavior(ptr, ptr),
                  &::ND::TTrueVertex::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrueVertex) );
      instance.SetNew(&new_NDcLcLTTrueVertex);
      instance.SetNewArray(&newArray_NDcLcLTTrueVertex);
      instance.SetDelete(&delete_NDcLcLTTrueVertex);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrueVertex);
      instance.SetDestructor(&destruct_NDcLcLTTrueVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrueVertex*)
   {
      return GenerateInitInstanceLocal((::ND::TTrueVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrueVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrueParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrueParticle(void *p = 0);
   static void *newArray_NDcLcLTTrueParticle(Long_t size, void *p);
   static void delete_NDcLcLTTrueParticle(void *p);
   static void deleteArray_NDcLcLTTrueParticle(void *p);
   static void destruct_NDcLcLTTrueParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrueParticle*)
   {
      ::ND::TTrueParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrueParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrueParticle", ::ND::TTrueParticle::Class_Version(), "./ND__TTrueParticle.h", 18,
                  typeid(::ND::TTrueParticle), DefineBehavior(ptr, ptr),
                  &::ND::TTrueParticle::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrueParticle) );
      instance.SetNew(&new_NDcLcLTTrueParticle);
      instance.SetNewArray(&newArray_NDcLcLTTrueParticle);
      instance.SetDelete(&delete_NDcLcLTTrueParticle);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrueParticle);
      instance.SetDestructor(&destruct_NDcLcLTTrueParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrueParticle*)
   {
      return GenerateInitInstanceLocal((::ND::TTrueParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrueParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTSubBaseObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTSubBaseObject(void *p = 0);
   static void *newArray_NDcLcLTSubBaseObject(Long_t size, void *p);
   static void delete_NDcLcLTSubBaseObject(void *p);
   static void deleteArray_NDcLcLTSubBaseObject(void *p);
   static void destruct_NDcLcLTSubBaseObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TSubBaseObject*)
   {
      ::ND::TSubBaseObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TSubBaseObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TSubBaseObject", ::ND::TSubBaseObject::Class_Version(), "./ND__TSubBaseObject.h", 20,
                  typeid(::ND::TSubBaseObject), DefineBehavior(ptr, ptr),
                  &::ND::TSubBaseObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TSubBaseObject) );
      instance.SetNew(&new_NDcLcLTSubBaseObject);
      instance.SetNewArray(&newArray_NDcLcLTSubBaseObject);
      instance.SetDelete(&delete_NDcLcLTSubBaseObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTSubBaseObject);
      instance.SetDestructor(&destruct_NDcLcLTSubBaseObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TSubBaseObject*)
   {
      return GenerateInitInstanceLocal((::ND::TSubBaseObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TSubBaseObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTSubBaseShowerObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTSubBaseShowerObject(void *p = 0);
   static void *newArray_NDcLcLTSubBaseShowerObject(Long_t size, void *p);
   static void delete_NDcLcLTSubBaseShowerObject(void *p);
   static void deleteArray_NDcLcLTSubBaseShowerObject(void *p);
   static void destruct_NDcLcLTSubBaseShowerObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TSubBaseShowerObject*)
   {
      ::ND::TSubBaseShowerObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TSubBaseShowerObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TSubBaseShowerObject", ::ND::TSubBaseShowerObject::Class_Version(), "./ND__TSubBaseShowerObject.h", 18,
                  typeid(::ND::TSubBaseShowerObject), DefineBehavior(ptr, ptr),
                  &::ND::TSubBaseShowerObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TSubBaseShowerObject) );
      instance.SetNew(&new_NDcLcLTSubBaseShowerObject);
      instance.SetNewArray(&newArray_NDcLcLTSubBaseShowerObject);
      instance.SetDelete(&delete_NDcLcLTSubBaseShowerObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTSubBaseShowerObject);
      instance.SetDestructor(&destruct_NDcLcLTSubBaseShowerObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TSubBaseShowerObject*)
   {
      return GenerateInitInstanceLocal((::ND::TSubBaseShowerObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TSubBaseShowerObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLGRooTrackerVtx_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLGRooTrackerVtx(void *p = 0);
   static void *newArray_NDcLcLGRooTrackerVtx(Long_t size, void *p);
   static void delete_NDcLcLGRooTrackerVtx(void *p);
   static void deleteArray_NDcLcLGRooTrackerVtx(void *p);
   static void destruct_NDcLcLGRooTrackerVtx(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::GRooTrackerVtx*)
   {
      ::ND::GRooTrackerVtx *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::GRooTrackerVtx >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::GRooTrackerVtx", ::ND::GRooTrackerVtx::Class_Version(), "./ND__GRooTrackerVtx.h", 18,
                  typeid(::ND::GRooTrackerVtx), DefineBehavior(ptr, ptr),
                  &::ND::GRooTrackerVtx::Dictionary, isa_proxy, 4,
                  sizeof(::ND::GRooTrackerVtx) );
      instance.SetNew(&new_NDcLcLGRooTrackerVtx);
      instance.SetNewArray(&newArray_NDcLcLGRooTrackerVtx);
      instance.SetDelete(&delete_NDcLcLGRooTrackerVtx);
      instance.SetDeleteArray(&deleteArray_NDcLcLGRooTrackerVtx);
      instance.SetDestructor(&destruct_NDcLcLGRooTrackerVtx);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::GRooTrackerVtx*)
   {
      return GenerateInitInstanceLocal((::ND::GRooTrackerVtx*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::GRooTrackerVtx*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLJNuBeamFlux_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLJNuBeamFlux(void *p = 0);
   static void *newArray_NDcLcLJNuBeamFlux(Long_t size, void *p);
   static void delete_NDcLcLJNuBeamFlux(void *p);
   static void deleteArray_NDcLcLJNuBeamFlux(void *p);
   static void destruct_NDcLcLJNuBeamFlux(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::JNuBeamFlux*)
   {
      ::ND::JNuBeamFlux *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::JNuBeamFlux >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::JNuBeamFlux", ::ND::JNuBeamFlux::Class_Version(), "./ND__JNuBeamFlux.h", 18,
                  typeid(::ND::JNuBeamFlux), DefineBehavior(ptr, ptr),
                  &::ND::JNuBeamFlux::Dictionary, isa_proxy, 4,
                  sizeof(::ND::JNuBeamFlux) );
      instance.SetNew(&new_NDcLcLJNuBeamFlux);
      instance.SetNewArray(&newArray_NDcLcLJNuBeamFlux);
      instance.SetDelete(&delete_NDcLcLJNuBeamFlux);
      instance.SetDeleteArray(&deleteArray_NDcLcLJNuBeamFlux);
      instance.SetDestructor(&destruct_NDcLcLJNuBeamFlux);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::JNuBeamFlux*)
   {
      return GenerateInitInstanceLocal((::ND::JNuBeamFlux*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::JNuBeamFlux*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLRooTrackerVtxBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLRooTrackerVtxBase(void *p = 0);
   static void *newArray_NDcLcLRooTrackerVtxBase(Long_t size, void *p);
   static void delete_NDcLcLRooTrackerVtxBase(void *p);
   static void deleteArray_NDcLcLRooTrackerVtxBase(void *p);
   static void destruct_NDcLcLRooTrackerVtxBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::RooTrackerVtxBase*)
   {
      ::ND::RooTrackerVtxBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::RooTrackerVtxBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::RooTrackerVtxBase", ::ND::RooTrackerVtxBase::Class_Version(), "./ND__RooTrackerVtxBase.h", 17,
                  typeid(::ND::RooTrackerVtxBase), DefineBehavior(ptr, ptr),
                  &::ND::RooTrackerVtxBase::Dictionary, isa_proxy, 4,
                  sizeof(::ND::RooTrackerVtxBase) );
      instance.SetNew(&new_NDcLcLRooTrackerVtxBase);
      instance.SetNewArray(&newArray_NDcLcLRooTrackerVtxBase);
      instance.SetDelete(&delete_NDcLcLRooTrackerVtxBase);
      instance.SetDeleteArray(&deleteArray_NDcLcLRooTrackerVtxBase);
      instance.SetDestructor(&destruct_NDcLcLRooTrackerVtxBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::RooTrackerVtxBase*)
   {
      return GenerateInitInstanceLocal((::ND::RooTrackerVtxBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::RooTrackerVtxBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLNRooTrackerVtx_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLNRooTrackerVtx(void *p = 0);
   static void *newArray_NDcLcLNRooTrackerVtx(Long_t size, void *p);
   static void delete_NDcLcLNRooTrackerVtx(void *p);
   static void deleteArray_NDcLcLNRooTrackerVtx(void *p);
   static void destruct_NDcLcLNRooTrackerVtx(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::NRooTrackerVtx*)
   {
      ::ND::NRooTrackerVtx *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::NRooTrackerVtx >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::NRooTrackerVtx", ::ND::NRooTrackerVtx::Class_Version(), "./ND__NRooTrackerVtx.h", 18,
                  typeid(::ND::NRooTrackerVtx), DefineBehavior(ptr, ptr),
                  &::ND::NRooTrackerVtx::Dictionary, isa_proxy, 4,
                  sizeof(::ND::NRooTrackerVtx) );
      instance.SetNew(&new_NDcLcLNRooTrackerVtx);
      instance.SetNewArray(&newArray_NDcLcLNRooTrackerVtx);
      instance.SetDelete(&delete_NDcLcLNRooTrackerVtx);
      instance.SetDeleteArray(&deleteArray_NDcLcLNRooTrackerVtx);
      instance.SetDestructor(&destruct_NDcLcLNRooTrackerVtx);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::NRooTrackerVtx*)
   {
      return GenerateInitInstanceLocal((::ND::NRooTrackerVtx*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::NRooTrackerVtx*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLToaAnalysisUtils_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLToaAnalysisUtils(void *p = 0);
   static void *newArray_NDcLcLToaAnalysisUtils(Long_t size, void *p);
   static void delete_NDcLcLToaAnalysisUtils(void *p);
   static void deleteArray_NDcLcLToaAnalysisUtils(void *p);
   static void destruct_NDcLcLToaAnalysisUtils(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::ToaAnalysisUtils*)
   {
      ::ND::ToaAnalysisUtils *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::ToaAnalysisUtils >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::ToaAnalysisUtils", ::ND::ToaAnalysisUtils::Class_Version(), "./ND__ToaAnalysisUtils.h", 17,
                  typeid(::ND::ToaAnalysisUtils), DefineBehavior(ptr, ptr),
                  &::ND::ToaAnalysisUtils::Dictionary, isa_proxy, 4,
                  sizeof(::ND::ToaAnalysisUtils) );
      instance.SetNew(&new_NDcLcLToaAnalysisUtils);
      instance.SetNewArray(&newArray_NDcLcLToaAnalysisUtils);
      instance.SetDelete(&delete_NDcLcLToaAnalysisUtils);
      instance.SetDeleteArray(&deleteArray_NDcLcLToaAnalysisUtils);
      instance.SetDestructor(&destruct_NDcLcLToaAnalysisUtils);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::ToaAnalysisUtils*)
   {
      return GenerateInitInstanceLocal((::ND::ToaAnalysisUtils*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::ToaAnalysisUtils*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTBasicHeaderModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTBasicHeaderModule(void *p = 0);
   static void *newArray_NDcLcLTBasicHeaderModule(Long_t size, void *p);
   static void delete_NDcLcLTBasicHeaderModule(void *p);
   static void deleteArray_NDcLcLTBasicHeaderModule(void *p);
   static void destruct_NDcLcLTBasicHeaderModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TBasicHeaderModule*)
   {
      ::ND::TBasicHeaderModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TBasicHeaderModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TBasicHeaderModule", ::ND::TBasicHeaderModule::Class_Version(), "./ND__TBasicHeaderModule.h", 17,
                  typeid(::ND::TBasicHeaderModule), DefineBehavior(ptr, ptr),
                  &::ND::TBasicHeaderModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TBasicHeaderModule) );
      instance.SetNew(&new_NDcLcLTBasicHeaderModule);
      instance.SetNewArray(&newArray_NDcLcLTBasicHeaderModule);
      instance.SetDelete(&delete_NDcLcLTBasicHeaderModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTBasicHeaderModule);
      instance.SetDestructor(&destruct_NDcLcLTBasicHeaderModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TBasicHeaderModule*)
   {
      return GenerateInitInstanceLocal((::ND::TBasicHeaderModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TBasicHeaderModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTAnalysisHeaderModuleBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTAnalysisHeaderModuleBase(void *p = 0);
   static void *newArray_NDcLcLTAnalysisHeaderModuleBase(Long_t size, void *p);
   static void delete_NDcLcLTAnalysisHeaderModuleBase(void *p);
   static void deleteArray_NDcLcLTAnalysisHeaderModuleBase(void *p);
   static void destruct_NDcLcLTAnalysisHeaderModuleBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TAnalysisHeaderModuleBase*)
   {
      ::ND::TAnalysisHeaderModuleBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TAnalysisHeaderModuleBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TAnalysisHeaderModuleBase", ::ND::TAnalysisHeaderModuleBase::Class_Version(), "./ND__TAnalysisHeaderModuleBase.h", 17,
                  typeid(::ND::TAnalysisHeaderModuleBase), DefineBehavior(ptr, ptr),
                  &::ND::TAnalysisHeaderModuleBase::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TAnalysisHeaderModuleBase) );
      instance.SetNew(&new_NDcLcLTAnalysisHeaderModuleBase);
      instance.SetNewArray(&newArray_NDcLcLTAnalysisHeaderModuleBase);
      instance.SetDelete(&delete_NDcLcLTAnalysisHeaderModuleBase);
      instance.SetDeleteArray(&deleteArray_NDcLcLTAnalysisHeaderModuleBase);
      instance.SetDestructor(&destruct_NDcLcLTAnalysisHeaderModuleBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TAnalysisHeaderModuleBase*)
   {
      return GenerateInitInstanceLocal((::ND::TAnalysisHeaderModuleBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TAnalysisHeaderModuleBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTAnalysisModuleBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTAnalysisModuleBase(void *p = 0);
   static void *newArray_NDcLcLTAnalysisModuleBase(Long_t size, void *p);
   static void delete_NDcLcLTAnalysisModuleBase(void *p);
   static void deleteArray_NDcLcLTAnalysisModuleBase(void *p);
   static void destruct_NDcLcLTAnalysisModuleBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TAnalysisModuleBase*)
   {
      ::ND::TAnalysisModuleBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TAnalysisModuleBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TAnalysisModuleBase", ::ND::TAnalysisModuleBase::Class_Version(), "./ND__TAnalysisModuleBase.h", 20,
                  typeid(::ND::TAnalysisModuleBase), DefineBehavior(ptr, ptr),
                  &::ND::TAnalysisModuleBase::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TAnalysisModuleBase) );
      instance.SetNew(&new_NDcLcLTAnalysisModuleBase);
      instance.SetNewArray(&newArray_NDcLcLTAnalysisModuleBase);
      instance.SetDelete(&delete_NDcLcLTAnalysisModuleBase);
      instance.SetDeleteArray(&deleteArray_NDcLcLTAnalysisModuleBase);
      instance.SetDestructor(&destruct_NDcLcLTAnalysisModuleBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TAnalysisModuleBase*)
   {
      return GenerateInitInstanceLocal((::ND::TAnalysisModuleBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TAnalysisModuleBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTBasicDataQualityModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTBasicDataQualityModule(void *p = 0);
   static void *newArray_NDcLcLTBasicDataQualityModule(Long_t size, void *p);
   static void delete_NDcLcLTBasicDataQualityModule(void *p);
   static void deleteArray_NDcLcLTBasicDataQualityModule(void *p);
   static void destruct_NDcLcLTBasicDataQualityModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TBasicDataQualityModule*)
   {
      ::ND::TBasicDataQualityModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TBasicDataQualityModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TBasicDataQualityModule", ::ND::TBasicDataQualityModule::Class_Version(), "./ND__TBasicDataQualityModule.h", 17,
                  typeid(::ND::TBasicDataQualityModule), DefineBehavior(ptr, ptr),
                  &::ND::TBasicDataQualityModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TBasicDataQualityModule) );
      instance.SetNew(&new_NDcLcLTBasicDataQualityModule);
      instance.SetNewArray(&newArray_NDcLcLTBasicDataQualityModule);
      instance.SetDelete(&delete_NDcLcLTBasicDataQualityModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTBasicDataQualityModule);
      instance.SetDestructor(&destruct_NDcLcLTBasicDataQualityModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TBasicDataQualityModule*)
   {
      return GenerateInitInstanceLocal((::ND::TBasicDataQualityModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TBasicDataQualityModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTruthTrajectoriesModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTruthTrajectoriesModule(void *p = 0);
   static void *newArray_NDcLcLTTruthTrajectoriesModule(Long_t size, void *p);
   static void delete_NDcLcLTTruthTrajectoriesModule(void *p);
   static void deleteArray_NDcLcLTTruthTrajectoriesModule(void *p);
   static void destruct_NDcLcLTTruthTrajectoriesModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTruthTrajectoriesModule*)
   {
      ::ND::TTruthTrajectoriesModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTruthTrajectoriesModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTruthTrajectoriesModule", ::ND::TTruthTrajectoriesModule::Class_Version(), "./ND__TTruthTrajectoriesModule.h", 25,
                  typeid(::ND::TTruthTrajectoriesModule), DefineBehavior(ptr, ptr),
                  &::ND::TTruthTrajectoriesModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTruthTrajectoriesModule) );
      instance.SetNew(&new_NDcLcLTTruthTrajectoriesModule);
      instance.SetNewArray(&newArray_NDcLcLTTruthTrajectoriesModule);
      instance.SetDelete(&delete_NDcLcLTTruthTrajectoriesModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTruthTrajectoriesModule);
      instance.SetDestructor(&destruct_NDcLcLTTruthTrajectoriesModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTruthTrajectoriesModule*)
   {
      return GenerateInitInstanceLocal((::ND::TTruthTrajectoriesModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTAnalysisTruthModuleBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTAnalysisTruthModuleBase(void *p = 0);
   static void *newArray_NDcLcLTAnalysisTruthModuleBase(Long_t size, void *p);
   static void delete_NDcLcLTAnalysisTruthModuleBase(void *p);
   static void deleteArray_NDcLcLTAnalysisTruthModuleBase(void *p);
   static void destruct_NDcLcLTAnalysisTruthModuleBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TAnalysisTruthModuleBase*)
   {
      ::ND::TAnalysisTruthModuleBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TAnalysisTruthModuleBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TAnalysisTruthModuleBase", ::ND::TAnalysisTruthModuleBase::Class_Version(), "./ND__TAnalysisTruthModuleBase.h", 17,
                  typeid(::ND::TAnalysisTruthModuleBase), DefineBehavior(ptr, ptr),
                  &::ND::TAnalysisTruthModuleBase::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TAnalysisTruthModuleBase) );
      instance.SetNew(&new_NDcLcLTAnalysisTruthModuleBase);
      instance.SetNewArray(&newArray_NDcLcLTAnalysisTruthModuleBase);
      instance.SetDelete(&delete_NDcLcLTAnalysisTruthModuleBase);
      instance.SetDeleteArray(&deleteArray_NDcLcLTAnalysisTruthModuleBase);
      instance.SetDestructor(&destruct_NDcLcLTAnalysisTruthModuleBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TAnalysisTruthModuleBase*)
   {
      return GenerateInitInstanceLocal((::ND::TAnalysisTruthModuleBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TAnalysisTruthModuleBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p = 0);
   static void *newArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(Long_t size, void *p);
   static void delete_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p);
   static void deleteArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p);
   static void destruct_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)
   {
      ::ND::TTruthTrajectoriesModule::TTruthTrajectory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTruthTrajectoriesModule::TTruthTrajectory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTruthTrajectoriesModule::TTruthTrajectory", ::ND::TTruthTrajectoriesModule::TTruthTrajectory::Class_Version(), "./ND__TTruthTrajectoriesModule.h", 33,
                  typeid(::ND::TTruthTrajectoriesModule::TTruthTrajectory), DefineBehavior(ptr, ptr),
                  &::ND::TTruthTrajectoriesModule::TTruthTrajectory::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTruthTrajectoriesModule::TTruthTrajectory) );
      instance.SetNew(&new_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
      instance.SetNewArray(&newArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
      instance.SetDelete(&delete_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
      instance.SetDestructor(&destruct_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)
   {
      return GenerateInitInstanceLocal((::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTruthVerticesModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTruthVerticesModule(void *p = 0);
   static void *newArray_NDcLcLTTruthVerticesModule(Long_t size, void *p);
   static void delete_NDcLcLTTruthVerticesModule(void *p);
   static void deleteArray_NDcLcLTTruthVerticesModule(void *p);
   static void destruct_NDcLcLTTruthVerticesModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTruthVerticesModule*)
   {
      ::ND::TTruthVerticesModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTruthVerticesModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTruthVerticesModule", ::ND::TTruthVerticesModule::Class_Version(), "./ND__TTruthVerticesModule.h", 23,
                  typeid(::ND::TTruthVerticesModule), DefineBehavior(ptr, ptr),
                  &::ND::TTruthVerticesModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTruthVerticesModule) );
      instance.SetNew(&new_NDcLcLTTruthVerticesModule);
      instance.SetNewArray(&newArray_NDcLcLTTruthVerticesModule);
      instance.SetDelete(&delete_NDcLcLTTruthVerticesModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTruthVerticesModule);
      instance.SetDestructor(&destruct_NDcLcLTTruthVerticesModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTruthVerticesModule*)
   {
      return GenerateInitInstanceLocal((::ND::TTruthVerticesModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTruthVerticesModulecLcLTTruthVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p = 0);
   static void *newArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex(Long_t size, void *p);
   static void delete_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p);
   static void deleteArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p);
   static void destruct_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTruthVerticesModule::TTruthVertex*)
   {
      ::ND::TTruthVerticesModule::TTruthVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTruthVerticesModule::TTruthVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTruthVerticesModule::TTruthVertex", ::ND::TTruthVerticesModule::TTruthVertex::Class_Version(), "./ND__TTruthVerticesModule.h", 31,
                  typeid(::ND::TTruthVerticesModule::TTruthVertex), DefineBehavior(ptr, ptr),
                  &::ND::TTruthVerticesModule::TTruthVertex::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTruthVerticesModule::TTruthVertex) );
      instance.SetNew(&new_NDcLcLTTruthVerticesModulecLcLTTruthVertex);
      instance.SetNewArray(&newArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex);
      instance.SetDelete(&delete_NDcLcLTTruthVerticesModulecLcLTTruthVertex);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex);
      instance.SetDestructor(&destruct_NDcLcLTTruthVerticesModulecLcLTTruthVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTruthVerticesModule::TTruthVertex*)
   {
      return GenerateInitInstanceLocal((::ND::TTruthVerticesModule::TTruthVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule::TTruthVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DReconModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModule(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModule(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModule(void *p);
   static void deleteArray_NDcLcLTP0DReconModule(void *p);
   static void destruct_NDcLcLTP0DReconModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule*)
   {
      ::ND::TP0DReconModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule", ::ND::TP0DReconModule::Class_Version(), "./ND__TP0DReconModule.h", 27,
                  typeid(::ND::TP0DReconModule), DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule) );
      instance.SetNew(&new_NDcLcLTP0DReconModule);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModule);
      instance.SetDelete(&delete_NDcLcLTP0DReconModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModule);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTAnalysisReconModuleBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTAnalysisReconModuleBase(void *p = 0);
   static void *newArray_NDcLcLTAnalysisReconModuleBase(Long_t size, void *p);
   static void delete_NDcLcLTAnalysisReconModuleBase(void *p);
   static void deleteArray_NDcLcLTAnalysisReconModuleBase(void *p);
   static void destruct_NDcLcLTAnalysisReconModuleBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TAnalysisReconModuleBase*)
   {
      ::ND::TAnalysisReconModuleBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TAnalysisReconModuleBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TAnalysisReconModuleBase", ::ND::TAnalysisReconModuleBase::Class_Version(), "./ND__TAnalysisReconModuleBase.h", 17,
                  typeid(::ND::TAnalysisReconModuleBase), DefineBehavior(ptr, ptr),
                  &::ND::TAnalysisReconModuleBase::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TAnalysisReconModuleBase) );
      instance.SetNew(&new_NDcLcLTAnalysisReconModuleBase);
      instance.SetNewArray(&newArray_NDcLcLTAnalysisReconModuleBase);
      instance.SetDelete(&delete_NDcLcLTAnalysisReconModuleBase);
      instance.SetDeleteArray(&deleteArray_NDcLcLTAnalysisReconModuleBase);
      instance.SetDestructor(&destruct_NDcLcLTAnalysisReconModuleBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TAnalysisReconModuleBase*)
   {
      return GenerateInitInstanceLocal((::ND::TAnalysisReconModuleBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TAnalysisReconModuleBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DReconModulecLcLTP0DAlgoRes_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DAlgoRes*)
   {
      ::ND::TP0DReconModule::TP0DAlgoRes *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DAlgoRes >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DAlgoRes", ::ND::TP0DReconModule::TP0DAlgoRes::Class_Version(), "./ND__TP0DReconModule.h", 287,
                  typeid(::ND::TP0DReconModule::TP0DAlgoRes), DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DAlgoRes::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DAlgoRes) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DAlgoRes);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DAlgoRes);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DAlgoRes);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DAlgoRes*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DAlgoRes*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DAlgoRes*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DReconModulecLcLTP0DVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DVertex(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DVertex*)
   {
      ::ND::TP0DReconModule::TP0DVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DVertex", ::ND::TP0DReconModule::TP0DVertex::Class_Version(), "./ND__TP0DReconModule.h", 251,
                  typeid(::ND::TP0DReconModule::TP0DVertex), DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DVertex::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DVertex) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DVertex);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DVertex);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DVertex);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DVertex);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DVertex*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DReconModulecLcLTP0DParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DParticle(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DParticle*)
   {
      ::ND::TP0DReconModule::TP0DParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DParticle", ::ND::TP0DReconModule::TP0DParticle::Class_Version(), "./ND__TP0DReconModule.h", 204,
                  typeid(::ND::TP0DReconModule::TP0DParticle), DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DParticle::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DParticle) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DParticle);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DParticle);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DParticle);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DParticle);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DParticle*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DReconModulecLcLTP0DShower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DShower(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DShower(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DShower(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DShower(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DShower(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DShower*)
   {
      ::ND::TP0DReconModule::TP0DShower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DShower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DShower", ::ND::TP0DReconModule::TP0DShower::Class_Version(), "./ND__TP0DReconModule.h", 161,
                  typeid(::ND::TP0DReconModule::TP0DShower), DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DShower::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DShower) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DShower);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DShower);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DShower);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DShower);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DShower);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DShower*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DShower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DShower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DReconModulecLcLTP0DTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DTrack(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DTrack*)
   {
      ::ND::TP0DReconModule::TP0DTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DTrack", ::ND::TP0DReconModule::TP0DTrack::Class_Version(), "./ND__TP0DReconModule.h", 120,
                  typeid(::ND::TP0DReconModule::TP0DTrack), DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DTrack) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DTrack);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DTrack);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DTrack);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DReconModulecLcLTP0DNode_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DNode(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DNode(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DNode(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DNode(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DNode(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DNode*)
   {
      ::ND::TP0DReconModule::TP0DNode *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DNode >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DNode", ::ND::TP0DReconModule::TP0DNode::Class_Version(), "./ND__TP0DReconModule.h", 95,
                  typeid(::ND::TP0DReconModule::TP0DNode), DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DNode::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DNode) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DNode);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DNode);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DNode);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DNode);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DNode);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DNode*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DNode*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DNode*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DReconModulecLcLTP0DHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DHit(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DHit(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DHit(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DHit(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DHit*)
   {
      ::ND::TP0DReconModule::TP0DHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DHit", ::ND::TP0DReconModule::TP0DHit::Class_Version(), "./ND__TP0DReconModule.h", 77,
                  typeid(::ND::TP0DReconModule::TP0DHit), DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DHit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DHit) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DHit);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DHit);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DHit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DHit);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DHit*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DReconModulecLcLTP0DCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p = 0);
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DCluster(Long_t size, void *p);
   static void delete_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p);
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p);
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DReconModule::TP0DCluster*)
   {
      ::ND::TP0DReconModule::TP0DCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DReconModule::TP0DCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DReconModule::TP0DCluster", ::ND::TP0DReconModule::TP0DCluster::Class_Version(), "./ND__TP0DReconModule.h", 42,
                  typeid(::ND::TP0DReconModule::TP0DCluster), DefineBehavior(ptr, ptr),
                  &::ND::TP0DReconModule::TP0DCluster::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DReconModule::TP0DCluster) );
      instance.SetNew(&new_NDcLcLTP0DReconModulecLcLTP0DCluster);
      instance.SetNewArray(&newArray_NDcLcLTP0DReconModulecLcLTP0DCluster);
      instance.SetDelete(&delete_NDcLcLTP0DReconModulecLcLTP0DCluster);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DReconModulecLcLTP0DCluster);
      instance.SetDestructor(&destruct_NDcLcLTP0DReconModulecLcLTP0DCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DReconModule::TP0DCluster*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DReconModule::TP0DCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DECALReconModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DECALReconModule(void *p = 0);
   static void *newArray_NDcLcLTP0DECALReconModule(Long_t size, void *p);
   static void delete_NDcLcLTP0DECALReconModule(void *p);
   static void deleteArray_NDcLcLTP0DECALReconModule(void *p);
   static void destruct_NDcLcLTP0DECALReconModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DECALReconModule*)
   {
      ::ND::TP0DECALReconModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DECALReconModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DECALReconModule", ::ND::TP0DECALReconModule::Class_Version(), "./ND__TP0DECALReconModule.h", 20,
                  typeid(::ND::TP0DECALReconModule), DefineBehavior(ptr, ptr),
                  &::ND::TP0DECALReconModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DECALReconModule) );
      instance.SetNew(&new_NDcLcLTP0DECALReconModule);
      instance.SetNewArray(&newArray_NDcLcLTP0DECALReconModule);
      instance.SetDelete(&delete_NDcLcLTP0DECALReconModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DECALReconModule);
      instance.SetDestructor(&destruct_NDcLcLTP0DECALReconModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DECALReconModule*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DECALReconModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p = 0);
   static void *newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(Long_t size, void *p);
   static void delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p);
   static void deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p);
   static void destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)
   {
      ::ND::TP0DECALReconModule::TP0DECALReconTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DECALReconModule::TP0DECALReconTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DECALReconModule::TP0DECALReconTrack", ::ND::TP0DECALReconModule::TP0DECALReconTrack::Class_Version(), "./ND__TP0DECALReconModule.h", 59,
                  typeid(::ND::TP0DECALReconModule::TP0DECALReconTrack), DefineBehavior(ptr, ptr),
                  &::ND::TP0DECALReconModule::TP0DECALReconTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DECALReconModule::TP0DECALReconTrack) );
      instance.SetNew(&new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
      instance.SetNewArray(&newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
      instance.SetDelete(&delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
      instance.SetDestructor(&destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DECALReconModule::TP0DECALReconTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p = 0);
   static void *newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(Long_t size, void *p);
   static void delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p);
   static void deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p);
   static void destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TP0DECALReconModule::TP0DECALReconShower*)
   {
      ::ND::TP0DECALReconModule::TP0DECALReconShower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TP0DECALReconModule::TP0DECALReconShower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TP0DECALReconModule::TP0DECALReconShower", ::ND::TP0DECALReconModule::TP0DECALReconShower::Class_Version(), "./ND__TP0DECALReconModule.h", 29,
                  typeid(::ND::TP0DECALReconModule::TP0DECALReconShower), DefineBehavior(ptr, ptr),
                  &::ND::TP0DECALReconModule::TP0DECALReconShower::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TP0DECALReconModule::TP0DECALReconShower) );
      instance.SetNew(&new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
      instance.SetNewArray(&newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
      instance.SetDelete(&delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
      instance.SetDeleteArray(&deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
      instance.SetDestructor(&destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TP0DECALReconModule::TP0DECALReconShower*)
   {
      return GenerateInitInstanceLocal((::ND::TP0DECALReconModule::TP0DECALReconShower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconShower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerECALReconModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALReconModule(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALReconModule(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALReconModule(void *p);
   static void deleteArray_NDcLcLTTrackerECALReconModule(void *p);
   static void destruct_NDcLcLTTrackerECALReconModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALReconModule*)
   {
      ::ND::TTrackerECALReconModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALReconModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALReconModule", ::ND::TTrackerECALReconModule::Class_Version(), "./ND__TTrackerECALReconModule.h", 25,
                  typeid(::ND::TTrackerECALReconModule), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALReconModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALReconModule) );
      instance.SetNew(&new_NDcLcLTTrackerECALReconModule);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALReconModule);
      instance.SetDelete(&delete_NDcLcLTTrackerECALReconModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALReconModule);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALReconModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALReconModule*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALReconModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerECALReconModulecLcLTECALReconObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p);
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p);
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALReconModule::TECALReconObject*)
   {
      ::ND::TTrackerECALReconModule::TECALReconObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALReconModule::TECALReconObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALReconModule::TECALReconObject", ::ND::TTrackerECALReconModule::TECALReconObject::Class_Version(), "./ND__TTrackerECALReconModule.h", 130,
                  typeid(::ND::TTrackerECALReconModule::TECALReconObject), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALReconModule::TECALReconObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALReconModule::TECALReconObject) );
      instance.SetNew(&new_NDcLcLTTrackerECALReconModulecLcLTECALReconObject);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject);
      instance.SetDelete(&delete_NDcLcLTTrackerECALReconModulecLcLTECALReconObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALReconModule::TECALReconObject*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALReconModule::TECALReconObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerECALReconModulecLcLTECALReconTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p);
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p);
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALReconModule::TECALReconTrack*)
   {
      ::ND::TTrackerECALReconModule::TECALReconTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALReconModule::TECALReconTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALReconModule::TECALReconTrack", ::ND::TTrackerECALReconModule::TECALReconTrack::Class_Version(), "./ND__TTrackerECALReconModule.h", 106,
                  typeid(::ND::TTrackerECALReconModule::TECALReconTrack), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALReconModule::TECALReconTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALReconModule::TECALReconTrack) );
      instance.SetNew(&new_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
      instance.SetDelete(&delete_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALReconModule::TECALReconTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALReconModule::TECALReconTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerECALReconModulecLcLTECALReconShower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p);
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p);
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALReconModule::TECALReconShower*)
   {
      ::ND::TTrackerECALReconModule::TECALReconShower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALReconModule::TECALReconShower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALReconModule::TECALReconShower", ::ND::TTrackerECALReconModule::TECALReconShower::Class_Version(), "./ND__TTrackerECALReconModule.h", 83,
                  typeid(::ND::TTrackerECALReconModule::TECALReconShower), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALReconModule::TECALReconShower::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALReconModule::TECALReconShower) );
      instance.SetNew(&new_NDcLcLTTrackerECALReconModulecLcLTECALReconShower);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower);
      instance.SetDelete(&delete_NDcLcLTTrackerECALReconModulecLcLTECALReconShower);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconShower);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALReconModule::TECALReconShower*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALReconModule::TECALReconShower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconShower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerECALReconModulecLcLTECALReconCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p);
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p);
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALReconModule::TECALReconCluster*)
   {
      ::ND::TTrackerECALReconModule::TECALReconCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALReconModule::TECALReconCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALReconModule::TECALReconCluster", ::ND::TTrackerECALReconModule::TECALReconCluster::Class_Version(), "./ND__TTrackerECALReconModule.h", 63,
                  typeid(::ND::TTrackerECALReconModule::TECALReconCluster), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALReconModule::TECALReconCluster::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALReconModule::TECALReconCluster) );
      instance.SetNew(&new_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
      instance.SetDelete(&delete_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALReconModule::TECALReconCluster*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALReconModule::TECALReconCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p);
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p);
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)
   {
      ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALReconModule::TECALReconUnmatchedObject", ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class_Version(), "./ND__TTrackerECALReconModule.h", 37,
                  typeid(::ND::TTrackerECALReconModule::TECALReconUnmatchedObject), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALReconModule::TECALReconUnmatchedObject) );
      instance.SetNew(&new_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
      instance.SetDelete(&delete_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerECALPi0ReconModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerECALPi0ReconModule(void *p = 0);
   static void *newArray_NDcLcLTTrackerECALPi0ReconModule(Long_t size, void *p);
   static void delete_NDcLcLTTrackerECALPi0ReconModule(void *p);
   static void deleteArray_NDcLcLTTrackerECALPi0ReconModule(void *p);
   static void destruct_NDcLcLTTrackerECALPi0ReconModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerECALPi0ReconModule*)
   {
      ::ND::TTrackerECALPi0ReconModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerECALPi0ReconModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerECALPi0ReconModule", ::ND::TTrackerECALPi0ReconModule::Class_Version(), "./ND__TTrackerECALPi0ReconModule.h", 17,
                  typeid(::ND::TTrackerECALPi0ReconModule), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerECALPi0ReconModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerECALPi0ReconModule) );
      instance.SetNew(&new_NDcLcLTTrackerECALPi0ReconModule);
      instance.SetNewArray(&newArray_NDcLcLTTrackerECALPi0ReconModule);
      instance.SetDelete(&delete_NDcLcLTTrackerECALPi0ReconModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerECALPi0ReconModule);
      instance.SetDestructor(&destruct_NDcLcLTTrackerECALPi0ReconModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerECALPi0ReconModule*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerECALPi0ReconModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerECALPi0ReconModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModule(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModule(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModule(void *p);
   static void deleteArray_NDcLcLTGlobalReconModule(void *p);
   static void destruct_NDcLcLTGlobalReconModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule*)
   {
      ::ND::TGlobalReconModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule", ::ND::TGlobalReconModule::Class_Version(), "./ND__TGlobalReconModule.h", 29,
                  typeid(::ND::TGlobalReconModule), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule) );
      instance.SetNew(&new_NDcLcLTGlobalReconModule);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModule);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModule);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTGlobalVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TGlobalVertex*)
   {
      ::ND::TGlobalReconModule::TGlobalVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TGlobalVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TGlobalVertex", ::ND::TGlobalReconModule::TGlobalVertex::Class_Version(), "./ND__TGlobalReconModule.h", 519,
                  typeid(::ND::TGlobalReconModule::TGlobalVertex), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TGlobalVertex::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TGlobalVertex) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTGlobalVertex);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTGlobalVertex);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTGlobalVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TGlobalVertex*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TGlobalVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTVertexConstituent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TVertexConstituent*)
   {
      ::ND::TGlobalReconModule::TVertexConstituent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TVertexConstituent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TVertexConstituent", ::ND::TGlobalReconModule::TVertexConstituent::Class_Version(), "./ND__TGlobalReconModule.h", 501,
                  typeid(::ND::TGlobalReconModule::TVertexConstituent), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TVertexConstituent::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TVertexConstituent) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTVertexConstituent);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTVertexConstituent);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTVertexConstituent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TVertexConstituent*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TVertexConstituent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TVertexConstituent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTFgdCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTFgdCluster(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTFgdCluster(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTFgdCluster(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTFgdCluster(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTFgdCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TFgdCluster*)
   {
      ::ND::TGlobalReconModule::TFgdCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TFgdCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TFgdCluster", ::ND::TGlobalReconModule::TFgdCluster::Class_Version(), "./ND__TGlobalReconModule.h", 480,
                  typeid(::ND::TGlobalReconModule::TFgdCluster), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TFgdCluster::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TFgdCluster) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTFgdCluster);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTFgdCluster);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTFgdCluster);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTFgdCluster);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTFgdCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TFgdCluster*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TFgdCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTFgdTimeBin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TFgdTimeBin*)
   {
      ::ND::TGlobalReconModule::TFgdTimeBin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TFgdTimeBin >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TFgdTimeBin", ::ND::TGlobalReconModule::TFgdTimeBin::Class_Version(), "./ND__TGlobalReconModule.h", 452,
                  typeid(::ND::TGlobalReconModule::TFgdTimeBin), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TFgdTimeBin::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TFgdTimeBin) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTFgdTimeBin);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTFgdTimeBin);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTFgdTimeBin);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TFgdTimeBin*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TFgdTimeBin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdTimeBin*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTOutermostHits_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTOutermostHits(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TOutermostHits*)
   {
      ::ND::TGlobalReconModule::TOutermostHits *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TOutermostHits >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TOutermostHits", ::ND::TGlobalReconModule::TOutermostHits::Class_Version(), "./ND__TGlobalReconModule.h", 432,
                  typeid(::ND::TGlobalReconModule::TOutermostHits), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TOutermostHits::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TOutermostHits) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTOutermostHits);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTOutermostHits);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTOutermostHits);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTOutermostHits);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTOutermostHits);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TOutermostHits*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TOutermostHits*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TOutermostHits*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTGlobalHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalHit(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TGlobalHit*)
   {
      ::ND::TGlobalReconModule::TGlobalHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TGlobalHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TGlobalHit", ::ND::TGlobalReconModule::TGlobalHit::Class_Version(), "./ND__TGlobalReconModule.h", 413,
                  typeid(::ND::TGlobalReconModule::TGlobalHit), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TGlobalHit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TGlobalHit) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTGlobalHit);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTGlobalHit);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTGlobalHit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalHit);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTGlobalHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TGlobalHit*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TGlobalHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTGlobalPID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalPID(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TGlobalPID*)
   {
      ::ND::TGlobalReconModule::TGlobalPID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TGlobalPID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TGlobalPID", ::ND::TGlobalReconModule::TGlobalPID::Class_Version(), "./ND__TGlobalReconModule.h", 319,
                  typeid(::ND::TGlobalReconModule::TGlobalPID), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TGlobalPID::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TGlobalPID) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTGlobalPID);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTGlobalPID);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTGlobalPID);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPID);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTGlobalPID);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TGlobalPID*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TGlobalPID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTTPCObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTPCObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TTPCObject*)
   {
      ::ND::TGlobalReconModule::TTPCObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TTPCObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TTPCObject", ::ND::TGlobalReconModule::TTPCObject::Class_Version(), "./ND__TGlobalReconModule.h", 287,
                  typeid(::ND::TGlobalReconModule::TTPCObject), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TTPCObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TTPCObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTTPCObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTTPCObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTTPCObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTTPCObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTTPCObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TTPCObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TTPCObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTFGDObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTFGDObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TFGDObject*)
   {
      ::ND::TGlobalReconModule::TFGDObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TFGDObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TFGDObject", ::ND::TGlobalReconModule::TFGDObject::Class_Version(), "./ND__TGlobalReconModule.h", 242,
                  typeid(::ND::TGlobalReconModule::TFGDObject), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TFGDObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TFGDObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTFGDObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTFGDObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTFGDObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTFGDObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTFGDObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TFGDObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TFGDObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFGDObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTECALObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTECALObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTECALObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTECALObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTECALObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTECALObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TECALObject*)
   {
      ::ND::TGlobalReconModule::TECALObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TECALObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TECALObject", ::ND::TGlobalReconModule::TECALObject::Class_Version(), "./ND__TGlobalReconModule.h", 189,
                  typeid(::ND::TGlobalReconModule::TECALObject), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TECALObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TECALObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTECALObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTECALObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTECALObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTECALObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTECALObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TECALObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TECALObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TECALObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTP0DObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTP0DObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TP0DObject*)
   {
      ::ND::TGlobalReconModule::TP0DObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TP0DObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TP0DObject", ::ND::TGlobalReconModule::TP0DObject::Class_Version(), "./ND__TGlobalReconModule.h", 172,
                  typeid(::ND::TGlobalReconModule::TP0DObject), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TP0DObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TP0DObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTP0DObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTP0DObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTP0DObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTP0DObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTP0DObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TP0DObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TP0DObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TP0DObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTSMRDObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTSMRDObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TSMRDObject*)
   {
      ::ND::TGlobalReconModule::TSMRDObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TSMRDObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TSMRDObject", ::ND::TGlobalReconModule::TSMRDObject::Class_Version(), "./ND__TGlobalReconModule.h", 157,
                  typeid(::ND::TGlobalReconModule::TSMRDObject), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TSMRDObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TSMRDObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTSMRDObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTSMRDObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTSMRDObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTSMRDObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TSMRDObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TSMRDObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTTrackerObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTrackerObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TTrackerObject*)
   {
      ::ND::TGlobalReconModule::TTrackerObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TTrackerObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TTrackerObject", ::ND::TGlobalReconModule::TTrackerObject::Class_Version(), "./ND__TGlobalReconModule.h", 142,
                  typeid(::ND::TGlobalReconModule::TTrackerObject), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TTrackerObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TTrackerObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTTrackerObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTTrackerObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTTrackerObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTTrackerObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTTrackerObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TTrackerObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TTrackerObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTrackerObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)
   {
      ::ND::TGlobalReconModule::TGlobalPIDAlternate *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TGlobalPIDAlternate >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TGlobalPIDAlternate", ::ND::TGlobalReconModule::TGlobalPIDAlternate::Class_Version(), "./ND__TGlobalReconModule.h", 101,
                  typeid(::ND::TGlobalReconModule::TGlobalPIDAlternate), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TGlobalPIDAlternate::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TGlobalPIDAlternate) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TGlobalPIDAlternate*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTTPCOtherObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TTPCOtherObject*)
   {
      ::ND::TGlobalReconModule::TTPCOtherObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TTPCOtherObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TTPCOtherObject", ::ND::TGlobalReconModule::TTPCOtherObject::Class_Version(), "./ND__TGlobalReconModule.h", 76,
                  typeid(::ND::TGlobalReconModule::TTPCOtherObject), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TTPCOtherObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TTPCOtherObject) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTTPCOtherObject);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTTPCOtherObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTTPCOtherObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TTPCOtherObject*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TTPCOtherObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCOtherObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGlobalReconModulecLcLTSMRDHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p = 0);
   static void *newArray_NDcLcLTGlobalReconModulecLcLTSMRDHit(Long_t size, void *p);
   static void delete_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p);
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p);
   static void destruct_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGlobalReconModule::TSMRDHit*)
   {
      ::ND::TGlobalReconModule::TSMRDHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGlobalReconModule::TSMRDHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGlobalReconModule::TSMRDHit", ::ND::TGlobalReconModule::TSMRDHit::Class_Version(), "./ND__TGlobalReconModule.h", 52,
                  typeid(::ND::TGlobalReconModule::TSMRDHit), DefineBehavior(ptr, ptr),
                  &::ND::TGlobalReconModule::TSMRDHit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGlobalReconModule::TSMRDHit) );
      instance.SetNew(&new_NDcLcLTGlobalReconModulecLcLTSMRDHit);
      instance.SetNewArray(&newArray_NDcLcLTGlobalReconModulecLcLTSMRDHit);
      instance.SetDelete(&delete_NDcLcLTGlobalReconModulecLcLTSMRDHit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDHit);
      instance.SetDestructor(&destruct_NDcLcLTGlobalReconModulecLcLTSMRDHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGlobalReconModule::TSMRDHit*)
   {
      return GenerateInitInstanceLocal((::ND::TGlobalReconModule::TSMRDHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerReconModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModule(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModule(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModule(void *p);
   static void deleteArray_NDcLcLTTrackerReconModule(void *p);
   static void destruct_NDcLcLTTrackerReconModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule*)
   {
      ::ND::TTrackerReconModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule", ::ND::TTrackerReconModule::Class_Version(), "./ND__TTrackerReconModule.h", 26,
                  typeid(::ND::TTrackerReconModule), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule) );
      instance.SetNew(&new_NDcLcLTTrackerReconModule);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModule);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModule);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerReconModulecLcLTTrackerVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrackerVertex*)
   {
      ::ND::TTrackerReconModule::TTrackerVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrackerVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrackerVertex", ::ND::TTrackerReconModule::TTrackerVertex::Class_Version(), "./ND__TTrackerReconModule.h", 289,
                  typeid(::ND::TTrackerReconModule::TTrackerVertex), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrackerVertex::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrackerVertex) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrackerVertex);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrackerVertex);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrackerVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrackerVertex*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrackerVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerReconModulecLcLTTrackerResult_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerResult(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrackerResult*)
   {
      ::ND::TTrackerReconModule::TTrackerResult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrackerResult >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrackerResult", ::ND::TTrackerReconModule::TTrackerResult::Class_Version(), "./ND__TTrackerReconModule.h", 241,
                  typeid(::ND::TTrackerReconModule::TTrackerResult), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrackerResult::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrackerResult) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrackerResult);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrackerResult);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrackerResult);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerResult);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrackerResult);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrackerResult*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrackerResult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerReconModulecLcLTTrueParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrueParticle(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrueParticle*)
   {
      ::ND::TTrackerReconModule::TTrueParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrueParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrueParticle", ::ND::TTrackerReconModule::TTrueParticle::Class_Version(), "./ND__TTrackerReconModule.h", 223,
                  typeid(::ND::TTrackerReconModule::TTrueParticle), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrueParticle::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrueParticle) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrueParticle);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrueParticle);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrueParticle);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrueParticle);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrueParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrueParticle*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrueParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrueParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerReconModulecLcLTTrackerConstituent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrackerConstituent*)
   {
      ::ND::TTrackerReconModule::TTrackerConstituent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrackerConstituent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrackerConstituent", ::ND::TTrackerReconModule::TTrackerConstituent::Class_Version(), "./ND__TTrackerReconModule.h", 182,
                  typeid(::ND::TTrackerReconModule::TTrackerConstituent), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrackerConstituent::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrackerConstituent) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrackerConstituent);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrackerConstituent);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrackerConstituent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrackerConstituent*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrackerConstituent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerConstituent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerReconModulecLcLTTPCTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTPCTrack(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTPCTrack*)
   {
      ::ND::TTrackerReconModule::TTPCTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTPCTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTPCTrack", ::ND::TTrackerReconModule::TTPCTrack::Class_Version(), "./ND__TTrackerReconModule.h", 125,
                  typeid(::ND::TTrackerReconModule::TTPCTrack), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTPCTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTPCTrack) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTPCTrack);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTPCTrack);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTPCTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTPCTrack);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTPCTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTPCTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTPCTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTPCTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerReconModulecLcLTFGDTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTFGDTrack(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TFGDTrack*)
   {
      ::ND::TTrackerReconModule::TFGDTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TFGDTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TFGDTrack", ::ND::TTrackerReconModule::TFGDTrack::Class_Version(), "./ND__TTrackerReconModule.h", 105,
                  typeid(::ND::TTrackerReconModule::TFGDTrack), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TFGDTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TFGDTrack) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTFGDTrack);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTFGDTrack);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTFGDTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTFGDTrack);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTFGDTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TFGDTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TFGDTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TFGDTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerReconModulecLcLTTrackerNode_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerNode(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrackerNode*)
   {
      ::ND::TTrackerReconModule::TTrackerNode *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrackerNode >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrackerNode", ::ND::TTrackerReconModule::TTrackerNode::Class_Version(), "./ND__TTrackerReconModule.h", 83,
                  typeid(::ND::TTrackerReconModule::TTrackerNode), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrackerNode::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrackerNode) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrackerNode);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrackerNode);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrackerNode);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerNode);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrackerNode);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrackerNode*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrackerNode*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerNode*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerReconModulecLcLTTrackOther_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackOther(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TTrackOther*)
   {
      ::ND::TTrackerReconModule::TTrackOther *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TTrackOther >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TTrackOther", ::ND::TTrackerReconModule::TTrackOther::Class_Version(), "./ND__TTrackerReconModule.h", 61,
                  typeid(::ND::TTrackerReconModule::TTrackOther), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TTrackOther::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TTrackOther) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTTrackOther);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTTrackOther);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTTrackOther);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTTrackOther);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTTrackOther);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TTrackOther*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TTrackOther*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackOther*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTTrackerReconModulecLcLTUnusedHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p = 0);
   static void *newArray_NDcLcLTTrackerReconModulecLcLTUnusedHit(Long_t size, void *p);
   static void delete_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p);
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p);
   static void destruct_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TTrackerReconModule::TUnusedHit*)
   {
      ::ND::TTrackerReconModule::TUnusedHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TTrackerReconModule::TUnusedHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TTrackerReconModule::TUnusedHit", ::ND::TTrackerReconModule::TUnusedHit::Class_Version(), "./ND__TTrackerReconModule.h", 42,
                  typeid(::ND::TTrackerReconModule::TUnusedHit), DefineBehavior(ptr, ptr),
                  &::ND::TTrackerReconModule::TUnusedHit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TTrackerReconModule::TUnusedHit) );
      instance.SetNew(&new_NDcLcLTTrackerReconModulecLcLTUnusedHit);
      instance.SetNewArray(&newArray_NDcLcLTTrackerReconModulecLcLTUnusedHit);
      instance.SetDelete(&delete_NDcLcLTTrackerReconModulecLcLTUnusedHit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTTrackerReconModulecLcLTUnusedHit);
      instance.SetDestructor(&destruct_NDcLcLTTrackerReconModulecLcLTUnusedHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TTrackerReconModule::TUnusedHit*)
   {
      return GenerateInitInstanceLocal((::ND::TTrackerReconModule::TUnusedHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TUnusedHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTECALTestbeamModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTECALTestbeamModule(void *p = 0);
   static void *newArray_NDcLcLTECALTestbeamModule(Long_t size, void *p);
   static void delete_NDcLcLTECALTestbeamModule(void *p);
   static void deleteArray_NDcLcLTECALTestbeamModule(void *p);
   static void destruct_NDcLcLTECALTestbeamModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TECALTestbeamModule*)
   {
      ::ND::TECALTestbeamModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TECALTestbeamModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TECALTestbeamModule", ::ND::TECALTestbeamModule::Class_Version(), "./ND__TECALTestbeamModule.h", 17,
                  typeid(::ND::TECALTestbeamModule), DefineBehavior(ptr, ptr),
                  &::ND::TECALTestbeamModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TECALTestbeamModule) );
      instance.SetNew(&new_NDcLcLTECALTestbeamModule);
      instance.SetNewArray(&newArray_NDcLcLTECALTestbeamModule);
      instance.SetDelete(&delete_NDcLcLTECALTestbeamModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTECALTestbeamModule);
      instance.SetDestructor(&destruct_NDcLcLTECALTestbeamModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TECALTestbeamModule*)
   {
      return GenerateInitInstanceLocal((::ND::TECALTestbeamModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TECALTestbeamModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTSmrdReconModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTSmrdReconModule(void *p = 0);
   static void *newArray_NDcLcLTSmrdReconModule(Long_t size, void *p);
   static void delete_NDcLcLTSmrdReconModule(void *p);
   static void deleteArray_NDcLcLTSmrdReconModule(void *p);
   static void destruct_NDcLcLTSmrdReconModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TSmrdReconModule*)
   {
      ::ND::TSmrdReconModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TSmrdReconModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TSmrdReconModule", ::ND::TSmrdReconModule::Class_Version(), "./ND__TSmrdReconModule.h", 22,
                  typeid(::ND::TSmrdReconModule), DefineBehavior(ptr, ptr),
                  &::ND::TSmrdReconModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TSmrdReconModule) );
      instance.SetNew(&new_NDcLcLTSmrdReconModule);
      instance.SetNewArray(&newArray_NDcLcLTSmrdReconModule);
      instance.SetDelete(&delete_NDcLcLTSmrdReconModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTSmrdReconModule);
      instance.SetDestructor(&destruct_NDcLcLTSmrdReconModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TSmrdReconModule*)
   {
      return GenerateInitInstanceLocal((::ND::TSmrdReconModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TSmrdReconModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTSmrdReconModulecLcLTSmrdReconHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p = 0);
   static void *newArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(Long_t size, void *p);
   static void delete_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p);
   static void deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p);
   static void destruct_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TSmrdReconModule::TSmrdReconHit*)
   {
      ::ND::TSmrdReconModule::TSmrdReconHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TSmrdReconModule::TSmrdReconHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TSmrdReconModule::TSmrdReconHit", ::ND::TSmrdReconModule::TSmrdReconHit::Class_Version(), "./ND__TSmrdReconModule.h", 74,
                  typeid(::ND::TSmrdReconModule::TSmrdReconHit), DefineBehavior(ptr, ptr),
                  &::ND::TSmrdReconModule::TSmrdReconHit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TSmrdReconModule::TSmrdReconHit) );
      instance.SetNew(&new_NDcLcLTSmrdReconModulecLcLTSmrdReconHit);
      instance.SetNewArray(&newArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit);
      instance.SetDelete(&delete_NDcLcLTSmrdReconModulecLcLTSmrdReconHit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit);
      instance.SetDestructor(&destruct_NDcLcLTSmrdReconModulecLcLTSmrdReconHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TSmrdReconModule::TSmrdReconHit*)
   {
      return GenerateInitInstanceLocal((::ND::TSmrdReconModule::TSmrdReconHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdReconHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p = 0);
   static void *newArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(Long_t size, void *p);
   static void delete_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p);
   static void deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p);
   static void destruct_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TSmrdReconModule::TSmrdIsoTrack*)
   {
      ::ND::TSmrdReconModule::TSmrdIsoTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TSmrdReconModule::TSmrdIsoTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TSmrdReconModule::TSmrdIsoTrack", ::ND::TSmrdReconModule::TSmrdIsoTrack::Class_Version(), "./ND__TSmrdReconModule.h", 31,
                  typeid(::ND::TSmrdReconModule::TSmrdIsoTrack), DefineBehavior(ptr, ptr),
                  &::ND::TSmrdReconModule::TSmrdIsoTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TSmrdReconModule::TSmrdIsoTrack) );
      instance.SetNew(&new_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
      instance.SetNewArray(&newArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
      instance.SetDelete(&delete_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
      instance.SetDestructor(&destruct_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TSmrdReconModule::TSmrdIsoTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TSmrdReconModule::TSmrdIsoTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdIsoTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTLowLevelInfoModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTLowLevelInfoModule(void *p = 0);
   static void *newArray_NDcLcLTLowLevelInfoModule(Long_t size, void *p);
   static void delete_NDcLcLTLowLevelInfoModule(void *p);
   static void deleteArray_NDcLcLTLowLevelInfoModule(void *p);
   static void destruct_NDcLcLTLowLevelInfoModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TLowLevelInfoModule*)
   {
      ::ND::TLowLevelInfoModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TLowLevelInfoModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TLowLevelInfoModule", ::ND::TLowLevelInfoModule::Class_Version(), "./ND__TLowLevelInfoModule.h", 19,
                  typeid(::ND::TLowLevelInfoModule), DefineBehavior(ptr, ptr),
                  &::ND::TLowLevelInfoModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TLowLevelInfoModule) );
      instance.SetNew(&new_NDcLcLTLowLevelInfoModule);
      instance.SetNewArray(&newArray_NDcLcLTLowLevelInfoModule);
      instance.SetDelete(&delete_NDcLcLTLowLevelInfoModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTLowLevelInfoModule);
      instance.SetDestructor(&destruct_NDcLcLTLowLevelInfoModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TLowLevelInfoModule*)
   {
      return GenerateInitInstanceLocal((::ND::TLowLevelInfoModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(void *p = 0);
   static void *newArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(Long_t size, void *p);
   static void delete_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(void *p);
   static void deleteArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(void *p);
   static void destruct_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TLowLevelInfoModule::TLowLevelTFBDigit*)
   {
      ::ND::TLowLevelInfoModule::TLowLevelTFBDigit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TLowLevelInfoModule::TLowLevelTFBDigit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TLowLevelInfoModule::TLowLevelTFBDigit", ::ND::TLowLevelInfoModule::TLowLevelTFBDigit::Class_Version(), "./ND__TLowLevelInfoModule.h", 54,
                  typeid(::ND::TLowLevelInfoModule::TLowLevelTFBDigit), DefineBehavior(ptr, ptr),
                  &::ND::TLowLevelInfoModule::TLowLevelTFBDigit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TLowLevelInfoModule::TLowLevelTFBDigit) );
      instance.SetNew(&new_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit);
      instance.SetNewArray(&newArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit);
      instance.SetDelete(&delete_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit);
      instance.SetDestructor(&destruct_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TLowLevelInfoModule::TLowLevelTFBDigit*)
   {
      return GenerateInitInstanceLocal((::ND::TLowLevelInfoModule::TLowLevelTFBDigit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule::TLowLevelTFBDigit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTLowLevelInfoModulecLcLTLowLevelHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit(void *p = 0);
   static void *newArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit(Long_t size, void *p);
   static void delete_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit(void *p);
   static void deleteArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit(void *p);
   static void destruct_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TLowLevelInfoModule::TLowLevelHit*)
   {
      ::ND::TLowLevelInfoModule::TLowLevelHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TLowLevelInfoModule::TLowLevelHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TLowLevelInfoModule::TLowLevelHit", ::ND::TLowLevelInfoModule::TLowLevelHit::Class_Version(), "./ND__TLowLevelInfoModule.h", 28,
                  typeid(::ND::TLowLevelInfoModule::TLowLevelHit), DefineBehavior(ptr, ptr),
                  &::ND::TLowLevelInfoModule::TLowLevelHit::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TLowLevelInfoModule::TLowLevelHit) );
      instance.SetNew(&new_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit);
      instance.SetNewArray(&newArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit);
      instance.SetDelete(&delete_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit);
      instance.SetDeleteArray(&deleteArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit);
      instance.SetDestructor(&destruct_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TLowLevelInfoModule::TLowLevelHit*)
   {
      return GenerateInitInstanceLocal((::ND::TLowLevelInfoModule::TLowLevelHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule::TLowLevelHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTFgdOnlyModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTFgdOnlyModule(void *p = 0);
   static void *newArray_NDcLcLTFgdOnlyModule(Long_t size, void *p);
   static void delete_NDcLcLTFgdOnlyModule(void *p);
   static void deleteArray_NDcLcLTFgdOnlyModule(void *p);
   static void destruct_NDcLcLTFgdOnlyModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TFgdOnlyModule*)
   {
      ::ND::TFgdOnlyModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TFgdOnlyModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TFgdOnlyModule", ::ND::TFgdOnlyModule::Class_Version(), "./ND__TFgdOnlyModule.h", 26,
                  typeid(::ND::TFgdOnlyModule), DefineBehavior(ptr, ptr),
                  &::ND::TFgdOnlyModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TFgdOnlyModule) );
      instance.SetNew(&new_NDcLcLTFgdOnlyModule);
      instance.SetNewArray(&newArray_NDcLcLTFgdOnlyModule);
      instance.SetDelete(&delete_NDcLcLTFgdOnlyModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTFgdOnlyModule);
      instance.SetDestructor(&destruct_NDcLcLTFgdOnlyModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TFgdOnlyModule*)
   {
      return GenerateInitInstanceLocal((::ND::TFgdOnlyModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p = 0);
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(Long_t size, void *p);
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p);
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p);
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)
   {
      ::ND::TFgdOnlyModule::TFgd2DIsoTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TFgdOnlyModule::TFgd2DIsoTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TFgdOnlyModule::TFgd2DIsoTrack", ::ND::TFgdOnlyModule::TFgd2DIsoTrack::Class_Version(), "./ND__TFgdOnlyModule.h", 141,
                  typeid(::ND::TFgdOnlyModule::TFgd2DIsoTrack), DefineBehavior(ptr, ptr),
                  &::ND::TFgdOnlyModule::TFgd2DIsoTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TFgdOnlyModule::TFgd2DIsoTrack) );
      instance.SetNew(&new_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
      instance.SetNewArray(&newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
      instance.SetDelete(&delete_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
      instance.SetDestructor(&destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p = 0);
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(Long_t size, void *p);
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p);
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p);
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)
   {
      ::ND::TFgdOnlyModule::TFgd3DIsoTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TFgdOnlyModule::TFgd3DIsoTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TFgdOnlyModule::TFgd3DIsoTrack", ::ND::TFgdOnlyModule::TFgd3DIsoTrack::Class_Version(), "./ND__TFgdOnlyModule.h", 112,
                  typeid(::ND::TFgdOnlyModule::TFgd3DIsoTrack), DefineBehavior(ptr, ptr),
                  &::ND::TFgdOnlyModule::TFgd3DIsoTrack::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TFgdOnlyModule::TFgd3DIsoTrack) );
      instance.SetNew(&new_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
      instance.SetNewArray(&newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
      instance.SetDelete(&delete_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
      instance.SetDeleteArray(&deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
      instance.SetDestructor(&destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)
   {
      return GenerateInitInstanceLocal((::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p = 0);
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(Long_t size, void *p);
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p);
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p);
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)
   {
      ::ND::TFgdOnlyModule::TFgd3DShowerPID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TFgdOnlyModule::TFgd3DShowerPID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TFgdOnlyModule::TFgd3DShowerPID", ::ND::TFgdOnlyModule::TFgd3DShowerPID::Class_Version(), "./ND__TFgdOnlyModule.h", 88,
                  typeid(::ND::TFgdOnlyModule::TFgd3DShowerPID), DefineBehavior(ptr, ptr),
                  &::ND::TFgdOnlyModule::TFgd3DShowerPID::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TFgdOnlyModule::TFgd3DShowerPID) );
      instance.SetNew(&new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
      instance.SetNewArray(&newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
      instance.SetDelete(&delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
      instance.SetDeleteArray(&deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
      instance.SetDestructor(&destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)
   {
      return GenerateInitInstanceLocal((::ND::TFgdOnlyModule::TFgd3DShowerPID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p = 0);
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(Long_t size, void *p);
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p);
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p);
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)
   {
      ::ND::TFgdOnlyModule::TFgd3DShowerHyp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TFgdOnlyModule::TFgd3DShowerHyp >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TFgdOnlyModule::TFgd3DShowerHyp", ::ND::TFgdOnlyModule::TFgd3DShowerHyp::Class_Version(), "./ND__TFgdOnlyModule.h", 65,
                  typeid(::ND::TFgdOnlyModule::TFgd3DShowerHyp), DefineBehavior(ptr, ptr),
                  &::ND::TFgdOnlyModule::TFgd3DShowerHyp::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TFgdOnlyModule::TFgd3DShowerHyp) );
      instance.SetNew(&new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
      instance.SetNewArray(&newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
      instance.SetDelete(&delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
      instance.SetDeleteArray(&deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
      instance.SetDestructor(&destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)
   {
      return GenerateInitInstanceLocal((::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTFgdOnlyModulecLcLTFgd2DCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p = 0);
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(Long_t size, void *p);
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p);
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p);
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TFgdOnlyModule::TFgd2DCluster*)
   {
      ::ND::TFgdOnlyModule::TFgd2DCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TFgdOnlyModule::TFgd2DCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TFgdOnlyModule::TFgd2DCluster", ::ND::TFgdOnlyModule::TFgd2DCluster::Class_Version(), "./ND__TFgdOnlyModule.h", 38,
                  typeid(::ND::TFgdOnlyModule::TFgd2DCluster), DefineBehavior(ptr, ptr),
                  &::ND::TFgdOnlyModule::TFgd2DCluster::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TFgdOnlyModule::TFgd2DCluster) );
      instance.SetNew(&new_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
      instance.SetNewArray(&newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
      instance.SetDelete(&delete_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
      instance.SetDeleteArray(&deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
      instance.SetDestructor(&destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TFgdOnlyModule::TFgd2DCluster*)
   {
      return GenerateInitInstanceLocal((::ND::TFgdOnlyModule::TFgd2DCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTBeamSummaryDataModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTBeamSummaryDataModule(void *p = 0);
   static void *newArray_NDcLcLTBeamSummaryDataModule(Long_t size, void *p);
   static void delete_NDcLcLTBeamSummaryDataModule(void *p);
   static void deleteArray_NDcLcLTBeamSummaryDataModule(void *p);
   static void destruct_NDcLcLTBeamSummaryDataModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TBeamSummaryDataModule*)
   {
      ::ND::TBeamSummaryDataModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TBeamSummaryDataModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TBeamSummaryDataModule", ::ND::TBeamSummaryDataModule::Class_Version(), "./ND__TBeamSummaryDataModule.h", 20,
                  typeid(::ND::TBeamSummaryDataModule), DefineBehavior(ptr, ptr),
                  &::ND::TBeamSummaryDataModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TBeamSummaryDataModule) );
      instance.SetNew(&new_NDcLcLTBeamSummaryDataModule);
      instance.SetNewArray(&newArray_NDcLcLTBeamSummaryDataModule);
      instance.SetDelete(&delete_NDcLcLTBeamSummaryDataModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTBeamSummaryDataModule);
      instance.SetDestructor(&destruct_NDcLcLTBeamSummaryDataModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TBeamSummaryDataModule*)
   {
      return GenerateInitInstanceLocal((::ND::TBeamSummaryDataModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p = 0);
   static void *newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(Long_t size, void *p);
   static void delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p);
   static void deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p);
   static void destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)
   {
      ::ND::TBeamSummaryDataModule::TBeamSummaryData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TBeamSummaryDataModule::TBeamSummaryData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TBeamSummaryDataModule::TBeamSummaryData", ::ND::TBeamSummaryDataModule::TBeamSummaryData::Class_Version(), "./ND__TBeamSummaryDataModule.h", 28,
                  typeid(::ND::TBeamSummaryDataModule::TBeamSummaryData), DefineBehavior(ptr, ptr),
                  &::ND::TBeamSummaryDataModule::TBeamSummaryData::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TBeamSummaryDataModule::TBeamSummaryData) );
      instance.SetNew(&new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
      instance.SetNewArray(&newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
      instance.SetDelete(&delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
      instance.SetDeleteArray(&deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
      instance.SetDestructor(&destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)
   {
      return GenerateInitInstanceLocal((::ND::TBeamSummaryDataModule::TBeamSummaryData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p = 0);
   static void *newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(Long_t size, void *p);
   static void delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p);
   static void deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p);
   static void destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)
   {
      ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData", ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class_Version(), "./ND__TBeamSummaryDataModule.h", 36,
                  typeid(::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData), DefineBehavior(ptr, ptr),
                  &::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData) );
      instance.SetNew(&new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
      instance.SetNewArray(&newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
      instance.SetDelete(&delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
      instance.SetDeleteArray(&deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
      instance.SetDestructor(&destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)
   {
      return GenerateInitInstanceLocal((::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTReconPerformanceEvalModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTReconPerformanceEvalModule(void *p = 0);
   static void *newArray_NDcLcLTReconPerformanceEvalModule(Long_t size, void *p);
   static void delete_NDcLcLTReconPerformanceEvalModule(void *p);
   static void deleteArray_NDcLcLTReconPerformanceEvalModule(void *p);
   static void destruct_NDcLcLTReconPerformanceEvalModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TReconPerformanceEvalModule*)
   {
      ::ND::TReconPerformanceEvalModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TReconPerformanceEvalModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TReconPerformanceEvalModule", ::ND::TReconPerformanceEvalModule::Class_Version(), "./ND__TReconPerformanceEvalModule.h", 25,
                  typeid(::ND::TReconPerformanceEvalModule), DefineBehavior(ptr, ptr),
                  &::ND::TReconPerformanceEvalModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TReconPerformanceEvalModule) );
      instance.SetNew(&new_NDcLcLTReconPerformanceEvalModule);
      instance.SetNewArray(&newArray_NDcLcLTReconPerformanceEvalModule);
      instance.SetDelete(&delete_NDcLcLTReconPerformanceEvalModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTReconPerformanceEvalModule);
      instance.SetDestructor(&destruct_NDcLcLTReconPerformanceEvalModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TReconPerformanceEvalModule*)
   {
      return GenerateInitInstanceLocal((::ND::TReconPerformanceEvalModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(void *p = 0);
   static void *newArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(Long_t size, void *p);
   static void delete_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(void *p);
   static void deleteArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(void *p);
   static void destruct_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TReconPerformanceEvalModule::TGlobalReconObject*)
   {
      ::ND::TReconPerformanceEvalModule::TGlobalReconObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TReconPerformanceEvalModule::TGlobalReconObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TReconPerformanceEvalModule::TGlobalReconObject", ::ND::TReconPerformanceEvalModule::TGlobalReconObject::Class_Version(), "./ND__TReconPerformanceEvalModule.h", 55,
                  typeid(::ND::TReconPerformanceEvalModule::TGlobalReconObject), DefineBehavior(ptr, ptr),
                  &::ND::TReconPerformanceEvalModule::TGlobalReconObject::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TReconPerformanceEvalModule::TGlobalReconObject) );
      instance.SetNew(&new_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject);
      instance.SetNewArray(&newArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject);
      instance.SetDelete(&delete_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject);
      instance.SetDeleteArray(&deleteArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject);
      instance.SetDestructor(&destruct_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TReconPerformanceEvalModule::TGlobalReconObject*)
   {
      return GenerateInitInstanceLocal((::ND::TReconPerformanceEvalModule::TGlobalReconObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule::TGlobalReconObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(void *p = 0);
   static void *newArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(Long_t size, void *p);
   static void delete_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(void *p);
   static void deleteArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(void *p);
   static void destruct_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)
   {
      ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TReconPerformanceEvalModule::TGlobalTruthInfo", ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Class_Version(), "./ND__TReconPerformanceEvalModule.h", 34,
                  typeid(::ND::TReconPerformanceEvalModule::TGlobalTruthInfo), DefineBehavior(ptr, ptr),
                  &::ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TReconPerformanceEvalModule::TGlobalTruthInfo) );
      instance.SetNew(&new_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo);
      instance.SetNewArray(&newArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo);
      instance.SetDelete(&delete_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo);
      instance.SetDeleteArray(&deleteArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo);
      instance.SetDestructor(&destruct_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)
   {
      return GenerateInitInstanceLocal((::ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTExample2010aAnalysis1Module_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTExample2010aAnalysis1Module(void *p = 0);
   static void *newArray_NDcLcLTExample2010aAnalysis1Module(Long_t size, void *p);
   static void delete_NDcLcLTExample2010aAnalysis1Module(void *p);
   static void deleteArray_NDcLcLTExample2010aAnalysis1Module(void *p);
   static void destruct_NDcLcLTExample2010aAnalysis1Module(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TExample2010aAnalysis1Module*)
   {
      ::ND::TExample2010aAnalysis1Module *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TExample2010aAnalysis1Module >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TExample2010aAnalysis1Module", ::ND::TExample2010aAnalysis1Module::Class_Version(), "./ND__TExample2010aAnalysis1Module.h", 17,
                  typeid(::ND::TExample2010aAnalysis1Module), DefineBehavior(ptr, ptr),
                  &::ND::TExample2010aAnalysis1Module::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TExample2010aAnalysis1Module) );
      instance.SetNew(&new_NDcLcLTExample2010aAnalysis1Module);
      instance.SetNewArray(&newArray_NDcLcLTExample2010aAnalysis1Module);
      instance.SetDelete(&delete_NDcLcLTExample2010aAnalysis1Module);
      instance.SetDeleteArray(&deleteArray_NDcLcLTExample2010aAnalysis1Module);
      instance.SetDestructor(&destruct_NDcLcLTExample2010aAnalysis1Module);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TExample2010aAnalysis1Module*)
   {
      return GenerateInitInstanceLocal((::ND::TExample2010aAnalysis1Module*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TExample2010aAnalysis1Module*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGeometrySummaryModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGeometrySummaryModule(void *p = 0);
   static void *newArray_NDcLcLTGeometrySummaryModule(Long_t size, void *p);
   static void delete_NDcLcLTGeometrySummaryModule(void *p);
   static void deleteArray_NDcLcLTGeometrySummaryModule(void *p);
   static void destruct_NDcLcLTGeometrySummaryModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGeometrySummaryModule*)
   {
      ::ND::TGeometrySummaryModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGeometrySummaryModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGeometrySummaryModule", ::ND::TGeometrySummaryModule::Class_Version(), "./ND__TGeometrySummaryModule.h", 24,
                  typeid(::ND::TGeometrySummaryModule), DefineBehavior(ptr, ptr),
                  &::ND::TGeometrySummaryModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGeometrySummaryModule) );
      instance.SetNew(&new_NDcLcLTGeometrySummaryModule);
      instance.SetNewArray(&newArray_NDcLcLTGeometrySummaryModule);
      instance.SetDelete(&delete_NDcLcLTGeometrySummaryModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGeometrySummaryModule);
      instance.SetDestructor(&destruct_NDcLcLTGeometrySummaryModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGeometrySummaryModule*)
   {
      return GenerateInitInstanceLocal((::ND::TGeometrySummaryModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p = 0);
   static void *newArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(Long_t size, void *p);
   static void delete_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p);
   static void deleteArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p);
   static void destruct_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)
   {
      ::ND::TGeometrySummaryModule::TDetectorBoundingBox *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGeometrySummaryModule::TDetectorBoundingBox >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGeometrySummaryModule::TDetectorBoundingBox", ::ND::TGeometrySummaryModule::TDetectorBoundingBox::Class_Version(), "./ND__TGeometrySummaryModule.h", 48,
                  typeid(::ND::TGeometrySummaryModule::TDetectorBoundingBox), DefineBehavior(ptr, ptr),
                  &::ND::TGeometrySummaryModule::TDetectorBoundingBox::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGeometrySummaryModule::TDetectorBoundingBox) );
      instance.SetNew(&new_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
      instance.SetNewArray(&newArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
      instance.SetDelete(&delete_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
      instance.SetDestructor(&destruct_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)
   {
      return GenerateInitInstanceLocal((::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p = 0);
   static void *newArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(Long_t size, void *p);
   static void delete_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p);
   static void deleteArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p);
   static void destruct_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)
   {
      ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGeometrySummaryModule::TTPCMicroMegasVolumes", ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class_Version(), "./ND__TGeometrySummaryModule.h", 33,
                  typeid(::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes), DefineBehavior(ptr, ptr),
                  &::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes) );
      instance.SetNew(&new_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
      instance.SetNewArray(&newArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
      instance.SetDelete(&delete_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
      instance.SetDestructor(&destruct_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)
   {
      return GenerateInitInstanceLocal((::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTGRooTrackerVtxModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTGRooTrackerVtxModule(void *p = 0);
   static void *newArray_NDcLcLTGRooTrackerVtxModule(Long_t size, void *p);
   static void delete_NDcLcLTGRooTrackerVtxModule(void *p);
   static void deleteArray_NDcLcLTGRooTrackerVtxModule(void *p);
   static void destruct_NDcLcLTGRooTrackerVtxModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TGRooTrackerVtxModule*)
   {
      ::ND::TGRooTrackerVtxModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TGRooTrackerVtxModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TGRooTrackerVtxModule", ::ND::TGRooTrackerVtxModule::Class_Version(), "./ND__TGRooTrackerVtxModule.h", 17,
                  typeid(::ND::TGRooTrackerVtxModule), DefineBehavior(ptr, ptr),
                  &::ND::TGRooTrackerVtxModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TGRooTrackerVtxModule) );
      instance.SetNew(&new_NDcLcLTGRooTrackerVtxModule);
      instance.SetNewArray(&newArray_NDcLcLTGRooTrackerVtxModule);
      instance.SetDelete(&delete_NDcLcLTGRooTrackerVtxModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTGRooTrackerVtxModule);
      instance.SetDestructor(&destruct_NDcLcLTGRooTrackerVtxModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TGRooTrackerVtxModule*)
   {
      return GenerateInitInstanceLocal((::ND::TGRooTrackerVtxModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TGRooTrackerVtxModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTRooTrackerVtxModuleBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTRooTrackerVtxModuleBase(void *p = 0);
   static void *newArray_NDcLcLTRooTrackerVtxModuleBase(Long_t size, void *p);
   static void delete_NDcLcLTRooTrackerVtxModuleBase(void *p);
   static void deleteArray_NDcLcLTRooTrackerVtxModuleBase(void *p);
   static void destruct_NDcLcLTRooTrackerVtxModuleBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TRooTrackerVtxModuleBase*)
   {
      ::ND::TRooTrackerVtxModuleBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TRooTrackerVtxModuleBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TRooTrackerVtxModuleBase", ::ND::TRooTrackerVtxModuleBase::Class_Version(), "./ND__TRooTrackerVtxModuleBase.h", 17,
                  typeid(::ND::TRooTrackerVtxModuleBase), DefineBehavior(ptr, ptr),
                  &::ND::TRooTrackerVtxModuleBase::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TRooTrackerVtxModuleBase) );
      instance.SetNew(&new_NDcLcLTRooTrackerVtxModuleBase);
      instance.SetNewArray(&newArray_NDcLcLTRooTrackerVtxModuleBase);
      instance.SetDelete(&delete_NDcLcLTRooTrackerVtxModuleBase);
      instance.SetDeleteArray(&deleteArray_NDcLcLTRooTrackerVtxModuleBase);
      instance.SetDestructor(&destruct_NDcLcLTRooTrackerVtxModuleBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TRooTrackerVtxModuleBase*)
   {
      return GenerateInitInstanceLocal((::ND::TRooTrackerVtxModuleBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TRooTrackerVtxModuleBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void NDcLcLTNRooTrackerVtxModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NDcLcLTNRooTrackerVtxModule(void *p = 0);
   static void *newArray_NDcLcLTNRooTrackerVtxModule(Long_t size, void *p);
   static void delete_NDcLcLTNRooTrackerVtxModule(void *p);
   static void deleteArray_NDcLcLTNRooTrackerVtxModule(void *p);
   static void destruct_NDcLcLTNRooTrackerVtxModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ND::TNRooTrackerVtxModule*)
   {
      ::ND::TNRooTrackerVtxModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ND::TNRooTrackerVtxModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ND::TNRooTrackerVtxModule", ::ND::TNRooTrackerVtxModule::Class_Version(), "./ND__TNRooTrackerVtxModule.h", 17,
                  typeid(::ND::TNRooTrackerVtxModule), DefineBehavior(ptr, ptr),
                  &::ND::TNRooTrackerVtxModule::Dictionary, isa_proxy, 4,
                  sizeof(::ND::TNRooTrackerVtxModule) );
      instance.SetNew(&new_NDcLcLTNRooTrackerVtxModule);
      instance.SetNewArray(&newArray_NDcLcLTNRooTrackerVtxModule);
      instance.SetDelete(&delete_NDcLcLTNRooTrackerVtxModule);
      instance.SetDeleteArray(&deleteArray_NDcLcLTNRooTrackerVtxModule);
      instance.SetDestructor(&destruct_NDcLcLTNRooTrackerVtxModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ND::TNRooTrackerVtxModule*)
   {
      return GenerateInitInstanceLocal((::ND::TNRooTrackerVtxModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ND::TNRooTrackerVtxModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace ND {
//______________________________________________________________________________
TClass *TND280Event::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TND280Event::Class_Name()
{
   return "ND::TND280Event";
}

//______________________________________________________________________________
const char *TND280Event::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TND280Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TND280Event::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TND280Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TND280Event::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TND280Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TND280Event::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TND280Event*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TDataVector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDataVector::Class_Name()
{
   return "ND::TDataVector";
}

//______________________________________________________________________________
const char *TDataVector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TDataVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDataVector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TDataVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDataVector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TDataVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDataVector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TDataVector*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TData::Class_Name()
{
   return "ND::TData";
}

//______________________________________________________________________________
const char *TData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TData*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TDatum::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDatum::Class_Name()
{
   return "ND::TDatum";
}

//______________________________________________________________________________
const char *TDatum::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TDatum*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDatum::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TDatum*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDatum::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TDatum*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDatum::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TDatum*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TND280Event::Header::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TND280Event::Header::Class_Name()
{
   return "ND::TND280Event::Header";
}

//______________________________________________________________________________
const char *TND280Event::Header::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TND280Event::Header*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TND280Event::Header::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TND280Event::Header*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TND280Event::Header::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TND280Event::Header*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TND280Event::Header::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TND280Event::Header*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrueVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrueVertex::Class_Name()
{
   return "ND::TTrueVertex";
}

//______________________________________________________________________________
const char *TTrueVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrueVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrueVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrueVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrueVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrueVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrueVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrueVertex*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrueParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrueParticle::Class_Name()
{
   return "ND::TTrueParticle";
}

//______________________________________________________________________________
const char *TTrueParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrueParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrueParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrueParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrueParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrueParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrueParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrueParticle*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TSubBaseObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSubBaseObject::Class_Name()
{
   return "ND::TSubBaseObject";
}

//______________________________________________________________________________
const char *TSubBaseObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TSubBaseObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSubBaseObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TSubBaseObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSubBaseObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TSubBaseObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSubBaseObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TSubBaseObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TSubBaseShowerObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSubBaseShowerObject::Class_Name()
{
   return "ND::TSubBaseShowerObject";
}

//______________________________________________________________________________
const char *TSubBaseShowerObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TSubBaseShowerObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSubBaseShowerObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TSubBaseShowerObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSubBaseShowerObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TSubBaseShowerObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSubBaseShowerObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TSubBaseShowerObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *GRooTrackerVtx::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GRooTrackerVtx::Class_Name()
{
   return "ND::GRooTrackerVtx";
}

//______________________________________________________________________________
const char *GRooTrackerVtx::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::GRooTrackerVtx*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GRooTrackerVtx::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::GRooTrackerVtx*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GRooTrackerVtx::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::GRooTrackerVtx*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GRooTrackerVtx::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::GRooTrackerVtx*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *JNuBeamFlux::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *JNuBeamFlux::Class_Name()
{
   return "ND::JNuBeamFlux";
}

//______________________________________________________________________________
const char *JNuBeamFlux::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::JNuBeamFlux*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JNuBeamFlux::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::JNuBeamFlux*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JNuBeamFlux::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::JNuBeamFlux*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JNuBeamFlux::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::JNuBeamFlux*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *RooTrackerVtxBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooTrackerVtxBase::Class_Name()
{
   return "ND::RooTrackerVtxBase";
}

//______________________________________________________________________________
const char *RooTrackerVtxBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::RooTrackerVtxBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooTrackerVtxBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::RooTrackerVtxBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooTrackerVtxBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::RooTrackerVtxBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooTrackerVtxBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::RooTrackerVtxBase*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *NRooTrackerVtx::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *NRooTrackerVtx::Class_Name()
{
   return "ND::NRooTrackerVtx";
}

//______________________________________________________________________________
const char *NRooTrackerVtx::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::NRooTrackerVtx*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int NRooTrackerVtx::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::NRooTrackerVtx*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void NRooTrackerVtx::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::NRooTrackerVtx*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *NRooTrackerVtx::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::NRooTrackerVtx*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *ToaAnalysisUtils::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ToaAnalysisUtils::Class_Name()
{
   return "ND::ToaAnalysisUtils";
}

//______________________________________________________________________________
const char *ToaAnalysisUtils::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::ToaAnalysisUtils*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ToaAnalysisUtils::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::ToaAnalysisUtils*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ToaAnalysisUtils::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::ToaAnalysisUtils*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ToaAnalysisUtils::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::ToaAnalysisUtils*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TBasicHeaderModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBasicHeaderModule::Class_Name()
{
   return "ND::TBasicHeaderModule";
}

//______________________________________________________________________________
const char *TBasicHeaderModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TBasicHeaderModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBasicHeaderModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TBasicHeaderModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBasicHeaderModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TBasicHeaderModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBasicHeaderModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TBasicHeaderModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TAnalysisHeaderModuleBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAnalysisHeaderModuleBase::Class_Name()
{
   return "ND::TAnalysisHeaderModuleBase";
}

//______________________________________________________________________________
const char *TAnalysisHeaderModuleBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisHeaderModuleBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAnalysisHeaderModuleBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisHeaderModuleBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAnalysisHeaderModuleBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisHeaderModuleBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAnalysisHeaderModuleBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisHeaderModuleBase*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TAnalysisModuleBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAnalysisModuleBase::Class_Name()
{
   return "ND::TAnalysisModuleBase";
}

//______________________________________________________________________________
const char *TAnalysisModuleBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisModuleBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAnalysisModuleBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisModuleBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAnalysisModuleBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisModuleBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAnalysisModuleBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisModuleBase*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TBasicDataQualityModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBasicDataQualityModule::Class_Name()
{
   return "ND::TBasicDataQualityModule";
}

//______________________________________________________________________________
const char *TBasicDataQualityModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TBasicDataQualityModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBasicDataQualityModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TBasicDataQualityModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBasicDataQualityModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TBasicDataQualityModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBasicDataQualityModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TBasicDataQualityModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTruthTrajectoriesModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTruthTrajectoriesModule::Class_Name()
{
   return "ND::TTruthTrajectoriesModule";
}

//______________________________________________________________________________
const char *TTruthTrajectoriesModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTruthTrajectoriesModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTruthTrajectoriesModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTruthTrajectoriesModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TAnalysisTruthModuleBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAnalysisTruthModuleBase::Class_Name()
{
   return "ND::TAnalysisTruthModuleBase";
}

//______________________________________________________________________________
const char *TAnalysisTruthModuleBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisTruthModuleBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAnalysisTruthModuleBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisTruthModuleBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAnalysisTruthModuleBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisTruthModuleBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAnalysisTruthModuleBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisTruthModuleBase*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTruthTrajectoriesModule::TTruthTrajectory::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTruthTrajectoriesModule::TTruthTrajectory::Class_Name()
{
   return "ND::TTruthTrajectoriesModule::TTruthTrajectory";
}

//______________________________________________________________________________
const char *TTruthTrajectoriesModule::TTruthTrajectory::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTruthTrajectoriesModule::TTruthTrajectory::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTruthTrajectoriesModule::TTruthTrajectory::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTruthTrajectoriesModule::TTruthTrajectory::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTruthVerticesModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTruthVerticesModule::Class_Name()
{
   return "ND::TTruthVerticesModule";
}

//______________________________________________________________________________
const char *TTruthVerticesModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTruthVerticesModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTruthVerticesModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTruthVerticesModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTruthVerticesModule::TTruthVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTruthVerticesModule::TTruthVertex::Class_Name()
{
   return "ND::TTruthVerticesModule::TTruthVertex";
}

//______________________________________________________________________________
const char *TTruthVerticesModule::TTruthVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule::TTruthVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTruthVerticesModule::TTruthVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule::TTruthVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTruthVerticesModule::TTruthVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule::TTruthVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTruthVerticesModule::TTruthVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTruthVerticesModule::TTruthVertex*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DReconModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DReconModule::Class_Name()
{
   return "ND::TP0DReconModule";
}

//______________________________________________________________________________
const char *TP0DReconModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DReconModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DReconModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DReconModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TAnalysisReconModuleBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAnalysisReconModuleBase::Class_Name()
{
   return "ND::TAnalysisReconModuleBase";
}

//______________________________________________________________________________
const char *TAnalysisReconModuleBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisReconModuleBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAnalysisReconModuleBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisReconModuleBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAnalysisReconModuleBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisReconModuleBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAnalysisReconModuleBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TAnalysisReconModuleBase*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DReconModule::TP0DAlgoRes::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DReconModule::TP0DAlgoRes::Class_Name()
{
   return "ND::TP0DReconModule::TP0DAlgoRes";
}

//______________________________________________________________________________
const char *TP0DReconModule::TP0DAlgoRes::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DAlgoRes*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DReconModule::TP0DAlgoRes::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DAlgoRes*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DReconModule::TP0DAlgoRes::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DAlgoRes*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DReconModule::TP0DAlgoRes::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DAlgoRes*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DReconModule::TP0DVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DReconModule::TP0DVertex::Class_Name()
{
   return "ND::TP0DReconModule::TP0DVertex";
}

//______________________________________________________________________________
const char *TP0DReconModule::TP0DVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DReconModule::TP0DVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DReconModule::TP0DVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DReconModule::TP0DVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DVertex*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DReconModule::TP0DParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DReconModule::TP0DParticle::Class_Name()
{
   return "ND::TP0DReconModule::TP0DParticle";
}

//______________________________________________________________________________
const char *TP0DReconModule::TP0DParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DReconModule::TP0DParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DReconModule::TP0DParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DReconModule::TP0DParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DParticle*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DReconModule::TP0DShower::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DReconModule::TP0DShower::Class_Name()
{
   return "ND::TP0DReconModule::TP0DShower";
}

//______________________________________________________________________________
const char *TP0DReconModule::TP0DShower::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DShower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DReconModule::TP0DShower::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DShower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DReconModule::TP0DShower::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DShower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DReconModule::TP0DShower::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DShower*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DReconModule::TP0DTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DReconModule::TP0DTrack::Class_Name()
{
   return "ND::TP0DReconModule::TP0DTrack";
}

//______________________________________________________________________________
const char *TP0DReconModule::TP0DTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DReconModule::TP0DTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DReconModule::TP0DTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DReconModule::TP0DTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DTrack*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DReconModule::TP0DNode::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DReconModule::TP0DNode::Class_Name()
{
   return "ND::TP0DReconModule::TP0DNode";
}

//______________________________________________________________________________
const char *TP0DReconModule::TP0DNode::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DNode*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DReconModule::TP0DNode::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DNode*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DReconModule::TP0DNode::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DNode*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DReconModule::TP0DNode::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DNode*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DReconModule::TP0DHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DReconModule::TP0DHit::Class_Name()
{
   return "ND::TP0DReconModule::TP0DHit";
}

//______________________________________________________________________________
const char *TP0DReconModule::TP0DHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DReconModule::TP0DHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DReconModule::TP0DHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DReconModule::TP0DHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DHit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DReconModule::TP0DCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DReconModule::TP0DCluster::Class_Name()
{
   return "ND::TP0DReconModule::TP0DCluster";
}

//______________________________________________________________________________
const char *TP0DReconModule::TP0DCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DReconModule::TP0DCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DReconModule::TP0DCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DReconModule::TP0DCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DReconModule::TP0DCluster*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DECALReconModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DECALReconModule::Class_Name()
{
   return "ND::TP0DECALReconModule";
}

//______________________________________________________________________________
const char *TP0DECALReconModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DECALReconModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DECALReconModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DECALReconModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DECALReconModule::TP0DECALReconTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DECALReconModule::TP0DECALReconTrack::Class_Name()
{
   return "ND::TP0DECALReconModule::TP0DECALReconTrack";
}

//______________________________________________________________________________
const char *TP0DECALReconModule::TP0DECALReconTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DECALReconModule::TP0DECALReconTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DECALReconModule::TP0DECALReconTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DECALReconModule::TP0DECALReconTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconTrack*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TP0DECALReconModule::TP0DECALReconShower::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TP0DECALReconModule::TP0DECALReconShower::Class_Name()
{
   return "ND::TP0DECALReconModule::TP0DECALReconShower";
}

//______________________________________________________________________________
const char *TP0DECALReconModule::TP0DECALReconShower::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconShower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TP0DECALReconModule::TP0DECALReconShower::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconShower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TP0DECALReconModule::TP0DECALReconShower::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconShower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TP0DECALReconModule::TP0DECALReconShower::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TP0DECALReconModule::TP0DECALReconShower*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerECALReconModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerECALReconModule::Class_Name()
{
   return "ND::TTrackerECALReconModule";
}

//______________________________________________________________________________
const char *TTrackerECALReconModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerECALReconModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerECALReconModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerECALReconModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerECALReconModule::TECALReconObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerECALReconModule::TECALReconObject::Class_Name()
{
   return "ND::TTrackerECALReconModule::TECALReconObject";
}

//______________________________________________________________________________
const char *TTrackerECALReconModule::TECALReconObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerECALReconModule::TECALReconObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerECALReconModule::TECALReconObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerECALReconModule::TECALReconObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerECALReconModule::TECALReconTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerECALReconModule::TECALReconTrack::Class_Name()
{
   return "ND::TTrackerECALReconModule::TECALReconTrack";
}

//______________________________________________________________________________
const char *TTrackerECALReconModule::TECALReconTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerECALReconModule::TECALReconTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerECALReconModule::TECALReconTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerECALReconModule::TECALReconTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconTrack*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerECALReconModule::TECALReconShower::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerECALReconModule::TECALReconShower::Class_Name()
{
   return "ND::TTrackerECALReconModule::TECALReconShower";
}

//______________________________________________________________________________
const char *TTrackerECALReconModule::TECALReconShower::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconShower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerECALReconModule::TECALReconShower::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconShower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerECALReconModule::TECALReconShower::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconShower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerECALReconModule::TECALReconShower::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconShower*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerECALReconModule::TECALReconCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerECALReconModule::TECALReconCluster::Class_Name()
{
   return "ND::TTrackerECALReconModule::TECALReconCluster";
}

//______________________________________________________________________________
const char *TTrackerECALReconModule::TECALReconCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerECALReconModule::TECALReconCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerECALReconModule::TECALReconCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerECALReconModule::TECALReconCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconCluster*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerECALReconModule::TECALReconUnmatchedObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerECALReconModule::TECALReconUnmatchedObject::Class_Name()
{
   return "ND::TTrackerECALReconModule::TECALReconUnmatchedObject";
}

//______________________________________________________________________________
const char *TTrackerECALReconModule::TECALReconUnmatchedObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerECALReconModule::TECALReconUnmatchedObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerECALReconModule::TECALReconUnmatchedObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerECALReconModule::TECALReconUnmatchedObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerECALPi0ReconModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerECALPi0ReconModule::Class_Name()
{
   return "ND::TTrackerECALPi0ReconModule";
}

//______________________________________________________________________________
const char *TTrackerECALPi0ReconModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALPi0ReconModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerECALPi0ReconModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALPi0ReconModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerECALPi0ReconModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALPi0ReconModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerECALPi0ReconModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerECALPi0ReconModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::Class_Name()
{
   return "ND::TGlobalReconModule";
}

//______________________________________________________________________________
const char *TGlobalReconModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TGlobalVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TGlobalVertex::Class_Name()
{
   return "ND::TGlobalReconModule::TGlobalVertex";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TGlobalVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TGlobalVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TGlobalVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TGlobalVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalVertex*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TVertexConstituent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TVertexConstituent::Class_Name()
{
   return "ND::TGlobalReconModule::TVertexConstituent";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TVertexConstituent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TVertexConstituent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TVertexConstituent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TVertexConstituent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TVertexConstituent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TVertexConstituent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TVertexConstituent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TVertexConstituent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TFgdCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TFgdCluster::Class_Name()
{
   return "ND::TGlobalReconModule::TFgdCluster";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TFgdCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TFgdCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TFgdCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TFgdCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdCluster*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TFgdTimeBin::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TFgdTimeBin::Class_Name()
{
   return "ND::TGlobalReconModule::TFgdTimeBin";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TFgdTimeBin::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdTimeBin*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TFgdTimeBin::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdTimeBin*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TFgdTimeBin::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdTimeBin*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TFgdTimeBin::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFgdTimeBin*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TOutermostHits::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TOutermostHits::Class_Name()
{
   return "ND::TGlobalReconModule::TOutermostHits";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TOutermostHits::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TOutermostHits*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TOutermostHits::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TOutermostHits*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TOutermostHits::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TOutermostHits*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TOutermostHits::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TOutermostHits*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TGlobalHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TGlobalHit::Class_Name()
{
   return "ND::TGlobalReconModule::TGlobalHit";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TGlobalHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TGlobalHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TGlobalHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TGlobalHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalHit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TGlobalPID::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TGlobalPID::Class_Name()
{
   return "ND::TGlobalReconModule::TGlobalPID";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TGlobalPID::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TGlobalPID::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TGlobalPID::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TGlobalPID::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPID*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TTPCObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TTPCObject::Class_Name()
{
   return "ND::TGlobalReconModule::TTPCObject";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TTPCObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TTPCObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TTPCObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TTPCObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TFGDObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TFGDObject::Class_Name()
{
   return "ND::TGlobalReconModule::TFGDObject";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TFGDObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFGDObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TFGDObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFGDObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TFGDObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFGDObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TFGDObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TFGDObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TECALObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TECALObject::Class_Name()
{
   return "ND::TGlobalReconModule::TECALObject";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TECALObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TECALObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TECALObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TECALObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TECALObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TECALObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TECALObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TECALObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TP0DObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TP0DObject::Class_Name()
{
   return "ND::TGlobalReconModule::TP0DObject";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TP0DObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TP0DObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TP0DObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TP0DObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TP0DObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TP0DObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TP0DObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TP0DObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TSMRDObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TSMRDObject::Class_Name()
{
   return "ND::TGlobalReconModule::TSMRDObject";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TSMRDObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TSMRDObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TSMRDObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TSMRDObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TTrackerObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TTrackerObject::Class_Name()
{
   return "ND::TGlobalReconModule::TTrackerObject";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TTrackerObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTrackerObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TTrackerObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTrackerObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TTrackerObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTrackerObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TTrackerObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTrackerObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TGlobalPIDAlternate::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TGlobalPIDAlternate::Class_Name()
{
   return "ND::TGlobalReconModule::TGlobalPIDAlternate";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TGlobalPIDAlternate::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TGlobalPIDAlternate::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TGlobalPIDAlternate::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TGlobalPIDAlternate::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TGlobalPIDAlternate*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TTPCOtherObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TTPCOtherObject::Class_Name()
{
   return "ND::TGlobalReconModule::TTPCOtherObject";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TTPCOtherObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCOtherObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TTPCOtherObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCOtherObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TTPCOtherObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCOtherObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TTPCOtherObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TTPCOtherObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGlobalReconModule::TSMRDHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGlobalReconModule::TSMRDHit::Class_Name()
{
   return "ND::TGlobalReconModule::TSMRDHit";
}

//______________________________________________________________________________
const char *TGlobalReconModule::TSMRDHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGlobalReconModule::TSMRDHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGlobalReconModule::TSMRDHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGlobalReconModule::TSMRDHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGlobalReconModule::TSMRDHit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerReconModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerReconModule::Class_Name()
{
   return "ND::TTrackerReconModule";
}

//______________________________________________________________________________
const char *TTrackerReconModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerReconModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerReconModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerReconModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerReconModule::TTrackerVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerReconModule::TTrackerVertex::Class_Name()
{
   return "ND::TTrackerReconModule::TTrackerVertex";
}

//______________________________________________________________________________
const char *TTrackerReconModule::TTrackerVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerReconModule::TTrackerVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerReconModule::TTrackerVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerReconModule::TTrackerVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerVertex*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerReconModule::TTrackerResult::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerReconModule::TTrackerResult::Class_Name()
{
   return "ND::TTrackerReconModule::TTrackerResult";
}

//______________________________________________________________________________
const char *TTrackerReconModule::TTrackerResult::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerReconModule::TTrackerResult::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerReconModule::TTrackerResult::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerReconModule::TTrackerResult::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerResult*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerReconModule::TTrueParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerReconModule::TTrueParticle::Class_Name()
{
   return "ND::TTrackerReconModule::TTrueParticle";
}

//______________________________________________________________________________
const char *TTrackerReconModule::TTrueParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrueParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerReconModule::TTrueParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrueParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerReconModule::TTrueParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrueParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerReconModule::TTrueParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrueParticle*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerReconModule::TTrackerConstituent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerReconModule::TTrackerConstituent::Class_Name()
{
   return "ND::TTrackerReconModule::TTrackerConstituent";
}

//______________________________________________________________________________
const char *TTrackerReconModule::TTrackerConstituent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerConstituent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerReconModule::TTrackerConstituent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerConstituent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerReconModule::TTrackerConstituent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerConstituent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerReconModule::TTrackerConstituent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerConstituent*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerReconModule::TTPCTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerReconModule::TTPCTrack::Class_Name()
{
   return "ND::TTrackerReconModule::TTPCTrack";
}

//______________________________________________________________________________
const char *TTrackerReconModule::TTPCTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTPCTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerReconModule::TTPCTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTPCTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerReconModule::TTPCTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTPCTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerReconModule::TTPCTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTPCTrack*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerReconModule::TFGDTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerReconModule::TFGDTrack::Class_Name()
{
   return "ND::TTrackerReconModule::TFGDTrack";
}

//______________________________________________________________________________
const char *TTrackerReconModule::TFGDTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TFGDTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerReconModule::TFGDTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TFGDTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerReconModule::TFGDTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TFGDTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerReconModule::TFGDTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TFGDTrack*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerReconModule::TTrackerNode::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerReconModule::TTrackerNode::Class_Name()
{
   return "ND::TTrackerReconModule::TTrackerNode";
}

//______________________________________________________________________________
const char *TTrackerReconModule::TTrackerNode::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerNode*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerReconModule::TTrackerNode::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerNode*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerReconModule::TTrackerNode::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerNode*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerReconModule::TTrackerNode::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackerNode*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerReconModule::TTrackOther::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerReconModule::TTrackOther::Class_Name()
{
   return "ND::TTrackerReconModule::TTrackOther";
}

//______________________________________________________________________________
const char *TTrackerReconModule::TTrackOther::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackOther*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerReconModule::TTrackOther::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackOther*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerReconModule::TTrackOther::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackOther*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerReconModule::TTrackOther::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TTrackOther*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TTrackerReconModule::TUnusedHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTrackerReconModule::TUnusedHit::Class_Name()
{
   return "ND::TTrackerReconModule::TUnusedHit";
}

//______________________________________________________________________________
const char *TTrackerReconModule::TUnusedHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TUnusedHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTrackerReconModule::TUnusedHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TUnusedHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTrackerReconModule::TUnusedHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TUnusedHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTrackerReconModule::TUnusedHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TTrackerReconModule::TUnusedHit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TECALTestbeamModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TECALTestbeamModule::Class_Name()
{
   return "ND::TECALTestbeamModule";
}

//______________________________________________________________________________
const char *TECALTestbeamModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TECALTestbeamModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TECALTestbeamModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TECALTestbeamModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TECALTestbeamModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TECALTestbeamModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TECALTestbeamModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TECALTestbeamModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TSmrdReconModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSmrdReconModule::Class_Name()
{
   return "ND::TSmrdReconModule";
}

//______________________________________________________________________________
const char *TSmrdReconModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSmrdReconModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSmrdReconModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSmrdReconModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TSmrdReconModule::TSmrdReconHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSmrdReconModule::TSmrdReconHit::Class_Name()
{
   return "ND::TSmrdReconModule::TSmrdReconHit";
}

//______________________________________________________________________________
const char *TSmrdReconModule::TSmrdReconHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdReconHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSmrdReconModule::TSmrdReconHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdReconHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSmrdReconModule::TSmrdReconHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdReconHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSmrdReconModule::TSmrdReconHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdReconHit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TSmrdReconModule::TSmrdIsoTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSmrdReconModule::TSmrdIsoTrack::Class_Name()
{
   return "ND::TSmrdReconModule::TSmrdIsoTrack";
}

//______________________________________________________________________________
const char *TSmrdReconModule::TSmrdIsoTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdIsoTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSmrdReconModule::TSmrdIsoTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdIsoTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSmrdReconModule::TSmrdIsoTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdIsoTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSmrdReconModule::TSmrdIsoTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TSmrdReconModule::TSmrdIsoTrack*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TLowLevelInfoModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLowLevelInfoModule::Class_Name()
{
   return "ND::TLowLevelInfoModule";
}

//______________________________________________________________________________
const char *TLowLevelInfoModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLowLevelInfoModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLowLevelInfoModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLowLevelInfoModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TLowLevelInfoModule::TLowLevelTFBDigit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLowLevelInfoModule::TLowLevelTFBDigit::Class_Name()
{
   return "ND::TLowLevelInfoModule::TLowLevelTFBDigit";
}

//______________________________________________________________________________
const char *TLowLevelInfoModule::TLowLevelTFBDigit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule::TLowLevelTFBDigit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLowLevelInfoModule::TLowLevelTFBDigit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule::TLowLevelTFBDigit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLowLevelInfoModule::TLowLevelTFBDigit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule::TLowLevelTFBDigit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLowLevelInfoModule::TLowLevelTFBDigit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule::TLowLevelTFBDigit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TLowLevelInfoModule::TLowLevelHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLowLevelInfoModule::TLowLevelHit::Class_Name()
{
   return "ND::TLowLevelInfoModule::TLowLevelHit";
}

//______________________________________________________________________________
const char *TLowLevelInfoModule::TLowLevelHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule::TLowLevelHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLowLevelInfoModule::TLowLevelHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule::TLowLevelHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLowLevelInfoModule::TLowLevelHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule::TLowLevelHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLowLevelInfoModule::TLowLevelHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TLowLevelInfoModule::TLowLevelHit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TFgdOnlyModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFgdOnlyModule::Class_Name()
{
   return "ND::TFgdOnlyModule";
}

//______________________________________________________________________________
const char *TFgdOnlyModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgdOnlyModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgdOnlyModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgdOnlyModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TFgdOnlyModule::TFgd2DIsoTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFgdOnlyModule::TFgd2DIsoTrack::Class_Name()
{
   return "ND::TFgdOnlyModule::TFgd2DIsoTrack";
}

//______________________________________________________________________________
const char *TFgdOnlyModule::TFgd2DIsoTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgdOnlyModule::TFgd2DIsoTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgdOnlyModule::TFgd2DIsoTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgdOnlyModule::TFgd2DIsoTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TFgdOnlyModule::TFgd3DIsoTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFgdOnlyModule::TFgd3DIsoTrack::Class_Name()
{
   return "ND::TFgdOnlyModule::TFgd3DIsoTrack";
}

//______________________________________________________________________________
const char *TFgdOnlyModule::TFgd3DIsoTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgdOnlyModule::TFgd3DIsoTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgdOnlyModule::TFgd3DIsoTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgdOnlyModule::TFgd3DIsoTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TFgdOnlyModule::TFgd3DShowerPID::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFgdOnlyModule::TFgd3DShowerPID::Class_Name()
{
   return "ND::TFgdOnlyModule::TFgd3DShowerPID";
}

//______________________________________________________________________________
const char *TFgdOnlyModule::TFgd3DShowerPID::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgdOnlyModule::TFgd3DShowerPID::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgdOnlyModule::TFgd3DShowerPID::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgdOnlyModule::TFgd3DShowerPID::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerPID*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TFgdOnlyModule::TFgd3DShowerHyp::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFgdOnlyModule::TFgd3DShowerHyp::Class_Name()
{
   return "ND::TFgdOnlyModule::TFgd3DShowerHyp";
}

//______________________________________________________________________________
const char *TFgdOnlyModule::TFgd3DShowerHyp::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgdOnlyModule::TFgd3DShowerHyp::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgdOnlyModule::TFgd3DShowerHyp::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgdOnlyModule::TFgd3DShowerHyp::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TFgdOnlyModule::TFgd2DCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFgdOnlyModule::TFgd2DCluster::Class_Name()
{
   return "ND::TFgdOnlyModule::TFgd2DCluster";
}

//______________________________________________________________________________
const char *TFgdOnlyModule::TFgd2DCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFgdOnlyModule::TFgd2DCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFgdOnlyModule::TFgd2DCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFgdOnlyModule::TFgd2DCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TFgdOnlyModule::TFgd2DCluster*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TBeamSummaryDataModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBeamSummaryDataModule::Class_Name()
{
   return "ND::TBeamSummaryDataModule";
}

//______________________________________________________________________________
const char *TBeamSummaryDataModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBeamSummaryDataModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBeamSummaryDataModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBeamSummaryDataModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TBeamSummaryDataModule::TBeamSummaryData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBeamSummaryDataModule::TBeamSummaryData::Class_Name()
{
   return "ND::TBeamSummaryDataModule::TBeamSummaryData";
}

//______________________________________________________________________________
const char *TBeamSummaryDataModule::TBeamSummaryData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBeamSummaryDataModule::TBeamSummaryData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBeamSummaryDataModule::TBeamSummaryData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBeamSummaryDataModule::TBeamSummaryData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TBeamSummaryDataModule::TBeamSummaryData::TOtherData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class_Name()
{
   return "ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData";
}

//______________________________________________________________________________
const char *TBeamSummaryDataModule::TBeamSummaryData::TOtherData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBeamSummaryDataModule::TBeamSummaryData::TOtherData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TReconPerformanceEvalModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TReconPerformanceEvalModule::Class_Name()
{
   return "ND::TReconPerformanceEvalModule";
}

//______________________________________________________________________________
const char *TReconPerformanceEvalModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TReconPerformanceEvalModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TReconPerformanceEvalModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TReconPerformanceEvalModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TReconPerformanceEvalModule::TGlobalReconObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TReconPerformanceEvalModule::TGlobalReconObject::Class_Name()
{
   return "ND::TReconPerformanceEvalModule::TGlobalReconObject";
}

//______________________________________________________________________________
const char *TReconPerformanceEvalModule::TGlobalReconObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule::TGlobalReconObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TReconPerformanceEvalModule::TGlobalReconObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule::TGlobalReconObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TReconPerformanceEvalModule::TGlobalReconObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule::TGlobalReconObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TReconPerformanceEvalModule::TGlobalReconObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule::TGlobalReconObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TReconPerformanceEvalModule::TGlobalTruthInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TReconPerformanceEvalModule::TGlobalTruthInfo::Class_Name()
{
   return "ND::TReconPerformanceEvalModule::TGlobalTruthInfo";
}

//______________________________________________________________________________
const char *TReconPerformanceEvalModule::TGlobalTruthInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TReconPerformanceEvalModule::TGlobalTruthInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TReconPerformanceEvalModule::TGlobalTruthInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TReconPerformanceEvalModule::TGlobalTruthInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TExample2010aAnalysis1Module::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TExample2010aAnalysis1Module::Class_Name()
{
   return "ND::TExample2010aAnalysis1Module";
}

//______________________________________________________________________________
const char *TExample2010aAnalysis1Module::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TExample2010aAnalysis1Module*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TExample2010aAnalysis1Module::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TExample2010aAnalysis1Module*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TExample2010aAnalysis1Module::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TExample2010aAnalysis1Module*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TExample2010aAnalysis1Module::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TExample2010aAnalysis1Module*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGeometrySummaryModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeometrySummaryModule::Class_Name()
{
   return "ND::TGeometrySummaryModule";
}

//______________________________________________________________________________
const char *TGeometrySummaryModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeometrySummaryModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeometrySummaryModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeometrySummaryModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGeometrySummaryModule::TDetectorBoundingBox::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeometrySummaryModule::TDetectorBoundingBox::Class_Name()
{
   return "ND::TGeometrySummaryModule::TDetectorBoundingBox";
}

//______________________________________________________________________________
const char *TGeometrySummaryModule::TDetectorBoundingBox::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeometrySummaryModule::TDetectorBoundingBox::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeometrySummaryModule::TDetectorBoundingBox::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeometrySummaryModule::TDetectorBoundingBox::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGeometrySummaryModule::TTPCMicroMegasVolumes::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeometrySummaryModule::TTPCMicroMegasVolumes::Class_Name()
{
   return "ND::TGeometrySummaryModule::TTPCMicroMegasVolumes";
}

//______________________________________________________________________________
const char *TGeometrySummaryModule::TTPCMicroMegasVolumes::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeometrySummaryModule::TTPCMicroMegasVolumes::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeometrySummaryModule::TTPCMicroMegasVolumes::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeometrySummaryModule::TTPCMicroMegasVolumes::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TGRooTrackerVtxModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGRooTrackerVtxModule::Class_Name()
{
   return "ND::TGRooTrackerVtxModule";
}

//______________________________________________________________________________
const char *TGRooTrackerVtxModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGRooTrackerVtxModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGRooTrackerVtxModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TGRooTrackerVtxModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGRooTrackerVtxModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGRooTrackerVtxModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGRooTrackerVtxModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TGRooTrackerVtxModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TRooTrackerVtxModuleBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRooTrackerVtxModuleBase::Class_Name()
{
   return "ND::TRooTrackerVtxModuleBase";
}

//______________________________________________________________________________
const char *TRooTrackerVtxModuleBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TRooTrackerVtxModuleBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRooTrackerVtxModuleBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TRooTrackerVtxModuleBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRooTrackerVtxModuleBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TRooTrackerVtxModuleBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRooTrackerVtxModuleBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TRooTrackerVtxModuleBase*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
TClass *TNRooTrackerVtxModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TNRooTrackerVtxModule::Class_Name()
{
   return "ND::TNRooTrackerVtxModule";
}

//______________________________________________________________________________
const char *TNRooTrackerVtxModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TNRooTrackerVtxModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TNRooTrackerVtxModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ND::TNRooTrackerVtxModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TNRooTrackerVtxModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TNRooTrackerVtxModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TNRooTrackerVtxModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ND::TNRooTrackerVtxModule*)0x0)->GetClass();
   return fgIsA;
}

} // namespace ND
      namespace ND {
//______________________________________________________________________________
void TND280Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TND280Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TND280Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TND280Event::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TND280Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TND280Event.
      TClass *R__cl = ::ND::TND280Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fContext", (void*)&fContext);
      R__insp.InspectMember("ND::TND280Context", (void*)&fContext, "fContext.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeometryHash", (void*)&fGeometryHash);
      R__insp.InspectMember("ND::TSHAHashValue", (void*)&fGeometryHash, "fGeometryHash.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlignmentId", (void*)&fAlignmentId);
      R__insp.InspectMember("ND::TAlignmentId", (void*)&fAlignmentId, "fAlignmentId.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHeader", &fHeader);
      R__insp.InspectMember(fHeader, "fHeader.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TDataVector baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTND280Event(void *p) {
      return  p ? new(p) ::ND::TND280Event : new ::ND::TND280Event;
   }
   static void *newArray_NDcLcLTND280Event(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TND280Event[nElements] : new ::ND::TND280Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTND280Event(void *p) {
      delete ((::ND::TND280Event*)p);
   }
   static void deleteArray_NDcLcLTND280Event(void *p) {
      delete [] ((::ND::TND280Event*)p);
   }
   static void destruct_NDcLcLTND280Event(void *p) {
      typedef ::ND::TND280Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TND280Event

      namespace ND {
//______________________________________________________________________________
void TDataVector::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TDataVector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TDataVector::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TDataVector::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TDataVector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TDataVector.
      TClass *R__cl = ::ND::TDataVector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVector", (void*)&fVector);
      R__insp.InspectMember("vector<ND::TDatum*>", (void*)&fVector, "fVector.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TData baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTDataVector(void *p) {
      return  p ? new(p) ::ND::TDataVector : new ::ND::TDataVector;
   }
   static void *newArray_NDcLcLTDataVector(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TDataVector[nElements] : new ::ND::TDataVector[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTDataVector(void *p) {
      delete ((::ND::TDataVector*)p);
   }
   static void deleteArray_NDcLcLTDataVector(void *p) {
      delete [] ((::ND::TDataVector*)p);
   }
   static void destruct_NDcLcLTDataVector(void *p) {
      typedef ::ND::TDataVector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TDataVector

      namespace ND {
//______________________________________________________________________________
void TData::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TData::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TData::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TData.
      TClass *R__cl = ::ND::TData::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TDatum baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTData(void *p) {
      return  p ? new(p) ::ND::TData : new ::ND::TData;
   }
   static void *newArray_NDcLcLTData(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TData[nElements] : new ::ND::TData[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTData(void *p) {
      delete ((::ND::TData*)p);
   }
   static void deleteArray_NDcLcLTData(void *p) {
      delete [] ((::ND::TData*)p);
   }
   static void destruct_NDcLcLTData(void *p) {
      typedef ::ND::TData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TData

      namespace ND {
//______________________________________________________________________________
void TDatum::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TDatum.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TDatum::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TDatum::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TDatum::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TDatum.
      TClass *R__cl = ::ND::TDatum::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParent", &fParent);
      TNamed::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTDatum(void *p) {
      return  p ? new(p) ::ND::TDatum : new ::ND::TDatum;
   }
   static void *newArray_NDcLcLTDatum(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TDatum[nElements] : new ::ND::TDatum[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTDatum(void *p) {
      delete ((::ND::TDatum*)p);
   }
   static void deleteArray_NDcLcLTDatum(void *p) {
      delete [] ((::ND::TDatum*)p);
   }
   static void destruct_NDcLcLTDatum(void *p) {
      typedef ::ND::TDatum current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TDatum

//______________________________________________________________________________
namespace ROOT {
   void NDcLcLTND280Context_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ND::TND280Context.
      typedef ::ROOT::Shadow::ND::TND280Context ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ND::TND280Context*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPartition", &sobj->fPartition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &sobj->fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubRun", &sobj->fSubRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvent", &sobj->fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpill", &sobj->fSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeStamp", &sobj->fTimeStamp);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTND280Context(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TND280Context : new ::ND::TND280Context;
   }
   static void *newArray_NDcLcLTND280Context(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TND280Context[nElements] : new ::ND::TND280Context[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTND280Context(void *p) {
      delete ((::ND::TND280Context*)p);
   }
   static void deleteArray_NDcLcLTND280Context(void *p) {
      delete [] ((::ND::TND280Context*)p);
   }
   static void destruct_NDcLcLTND280Context(void *p) {
      typedef ::ND::TND280Context current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TND280Context

//______________________________________________________________________________
namespace ROOT {
   void NDcLcLTSHAHashValue_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ND::TSHAHashValue.
      typedef ::ROOT::Shadow::ND::TSHAHashValue ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ND::TSHAHashValue*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHash[5]", sobj->fHash);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTSHAHashValue(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TSHAHashValue : new ::ND::TSHAHashValue;
   }
   static void *newArray_NDcLcLTSHAHashValue(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TSHAHashValue[nElements] : new ::ND::TSHAHashValue[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTSHAHashValue(void *p) {
      delete ((::ND::TSHAHashValue*)p);
   }
   static void deleteArray_NDcLcLTSHAHashValue(void *p) {
      delete [] ((::ND::TSHAHashValue*)p);
   }
   static void destruct_NDcLcLTSHAHashValue(void *p) {
      typedef ::ND::TSHAHashValue current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TSHAHashValue

//______________________________________________________________________________
namespace ROOT {
   void NDcLcLTAlignmentId_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ND::TAlignmentId.
      typedef ::ROOT::Shadow::ND::TAlignmentId ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ND::TAlignmentId*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDocString", (void*)&sobj->fDocString);
      R__insp.InspectMember("string", (void*)&sobj->fDocString, "fDocString.", false);
      R__insp.GenericShowMembers("ND::TSHAHashValue", ( ::ND::TSHAHashValue * )( (::ND::TAlignmentId*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTAlignmentId(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TAlignmentId : new ::ND::TAlignmentId;
   }
   static void *newArray_NDcLcLTAlignmentId(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TAlignmentId[nElements] : new ::ND::TAlignmentId[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTAlignmentId(void *p) {
      delete ((::ND::TAlignmentId*)p);
   }
   static void deleteArray_NDcLcLTAlignmentId(void *p) {
      delete [] ((::ND::TAlignmentId*)p);
   }
   static void destruct_NDcLcLTAlignmentId(void *p) {
      typedef ::ND::TAlignmentId current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TAlignmentId

      namespace ND {
//______________________________________________________________________________
void TND280Event::Header::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TND280Event::Header.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TND280Event::Header::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TND280Event::Header::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TND280Event::Header::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TND280Event::Header.
      TClass *R__cl = ::ND::TND280Event::Header::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecordType", &fRecordType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeStamp", &fTimeStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunType", &fRunType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorCode", &fErrorCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerWord", &fTriggerWord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCMSecond", &fMCMSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCMSubSecond", &fMCMSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCMTimeSinceBusy", &fMCMTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP0DSecond", &fP0DSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP0DSubSecond", &fP0DSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP0DTimeSinceBusy", &fP0DTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTPCSecond", &fTPCSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTPCSubSecond", &fTPCSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTPCTimeSinceBusy", &fTPCTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFGDSecond", &fFGDSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFGDSubSecond", &fFGDSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFGDTimeSinceBusy", &fFGDTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fECalSecond", &fECalSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fECalSubSecond", &fECalSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fECalTimeSinceBusy", &fECalTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSMRDSecond", &fSMRDSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSMRDSubSecond", &fSMRDSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSMRDTimeSinceBusy", &fSMRDTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fINGRIDSecond", &fINGRIDSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fINGRIDSubSecond", &fINGRIDSubSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fINGRIDTimeSinceBusy", &fINGRIDTimeSinceBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCTMTriggerPattern[3]", fCTMTriggerPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFGDCTMTriggerPattern[3]", fFGDCTMTriggerPattern);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTND280EventcLcLHeader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TND280Event::Header : new ::ND::TND280Event::Header;
   }
   static void *newArray_NDcLcLTND280EventcLcLHeader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ND::TND280Event::Header[nElements] : new ::ND::TND280Event::Header[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTND280EventcLcLHeader(void *p) {
      delete ((::ND::TND280Event::Header*)p);
   }
   static void deleteArray_NDcLcLTND280EventcLcLHeader(void *p) {
      delete [] ((::ND::TND280Event::Header*)p);
   }
   static void destruct_NDcLcLTND280EventcLcLHeader(void *p) {
      typedef ::ND::TND280Event::Header current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TND280Event::Header

      namespace ND {
//______________________________________________________________________________
void TTruthTrajectoriesModule::TTruthTrajectory::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTruthTrajectoriesModule::TTruthTrajectory.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTruthTrajectoriesModule::TTruthTrajectory::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTruthTrajectoriesModule::TTruthTrajectory::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTruthTrajectoriesModule::TTruthTrajectory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTruthTrajectoriesModule::TTruthTrajectory.
      TClass *R__cl = ::ND::TTruthTrajectoriesModule::TTruthTrajectory::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID", &ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PDG", &PDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Name", (void*)&Name);
      R__insp.InspectMember("string", (void*)&Name, "Name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Category", &Category);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InitMomentum", &InitMomentum);
      R__insp.InspectMember(InitMomentum, "InitMomentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InitPosition", &InitPosition);
      R__insp.InspectMember(InitPosition, "InitPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FinalPosition", &FinalPosition);
      R__insp.InspectMember(FinalPosition, "FinalPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParentID", &ParentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryID", &PrimaryID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mass", &Mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceSubdetectors", (void*)&TraceSubdetectors);
      R__insp.InspectMember("vector<int>", (void*)&TraceSubdetectors, "TraceSubdetectors.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceInActive", (void*)&TraceInActive);
      R__insp.InspectMember("vector<bool>", (void*)&TraceInActive, "TraceInActive.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceEntrancePosition", (void*)&TraceEntrancePosition);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&TraceEntrancePosition, "TraceEntrancePosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceExitPosition", (void*)&TraceExitPosition);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&TraceExitPosition, "TraceExitPosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceEntranceMomentum", (void*)&TraceEntranceMomentum);
      R__insp.InspectMember("vector<TVector3>", (void*)&TraceEntranceMomentum, "TraceEntranceMomentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TraceExitMomentum", (void*)&TraceExitMomentum);
      R__insp.InspectMember("vector<TVector3>", (void*)&TraceExitMomentum, "TraceExitMomentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InitSubdetector", &InitSubdetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FinalSubdetector", &FinalSubdetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnteredSubdetector[13]", EnteredSubdetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitedSubdetector[13]", ExitedSubdetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntrancePosition[13]", EntrancePosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitPosition[13]", ExitPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntranceMomentum[13]", EntranceMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitMomentum[13]", ExitMomentum);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p) {
      return  p ? new(p) ::ND::TTruthTrajectoriesModule::TTruthTrajectory : new ::ND::TTruthTrajectoriesModule::TTruthTrajectory;
   }
   static void *newArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTruthTrajectoriesModule::TTruthTrajectory[nElements] : new ::ND::TTruthTrajectoriesModule::TTruthTrajectory[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p) {
      delete ((::ND::TTruthTrajectoriesModule::TTruthTrajectory*)p);
   }
   static void deleteArray_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p) {
      delete [] ((::ND::TTruthTrajectoriesModule::TTruthTrajectory*)p);
   }
   static void destruct_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void *p) {
      typedef ::ND::TTruthTrajectoriesModule::TTruthTrajectory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTruthTrajectoriesModule::TTruthTrajectory

      namespace ND {
//______________________________________________________________________________
void TTruthVerticesModule::TTruthVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTruthVerticesModule::TTruthVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTruthVerticesModule::TTruthVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTruthVerticesModule::TTruthVertex::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTruthVerticesModule::TTruthVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTruthVerticesModule::TTruthVertex.
      TClass *R__cl = ::ND::TTruthVerticesModule::TTruthVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID", &ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Generator", (void*)&Generator);
      R__insp.InspectMember("string", (void*)&Generator, "Generator.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ReactionCode", (void*)&ReactionCode);
      R__insp.InspectMember("string", (void*)&ReactionCode, "ReactionCode.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Subdetector", &Subdetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fiducial", &Fiducial);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPrimaryTraj", &NPrimaryTraj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryTrajIDs", (void*)&PrimaryTrajIDs);
      R__insp.InspectMember("vector<Int_t>", (void*)&PrimaryTrajIDs, "PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NeutrinoPDG", &NeutrinoPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NeutrinoMomentum", &NeutrinoMomentum);
      R__insp.InspectMember(NeutrinoMomentum, "NeutrinoMomentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TargetPDG", &TargetPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TargetMomentum", &TargetMomentum);
      R__insp.InspectMember(TargetMomentum, "TargetMomentum.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p) {
      return  p ? new(p) ::ND::TTruthVerticesModule::TTruthVertex : new ::ND::TTruthVerticesModule::TTruthVertex;
   }
   static void *newArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTruthVerticesModule::TTruthVertex[nElements] : new ::ND::TTruthVerticesModule::TTruthVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p) {
      delete ((::ND::TTruthVerticesModule::TTruthVertex*)p);
   }
   static void deleteArray_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p) {
      delete [] ((::ND::TTruthVerticesModule::TTruthVertex*)p);
   }
   static void destruct_NDcLcLTTruthVerticesModulecLcLTTruthVertex(void *p) {
      typedef ::ND::TTruthVerticesModule::TTruthVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTruthVerticesModule::TTruthVertex

      namespace ND {
//______________________________________________________________________________
void TP0DReconModule::TP0DAlgoRes::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DAlgoRes.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DAlgoRes::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DAlgoRes::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DReconModule::TP0DAlgoRes::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DAlgoRes.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DAlgoRes::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FullName", (void*)&FullName);
      R__insp.InspectMember("string", (void*)&FullName, "FullName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgoResults", (void*)&AlgoResults);
      R__insp.InspectMember("vector<short>", (void*)&AlgoResults, "AlgoResults.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Parent", &Parent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UsedHitCluster", &UsedHitCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UnusedHitCluster", &UnusedHitCluster);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DAlgoRes : new ::ND::TP0DReconModule::TP0DAlgoRes;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DAlgoRes[nElements] : new ::ND::TP0DReconModule::TP0DAlgoRes[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p) {
      delete ((::ND::TP0DReconModule::TP0DAlgoRes*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DAlgoRes*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DAlgoRes(void *p) {
      typedef ::ND::TP0DReconModule::TP0DAlgoRes current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DReconModule::TP0DAlgoRes

      namespace ND {
//______________________________________________________________________________
void TP0DReconModule::TP0DVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DVertex::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DReconModule::TP0DVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DVertex.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fiducial", &Fiducial);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DVertex : new ::ND::TP0DReconModule::TP0DVertex;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DVertex(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DVertex[nElements] : new ::ND::TP0DReconModule::TP0DVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p) {
      delete ((::ND::TP0DReconModule::TP0DVertex*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DVertex*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DVertex(void *p) {
      typedef ::ND::TP0DReconModule::TP0DVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DReconModule::TP0DVertex

      namespace ND {
//______________________________________________________________________________
void TP0DReconModule::TP0DParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DParticle::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DReconModule::TP0DParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DParticle.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SideDeposit", &SideDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EndDeposit", &EndDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirVariance", &DirVariance);
      R__insp.InspectMember(DirVariance, "DirVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "realPIDNames", (void*)&realPIDNames);
      R__insp.InspectMember("vector<string>", (void*)&realPIDNames, "realPIDNames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "realPIDValues", (void*)&realPIDValues);
      R__insp.InspectMember("vector<vector<float> >", (void*)&realPIDValues, "realPIDValues.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "integerPIDNames", (void*)&integerPIDNames);
      R__insp.InspectMember("vector<string>", (void*)&integerPIDNames, "integerPIDNames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "integerPIDValues", (void*)&integerPIDValues);
      R__insp.InspectMember("vector<vector<short> >", (void*)&integerPIDValues, "integerPIDValues.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID", (void*)&PID);
      R__insp.InspectMember("vector<short>", (void*)&PID, "PID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_weight", (void*)&PID_weight);
      R__insp.InspectMember("vector<float>", (void*)&PID_weight, "PID_weight.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DParticle : new ::ND::TP0DReconModule::TP0DParticle;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DParticle(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DParticle[nElements] : new ::ND::TP0DReconModule::TP0DParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p) {
      delete ((::ND::TP0DReconModule::TP0DParticle*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DParticle*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DParticle(void *p) {
      typedef ::ND::TP0DReconModule::TP0DParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DReconModule::TP0DParticle

      namespace ND {
//______________________________________________________________________________
void TP0DReconModule::TP0DShower::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DShower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DShower::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DShower::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DReconModule::TP0DShower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DShower.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DShower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SideDeposit", &SideDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EndDeposit", &EndDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirVariance", &DirVariance);
      R__insp.InspectMember(DirVariance, "DirVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cone", &Cone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DShower(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DShower : new ::ND::TP0DReconModule::TP0DShower;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DShower(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DShower[nElements] : new ::ND::TP0DReconModule::TP0DShower[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DShower(void *p) {
      delete ((::ND::TP0DReconModule::TP0DShower*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DShower(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DShower*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DShower(void *p) {
      typedef ::ND::TP0DReconModule::TP0DShower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DReconModule::TP0DShower

      namespace ND {
//______________________________________________________________________________
void TP0DReconModule::TP0DTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DTrack::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DReconModule::TP0DTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DTrack.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SideDeposit", &SideDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EndDeposit", &EndDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirVariance", &DirVariance);
      R__insp.InspectMember(DirVariance, "DirVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DTrack : new ::ND::TP0DReconModule::TP0DTrack;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DTrack[nElements] : new ::ND::TP0DReconModule::TP0DTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p) {
      delete ((::ND::TP0DReconModule::TP0DTrack*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DTrack*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DTrack(void *p) {
      typedef ::ND::TP0DReconModule::TP0DTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DReconModule::TP0DTrack

      namespace ND {
//______________________________________________________________________________
void TP0DReconModule::TP0DNode::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DNode.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DNode::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DNode::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DReconModule::TP0DNode::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DNode.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DNode::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirVariance", &DirVariance);
      R__insp.InspectMember(DirVariance, "DirVariance.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DNode(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DNode : new ::ND::TP0DReconModule::TP0DNode;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DNode(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DNode[nElements] : new ::ND::TP0DReconModule::TP0DNode[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DNode(void *p) {
      delete ((::ND::TP0DReconModule::TP0DNode*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DNode(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DNode*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DNode(void *p) {
      typedef ::ND::TP0DReconModule::TP0DNode current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DReconModule::TP0DNode

      namespace ND {
//______________________________________________________________________________
void TP0DReconModule::TP0DHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DHit::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DReconModule::TP0DHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DHit.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeomID", &GeomID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChanID", &ChanID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DHit(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DHit : new ::ND::TP0DReconModule::TP0DHit;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DHit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DHit[nElements] : new ::ND::TP0DReconModule::TP0DHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DHit(void *p) {
      delete ((::ND::TP0DReconModule::TP0DHit*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DHit(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DHit*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DHit(void *p) {
      typedef ::ND::TP0DReconModule::TP0DHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DReconModule::TP0DHit

      namespace ND {
//______________________________________________________________________________
void TP0DReconModule::TP0DCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule::TP0DCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::TP0DCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::TP0DCluster::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DReconModule::TP0DCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule::TP0DCluster.
      TClass *R__cl = ::ND::TP0DReconModule::TP0DCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cycle", &Cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertices", (void*)&Vertices);
      R__insp.InspectMember("vector<short>", (void*)&Vertices, "Vertices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Particles", (void*)&Particles);
      R__insp.InspectMember("vector<short>", (void*)&Particles, "Particles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<short>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Showers", (void*)&Showers);
      R__insp.InspectMember("vector<short>", (void*)&Showers, "Showers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clusters", (void*)&Clusters);
      R__insp.InspectMember("vector<short>", (void*)&Clusters, "Clusters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nodes", (void*)&Nodes);
      R__insp.InspectMember("vector<short>", (void*)&Nodes, "Nodes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hits", (void*)&Hits);
      R__insp.InspectMember("vector<short>", (void*)&Hits, "Hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_PrimaryTrajIDs", (void*)&Truth_PrimaryTrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_PrimaryTrajIDs, "Truth_PrimaryTrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_TrajIDs", (void*)&Truth_TrajIDs);
      R__insp.InspectMember("vector<int>", (void*)&Truth_TrajIDs, "Truth_TrajIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_HitCount", (void*)&Truth_HitCount);
      R__insp.InspectMember("vector<short>", (void*)&Truth_HitCount, "Truth_HitCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth_ChargeShare", (void*)&Truth_ChargeShare);
      R__insp.InspectMember("vector<float>", (void*)&Truth_ChargeShare, "Truth_ChargeShare.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFiducialHits", &NFiducialHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosVariance", &PosVariance);
      R__insp.InspectMember(PosVariance, "PosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ValidDimensions", &ValidDimensions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Moments[9]", Moments);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule::TP0DCluster : new ::ND::TP0DReconModule::TP0DCluster;
   }
   static void *newArray_NDcLcLTP0DReconModulecLcLTP0DCluster(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule::TP0DCluster[nElements] : new ::ND::TP0DReconModule::TP0DCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p) {
      delete ((::ND::TP0DReconModule::TP0DCluster*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p) {
      delete [] ((::ND::TP0DReconModule::TP0DCluster*)p);
   }
   static void destruct_NDcLcLTP0DReconModulecLcLTP0DCluster(void *p) {
      typedef ::ND::TP0DReconModule::TP0DCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DReconModule::TP0DCluster

      namespace ND {
//______________________________________________________________________________
void TP0DECALReconModule::TP0DECALReconTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DECALReconModule::TP0DECALReconTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DECALReconModule::TP0DECALReconTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DECALReconModule::TP0DECALReconTrack::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DECALReconModule::TP0DECALReconTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DECALReconModule::TP0DECALReconTrack.
      TClass *R__cl = ::ND::TP0DECALReconModule::TP0DECALReconTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Curvature", &Curvature);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.InspectMember(Width, "Width.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AMR", &AMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CWTrackWidth", &CWTrackWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Max_Ratio", &Max_Ratio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NormChargeSD", &NormChargeSD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PathChargeRatio", &PathChargeRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrShval", &TrShval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BenCWPosition", &BenCWPosition);
      R__insp.InspectMember(BenCWPosition, "BenCWPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StackNo", &StackNo);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p) {
      return  p ? new(p) ::ND::TP0DECALReconModule::TP0DECALReconTrack : new ::ND::TP0DECALReconModule::TP0DECALReconTrack;
   }
   static void *newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DECALReconModule::TP0DECALReconTrack[nElements] : new ::ND::TP0DECALReconModule::TP0DECALReconTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p) {
      delete ((::ND::TP0DECALReconModule::TP0DECALReconTrack*)p);
   }
   static void deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p) {
      delete [] ((::ND::TP0DECALReconModule::TP0DECALReconTrack*)p);
   }
   static void destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void *p) {
      typedef ::ND::TP0DECALReconModule::TP0DECALReconTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DECALReconModule::TP0DECALReconTrack

      namespace ND {
//______________________________________________________________________________
void TP0DECALReconModule::TP0DECALReconShower::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DECALReconModule::TP0DECALReconShower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DECALReconModule::TP0DECALReconShower::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DECALReconModule::TP0DECALReconShower::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DECALReconModule::TP0DECALReconShower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DECALReconModule::TP0DECALReconShower.
      TClass *R__cl = ::ND::TP0DECALReconModule::TP0DECALReconShower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConeAngle", &ConeAngle);
      R__insp.InspectMember(ConeAngle, "ConeAngle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AMR", &AMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CWTrackWidth", &CWTrackWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Max_Ratio", &Max_Ratio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NormChargeSD", &NormChargeSD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PathChargeRatio", &PathChargeRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrShval", &TrShval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BenCWPosition", &BenCWPosition);
      R__insp.InspectMember(BenCWPosition, "BenCWPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StackNo", &StackNo);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p) {
      return  p ? new(p) ::ND::TP0DECALReconModule::TP0DECALReconShower : new ::ND::TP0DECALReconModule::TP0DECALReconShower;
   }
   static void *newArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DECALReconModule::TP0DECALReconShower[nElements] : new ::ND::TP0DECALReconModule::TP0DECALReconShower[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p) {
      delete ((::ND::TP0DECALReconModule::TP0DECALReconShower*)p);
   }
   static void deleteArray_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p) {
      delete [] ((::ND::TP0DECALReconModule::TP0DECALReconShower*)p);
   }
   static void destruct_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void *p) {
      typedef ::ND::TP0DECALReconModule::TP0DECALReconShower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DECALReconModule::TP0DECALReconShower

      namespace ND {
//______________________________________________________________________________
void TTrackerECALReconModule::TECALReconObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALReconModule::TECALReconObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALReconModule::TECALReconObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALReconModule::TECALReconObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerECALReconModule::TECALReconObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALReconModule::TECALReconObject.
      TClass *R__cl = ::ND::TTrackerECALReconModule::TECALReconObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Track", &Track);
      R__insp.InspectMember(Track, "Track.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Shower", &Shower);
      R__insp.InspectMember(Shower, "Shower.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cluster", &Cluster);
      R__insp.InspectMember(Cluster, "Cluster.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID", &G4ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Primary", &G4ID_Primary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Completeness_Primary", &Completeness_Primary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cleanliness_Primary", &Cleanliness_Primary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Recursive", &G4ID_Recursive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Completeness_Recursive", &Completeness_Recursive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cleanliness_Recursive", &Cleanliness_Recursive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Single", &G4ID_Single);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Completeness_Single", &Completeness_Single);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cleanliness_Single", &Cleanliness_Single);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsTrackLike", &IsTrackLike);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsShowerLike", &IsShowerLike);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeBunch", &TimeBunch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NIsXHits", &NIsXHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NIsYHits", &NIsYHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NIsZHits", &NIsZHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLayersHit", &NLayersHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxPerpBarHit", &maxPerpBarHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxParaBarHit", &maxParaBarHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minBarHit", &minBarHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mostUpStreamLayerHit", &mostUpStreamLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mostDownStreamLayerHit", &mostDownStreamLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalHitCharge", &TotalHitCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AverageHitTime", &AverageHitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Module", (void*)&Module);
      R__insp.InspectMember("string", (void*)&Module, "Module.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ObjectLength", &ObjectLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_AMR", &PID_AMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Circularity", &PID_Circularity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_CircularityView0", &PID_CircularityView0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_CircularityView1", &PID_CircularityView1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Angle", &PID_Angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Max_Ratio", &PID_Max_Ratio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_ShowerAngle", &PID_ShowerAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Asymmetry", &PID_Asymmetry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_MeanPosition", &PID_MeanPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Qskew", &PID_Qskew);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_ShowerWidth", &PID_ShowerWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_EMLikelihood", &PID_EMLikelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_TrShval", &PID_TrShval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_EMHadVal", &PID_EMHadVal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_TruncatedMaxRatio", &PID_TruncatedMaxRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_TransverseChargeRatio", &PID_TransverseChargeRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_NormalizedMipChi2", &PID_NormalizedMipChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_NormalizedMipChi2AllLayers", &PID_NormalizedMipChi2AllLayers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_FrontBackRatio", &PID_FrontBackRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_FrontBackRatioNumerator", &PID_FrontBackRatioNumerator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_FrontBackRatioDenominator", &PID_FrontBackRatioDenominator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Containment", &Containment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AverageZPosition", &AverageZPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Result", &EMEnergyFit_Result);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Uncertainty", &EMEnergyFit_Uncertainty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Likelihood_energyGrad", &EMEnergyFit_Likelihood_energyGrad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Likelihood_energy_qsumGrad", &EMEnergyFit_Likelihood_energy_qsumGrad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Likelihood_qsum_like", &EMEnergyFit_Likelihood_qsum_like);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Para_QSum", &EMEnergyFit_Para_QSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Para_QMean", &EMEnergyFit_Para_QMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Para_QRMS", &EMEnergyFit_Para_QRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Para_QSkew", &EMEnergyFit_Para_QSkew);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyFit_Para_QMax", &EMEnergyFit_Para_QMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_NDelayedCluster", &MElectronTag_NDelayedCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_NDelayedHits", (void*)&MElectronTag_NDelayedHits);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_NDelayedHits, "MElectronTag_NDelayedHits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_DeltaX", (void*)&MElectronTag_DeltaX);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_DeltaX, "MElectronTag_DeltaX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_DeltaY", (void*)&MElectronTag_DeltaY);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_DeltaY, "MElectronTag_DeltaY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_DeltaZ", (void*)&MElectronTag_DeltaZ);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_DeltaZ, "MElectronTag_DeltaZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_DeltaT", (void*)&MElectronTag_DeltaT);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_DeltaT, "MElectronTag_DeltaT.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_EDep", (void*)&MElectronTag_EDep);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_EDep, "MElectronTag_EDep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_TrackEnd", (void*)&MElectronTag_TrackEnd);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_TrackEnd, "MElectronTag_TrackEnd.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Thrust", &Thrust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThrustOrigin", &ThrustOrigin);
      R__insp.InspectMember(ThrustOrigin, "ThrustOrigin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThrustAxis", &ThrustAxis);
      R__insp.InspectMember(ThrustAxis, "ThrustAxis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFNNodes", &KFNNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFMultiTracksTPC", &KFMultiTracksTPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFMultiTracksECAL", &KFMultiTracksECAL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFNDOF", &KFNDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFQuality", &KFQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFParameter", &KFParameter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFParameterNodes", &KFParameterNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFHitQuality", &KFHitQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFIsMatched", &KFIsMatched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatchingLikelihood", &MatchingLikelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FirstLayer", &FirstLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LastLayer", &LastLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHitsAtLayersWithManyHits", &NHitsAtLayersWithManyHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLayersOneHits", &NLayersOneHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLayersTwoHits", &NLayersTwoHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLayersThreeHits", &NLayersThreeHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLayersFourHits", &NLayersFourHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLayersFiveHits", &NLayersFiveHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLayersSixHits", &NLayersSixHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLayersSevenHits", &NLayersSevenHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FirstLayerManyHits", &FirstLayerManyHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SecondLayerManyHits", &SecondLayerManyHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThirdLayerManyHits", &ThirdLayerManyHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LastLayerManyHits", &LastLayerManyHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxHitsInALayer", &MaxHitsInALayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxHitChargeLayer", &MaxHitChargeLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pointing", &Pointing);
      R__insp.InspectMember(Pointing, "Pointing.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p) {
      return  p ? new(p) ::ND::TTrackerECALReconModule::TECALReconObject : new ::ND::TTrackerECALReconModule::TECALReconObject;
   }
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALReconModule::TECALReconObject[nElements] : new ::ND::TTrackerECALReconModule::TECALReconObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p) {
      delete ((::ND::TTrackerECALReconModule::TECALReconObject*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p) {
      delete [] ((::ND::TTrackerECALReconModule::TECALReconObject*)p);
   }
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconObject(void *p) {
      typedef ::ND::TTrackerECALReconModule::TECALReconObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerECALReconModule::TECALReconObject

      namespace ND {
//______________________________________________________________________________
void TTrackerECALReconModule::TECALReconTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALReconModule::TECALReconTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALReconModule::TECALReconTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALReconModule::TECALReconTrack::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerECALReconModule::TECALReconTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALReconModule::TECALReconTrack.
      TClass *R__cl = ::ND::TTrackerECALReconModule::TECALReconTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Curvature", &Curvature);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVar", &PositionVar);
      R__insp.InspectMember(PositionVar, "PositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.InspectMember(Width, "Width.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p) {
      return  p ? new(p) ::ND::TTrackerECALReconModule::TECALReconTrack : new ::ND::TTrackerECALReconModule::TECALReconTrack;
   }
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALReconModule::TECALReconTrack[nElements] : new ::ND::TTrackerECALReconModule::TECALReconTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p) {
      delete ((::ND::TTrackerECALReconModule::TECALReconTrack*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p) {
      delete [] ((::ND::TTrackerECALReconModule::TECALReconTrack*)p);
   }
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void *p) {
      typedef ::ND::TTrackerECALReconModule::TECALReconTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerECALReconModule::TECALReconTrack

      namespace ND {
//______________________________________________________________________________
void TTrackerECALReconModule::TECALReconShower::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALReconModule::TECALReconShower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALReconModule::TECALReconShower::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALReconModule::TECALReconShower::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerECALReconModule::TECALReconShower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALReconModule::TECALReconShower.
      TClass *R__cl = ::ND::TTrackerECALReconModule::TECALReconShower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConeAngle", &ConeAngle);
      R__insp.InspectMember(ConeAngle, "ConeAngle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVar", &PositionVar);
      R__insp.InspectMember(PositionVar, "PositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p) {
      return  p ? new(p) ::ND::TTrackerECALReconModule::TECALReconShower : new ::ND::TTrackerECALReconModule::TECALReconShower;
   }
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALReconModule::TECALReconShower[nElements] : new ::ND::TTrackerECALReconModule::TECALReconShower[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p) {
      delete ((::ND::TTrackerECALReconModule::TECALReconShower*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p) {
      delete [] ((::ND::TTrackerECALReconModule::TECALReconShower*)p);
   }
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconShower(void *p) {
      typedef ::ND::TTrackerECALReconModule::TECALReconShower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerECALReconModule::TECALReconShower

      namespace ND {
//______________________________________________________________________________
void TTrackerECALReconModule::TECALReconCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALReconModule::TECALReconCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALReconModule::TECALReconCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALReconModule::TECALReconCluster::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerECALReconModule::TECALReconCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALReconModule::TECALReconCluster.
      TClass *R__cl = ::ND::TTrackerECALReconModule::TECALReconCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVar", &PositionVar);
      R__insp.InspectMember(PositionVar, "PositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p) {
      return  p ? new(p) ::ND::TTrackerECALReconModule::TECALReconCluster : new ::ND::TTrackerECALReconModule::TECALReconCluster;
   }
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALReconModule::TECALReconCluster[nElements] : new ::ND::TTrackerECALReconModule::TECALReconCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p) {
      delete ((::ND::TTrackerECALReconModule::TECALReconCluster*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p) {
      delete [] ((::ND::TTrackerECALReconModule::TECALReconCluster*)p);
   }
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void *p) {
      typedef ::ND::TTrackerECALReconModule::TECALReconCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerECALReconModule::TECALReconCluster

      namespace ND {
//______________________________________________________________________________
void TTrackerECALReconModule::TECALReconUnmatchedObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALReconModule::TECALReconUnmatchedObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerECALReconModule::TECALReconUnmatchedObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALReconModule::TECALReconUnmatchedObject.
      TClass *R__cl = ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "View", &View);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalHitCharge", &TotalHitCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AverageHitTime", &AverageHitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mostUpStreamLayerHit", &mostUpStreamLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mostDownStreamLayerHit", &mostDownStreamLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID", &G4ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Primary", &G4ID_Primary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Recursive", &G4ID_Recursive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G4ID_Single", &G4ID_Single);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p) {
      return  p ? new(p) ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject : new ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject;
   }
   static void *newArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject[nElements] : new ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p) {
      delete ((::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p) {
      delete [] ((::ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)p);
   }
   static void destruct_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void *p) {
      typedef ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerECALReconModule::TECALReconUnmatchedObject

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TGlobalVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TGlobalVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TGlobalVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TGlobalVertex::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TGlobalVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TGlobalVertex.
      TClass *R__cl = ::ND::TGlobalReconModule::TGlobalVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryIndex", &PrimaryIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTrueVertices", &NTrueVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TrueVertices", &TrueVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Constituents", &Constituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackTrueVertexObject", &hackTrueVertexObject);
      R__insp.InspectMember(hackTrueVertexObject, "hackTrueVertexObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackVertexConstituentObject", &hackVertexConstituentObject);
      R__insp.InspectMember(hackVertexConstituentObject, "hackVertexConstituentObject.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TGlobalVertex : new ::ND::TGlobalReconModule::TGlobalVertex;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TGlobalVertex[nElements] : new ::ND::TGlobalReconModule::TGlobalVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p) {
      delete ((::ND::TGlobalReconModule::TGlobalVertex*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p) {
      delete [] ((::ND::TGlobalReconModule::TGlobalVertex*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalVertex(void *p) {
      typedef ::ND::TGlobalReconModule::TGlobalVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TGlobalVertex

      namespace ND {
//______________________________________________________________________________
void TTrueVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrueVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrueVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrueVertex::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrueVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrueVertex.
      TClass *R__cl = ::ND::TTrueVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID", &ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pur", &Pur);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eff", &Eff);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrueVertex(void *p) {
      return  p ? new(p) ::ND::TTrueVertex : new ::ND::TTrueVertex;
   }
   static void *newArray_NDcLcLTTrueVertex(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrueVertex[nElements] : new ::ND::TTrueVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrueVertex(void *p) {
      delete ((::ND::TTrueVertex*)p);
   }
   static void deleteArray_NDcLcLTTrueVertex(void *p) {
      delete [] ((::ND::TTrueVertex*)p);
   }
   static void destruct_NDcLcLTTrueVertex(void *p) {
      typedef ::ND::TTrueVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrueVertex

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TVertexConstituent::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TVertexConstituent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TVertexConstituent::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TVertexConstituent::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TVertexConstituent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TVertexConstituent.
      TClass *R__cl = ::ND::TGlobalReconModule::TVertexConstituent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.InspectMember(Momentum, "Momentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID", &PID);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TVertexConstituent : new ::ND::TGlobalReconModule::TVertexConstituent;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TVertexConstituent[nElements] : new ::ND::TGlobalReconModule::TVertexConstituent[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p) {
      delete ((::ND::TGlobalReconModule::TVertexConstituent*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p) {
      delete [] ((::ND::TGlobalReconModule::TVertexConstituent*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTVertexConstituent(void *p) {
      typedef ::ND::TGlobalReconModule::TVertexConstituent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TVertexConstituent

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TFgdCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TFgdCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TFgdCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TFgdCluster::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TFgdCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TFgdCluster.
      TClass *R__cl = ::ND::TGlobalReconModule::TFgdCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalCharge", &TotalCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeDisp", &TimeDisp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SpatialDisp", &SpatialDisp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosRMS", &PosRMS);
      R__insp.InspectMember(PosRMS, "PosRMS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTFgdCluster(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TFgdCluster : new ::ND::TGlobalReconModule::TFgdCluster;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTFgdCluster(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TFgdCluster[nElements] : new ::ND::TGlobalReconModule::TFgdCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTFgdCluster(void *p) {
      delete ((::ND::TGlobalReconModule::TFgdCluster*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTFgdCluster(void *p) {
      delete [] ((::ND::TGlobalReconModule::TFgdCluster*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTFgdCluster(void *p) {
      typedef ::ND::TGlobalReconModule::TFgdCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TFgdCluster

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TFgdTimeBin::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TFgdTimeBin.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TFgdTimeBin::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TFgdTimeBin::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TFgdTimeBin::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TFgdTimeBin.
      TClass *R__cl = ::ND::TGlobalReconModule::TFgdTimeBin::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minTime", &minTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxTime", &maxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHits[2]", nHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rawChargeSum[2]", rawChargeSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargePerLayer[2][30]", chargePerLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargeWeightedPos[2]", chargeWeightedPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD1OutermostHits", &FGD1OutermostHits);
      R__insp.InspectMember(FGD1OutermostHits, "FGD1OutermostHits.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FGD2OutermostHits", &FGD2OutermostHits);
      R__insp.InspectMember(FGD2OutermostHits, "FGD2OutermostHits.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFGD1Unused", &NFGD1Unused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FGD1Unused", &FGD1Unused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFGD2Unused", &NFGD2Unused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FGD2Unused", &FGD2Unused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g4ID", &g4ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackFGDUnused", &hackFGDUnused);
      R__insp.InspectMember(hackFGDUnused, "hackFGDUnused.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TFgdTimeBin : new ::ND::TGlobalReconModule::TFgdTimeBin;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TFgdTimeBin[nElements] : new ::ND::TGlobalReconModule::TFgdTimeBin[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p) {
      delete ((::ND::TGlobalReconModule::TFgdTimeBin*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p) {
      delete [] ((::ND::TGlobalReconModule::TFgdTimeBin*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTFgdTimeBin(void *p) {
      typedef ::ND::TGlobalReconModule::TFgdTimeBin current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TFgdTimeBin

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TOutermostHits::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TOutermostHits.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TOutermostHits::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TOutermostHits::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TOutermostHits::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TOutermostHits.
      TClass *R__cl = ::ND::TGlobalReconModule::TOutermostHits::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMinX", &hitMinX);
      R__insp.InspectMember(hitMinX, "hitMinX.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMaxX", &hitMaxX);
      R__insp.InspectMember(hitMaxX, "hitMaxX.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMinY", &hitMinY);
      R__insp.InspectMember(hitMinY, "hitMinY.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMaxY", &hitMaxY);
      R__insp.InspectMember(hitMaxY, "hitMaxY.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMinZ", &hitMinZ);
      R__insp.InspectMember(hitMinZ, "hitMinZ.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitMaxZ", &hitMaxZ);
      R__insp.InspectMember(hitMaxZ, "hitMaxZ.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TOutermostHits : new ::ND::TGlobalReconModule::TOutermostHits;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTOutermostHits(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TOutermostHits[nElements] : new ::ND::TGlobalReconModule::TOutermostHits[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p) {
      delete ((::ND::TGlobalReconModule::TOutermostHits*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p) {
      delete [] ((::ND::TGlobalReconModule::TOutermostHits*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTOutermostHits(void *p) {
      typedef ::ND::TGlobalReconModule::TOutermostHits current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TOutermostHits

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TGlobalHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TGlobalHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TGlobalHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TGlobalHit::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TGlobalHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TGlobalHit.
      TClass *R__cl = ::ND::TGlobalReconModule::TGlobalHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionError", &PositionError);
      R__insp.InspectMember(PositionError, "PositionError.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Type", &Type);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TGlobalHit : new ::ND::TGlobalReconModule::TGlobalHit;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalHit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TGlobalHit[nElements] : new ::ND::TGlobalReconModule::TGlobalHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p) {
      delete ((::ND::TGlobalReconModule::TGlobalHit*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p) {
      delete [] ((::ND::TGlobalReconModule::TGlobalHit*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalHit(void *p) {
      typedef ::ND::TGlobalReconModule::TGlobalHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TGlobalHit

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TGlobalPID::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TGlobalPID.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TGlobalPID::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TGlobalPID::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TGlobalPID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TGlobalPID.
      TClass *R__cl = ::ND::TGlobalReconModule::TGlobalPID::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BrokenUniqueIDs", (void*)&BrokenUniqueIDs);
      R__insp.InspectMember("vector<UInt_t>", (void*)&BrokenUniqueIDs, "BrokenUniqueIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detectors", &Detectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DetectorUsed[19]", DetectorUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNodes", &NNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isForward", &isForward);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SenseOK", &SenseOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cone", &Cone);
      R__insp.InspectMember(Cone, "Cone.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParticleIds", (void*)&ParticleIds);
      R__insp.InspectMember("vector<int>", (void*)&ParticleIds, "ParticleIds.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PIDWeights", (void*)&PIDWeights);
      R__insp.InspectMember("vector<double>", (void*)&PIDWeights, "PIDWeights.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPositionVar", &FrontPositionVar);
      R__insp.InspectMember(FrontPositionVar, "FrontPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPositionVar", &BackPositionVar);
      R__insp.InspectMember(BackPositionVar, "BackPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirection", &FrontDirection);
      R__insp.InspectMember(FrontDirection, "FrontDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirection", &BackDirection);
      R__insp.InspectMember(BackDirection, "BackDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirectionVar", &FrontDirectionVar);
      R__insp.InspectMember(FrontDirectionVar, "FrontDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirectionVar", &BackDirectionVar);
      R__insp.InspectMember(BackDirectionVar, "BackDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentum", &FrontMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentum", &BackMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentumError", &FrontMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentumError", &BackMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionAtTrueVertex", &PositionAtTrueVertex);
      R__insp.InspectMember(PositionAtTrueVertex, "PositionAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVarAtTrueVertex", &PositionVarAtTrueVertex);
      R__insp.InspectMember(PositionVarAtTrueVertex, "PositionVarAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionAtTrueVertex", &DirectionAtTrueVertex);
      R__insp.InspectMember(DirectionAtTrueVertex, "DirectionAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVarAtTrueVertex", &DirectionVarAtTrueVertex);
      R__insp.InspectMember(DirectionVarAtTrueVertex, "DirectionVarAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumAtTrueVertex", &MomentumAtTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumErrorAtTrueVertex", &MomentumErrorAtTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntranceOK[25]", EntranceOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitOK[25]", ExitOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntrancePosition[25]", EntrancePosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitPosition[25]", ExitPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntranceDirection[25]", EntranceDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitDirection[25]", ExitDirection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntranceMomentum[25]", EntranceMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitMomentum[25]", ExitMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntrancePositionErr[25]", EntrancePositionErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitPositionErr[25]", ExitPositionErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntranceDirectionErr[25]", EntranceDirectionErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitDirectionErr[25]", ExitDirectionErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EntranceMomentumErr[25]", EntranceMomentumErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExitMomentumErr[25]", ExitMomentumErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHitsSaved", &NHitsSaved);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HitsSaved", &HitsSaved);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParticle", &TrueParticle);
      R__insp.InspectMember(TrueParticle, "TrueParticle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTRACKERs", &NTRACKERs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TRACKER", &TRACKER);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTPCs", &NTPCs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TPC", &TPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFGDs", &NFGDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FGD", &FGD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NECALs", &NECALs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDsECALs", &NDsECALs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTrECALs", &NTrECALs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ECAL", &ECAL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NP0DECALs", &NP0DECALs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*P0DECAL", &P0DECAL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NP0Ds", &NP0Ds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*P0D", &P0D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NSMRDs", &NSMRDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SMRD", &SMRD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NAlternates", &NAlternates);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Alternates", &Alternates);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackTPCObject", &hackTPCObject);
      R__insp.InspectMember(hackTPCObject, "hackTPCObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackFGDObject", &hackFGDObject);
      R__insp.InspectMember(hackFGDObject, "hackFGDObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackECALObject", &hackECALObject);
      R__insp.InspectMember(hackECALObject, "hackECALObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackP0DObject", &hackP0DObject);
      R__insp.InspectMember(hackP0DObject, "hackP0DObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackSMRDObject", &hackSMRDObject);
      R__insp.InspectMember(hackSMRDObject, "hackSMRDObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackTrackerObject", &hackTrackerObject);
      R__insp.InspectMember(hackTrackerObject, "hackTrackerObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackGlobalPIDAlternate", &hackGlobalPIDAlternate);
      R__insp.InspectMember(hackGlobalPIDAlternate, "hackGlobalPIDAlternate.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TGlobalPID : new ::ND::TGlobalReconModule::TGlobalPID;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalPID(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TGlobalPID[nElements] : new ::ND::TGlobalReconModule::TGlobalPID[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p) {
      delete ((::ND::TGlobalReconModule::TGlobalPID*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p) {
      delete [] ((::ND::TGlobalReconModule::TGlobalPID*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalPID(void *p) {
      typedef ::ND::TGlobalReconModule::TGlobalPID current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TGlobalPID

      namespace ND {
//______________________________________________________________________________
void TTrueParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrueParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrueParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrueParticle::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrueParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrueParticle.
      TClass *R__cl = ::ND::TTrueParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID", &ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pur", &Pur);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eff", &Eff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertex", &Vertex);
      R__insp.InspectMember(Vertex, "Vertex.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrueParticle(void *p) {
      return  p ? new(p) ::ND::TTrueParticle : new ::ND::TTrueParticle;
   }
   static void *newArray_NDcLcLTTrueParticle(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrueParticle[nElements] : new ::ND::TTrueParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrueParticle(void *p) {
      delete ((::ND::TTrueParticle*)p);
   }
   static void deleteArray_NDcLcLTTrueParticle(void *p) {
      delete [] ((::ND::TTrueParticle*)p);
   }
   static void destruct_NDcLcLTTrueParticle(void *p) {
      typedef ::ND::TTrueParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrueParticle

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TTPCObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TTPCObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TTPCObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TTPCObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TTPCObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TTPCObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TTPCObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTrun", &NTrun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ccorr", &Ccorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullEle", &PullEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullMuon", &PullMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullPion", &PullPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullKaon", &PullKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullProton", &PullProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpEle", &dEdxexpEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpMuon", &dEdxexpMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpPion", &dEdxexpPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpKaon", &dEdxexpKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpProton", &dEdxexpProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaEle", &SigmaEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaMuon", &SigmaMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaPion", &SigmaPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaKaon", &SigmaKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaProton", &SigmaProton);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TTPCObject : new ::ND::TGlobalReconModule::TTPCObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTPCObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TTPCObject[nElements] : new ::ND::TGlobalReconModule::TTPCObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p) {
      delete ((::ND::TGlobalReconModule::TTPCObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TTPCObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTTPCObject(void *p) {
      typedef ::ND::TGlobalReconModule::TTPCObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TTPCObject

      namespace ND {
//______________________________________________________________________________
void TSubBaseObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TSubBaseObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TSubBaseObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TSubBaseObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TSubBaseObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TSubBaseObject.
      TClass *R__cl = ::ND::TSubBaseObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detector", &Detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNodes", &NNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPositionVar", &FrontPositionVar);
      R__insp.InspectMember(FrontPositionVar, "FrontPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPositionVar", &BackPositionVar);
      R__insp.InspectMember(BackPositionVar, "BackPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirection", &FrontDirection);
      R__insp.InspectMember(FrontDirection, "FrontDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirection", &BackDirection);
      R__insp.InspectMember(BackDirection, "BackDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirectionVar", &FrontDirectionVar);
      R__insp.InspectMember(FrontDirectionVar, "FrontDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirectionVar", &BackDirectionVar);
      R__insp.InspectMember(BackDirectionVar, "BackDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentum", &FrontMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentum", &BackMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentumError", &FrontMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentumError", &BackMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParticle", &TrueParticle);
      R__insp.InspectMember(TrueParticle, "TrueParticle.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTSubBaseObject(void *p) {
      return  p ? new(p) ::ND::TSubBaseObject : new ::ND::TSubBaseObject;
   }
   static void *newArray_NDcLcLTSubBaseObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TSubBaseObject[nElements] : new ::ND::TSubBaseObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTSubBaseObject(void *p) {
      delete ((::ND::TSubBaseObject*)p);
   }
   static void deleteArray_NDcLcLTSubBaseObject(void *p) {
      delete [] ((::ND::TSubBaseObject*)p);
   }
   static void destruct_NDcLcLTSubBaseObject(void *p) {
      typedef ::ND::TSubBaseObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TSubBaseObject

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TFGDObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TFGDObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TFGDObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TFGDObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TFGDObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TFGDObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TFGDObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avgtime", &avgtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargePerLayer[30]", chargePerLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargePerLayerAttenCorr[30]", chargePerLayerAttenCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdContainment", &fgdContainment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_exp_muon", &E_exp_muon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_exp_pion", &E_exp_pion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_exp_proton", &E_exp_proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaE_muon", &sigmaE_muon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaE_pion", &sigmaE_pion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaE_proton", &sigmaE_proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullMuon", &PullMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullPion", &PullPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullProton", &PullProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullNotSet", &PullNotSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFgdVA", &isFgdVA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFgdVA_flag", &isFgdVA_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_upMinZ", &fgdVA_upMinZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_downMaxZ", &fgdVA_downMaxZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_upCosTheta", &fgdVA_upCosTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_downCosTheta", &fgdVA_downCosTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_otherUpQ", &fgdVA_otherUpQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_otherDownQ", &fgdVA_otherDownQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verQ", &fgdVA_verQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verLayQ", &fgdVA_verLayQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verNearQ", &fgdVA_verNearQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verNextNearQ", &fgdVA_verNextNearQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_verNextNextNearQ", &fgdVA_verNextNextNearQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_totalQ", &fgdVA_totalQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgdVA_totalCorrE", &fgdVA_totalCorrE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TFGDObject : new ::ND::TGlobalReconModule::TFGDObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTFGDObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TFGDObject[nElements] : new ::ND::TGlobalReconModule::TFGDObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p) {
      delete ((::ND::TGlobalReconModule::TFGDObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TFGDObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTFGDObject(void *p) {
      typedef ::ND::TGlobalReconModule::TFGDObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TFGDObject

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TECALObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TECALObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TECALObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TECALObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TECALObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TECALObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TECALObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrShVal", &TrShVal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMHadVal", &EMHadVal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.InspectMember(Width, "Width.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AverageHitTime", &AverageHitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergy", &EMEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergyError", &EMEnergyError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFParameter", &KFParameter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFNNodes", &KFNNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFParameterNodes", &KFParameterNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFQuality", &KFQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFNDOF", &KFNDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KFHitQuality", &KFHitQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_NDelayedCluster", &MElectronTag_NDelayedCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_NDelayedHits", (void*)&MElectronTag_NDelayedHits);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_NDelayedHits, "MElectronTag_NDelayedHits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_DeltaX", (void*)&MElectronTag_DeltaX);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_DeltaX, "MElectronTag_DeltaX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_DeltaY", (void*)&MElectronTag_DeltaY);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_DeltaY, "MElectronTag_DeltaY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_DeltaZ", (void*)&MElectronTag_DeltaZ);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_DeltaZ, "MElectronTag_DeltaZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_DeltaT", (void*)&MElectronTag_DeltaT);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_DeltaT, "MElectronTag_DeltaT.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_EDep", (void*)&MElectronTag_EDep);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_EDep, "MElectronTag_EDep.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MElectronTag_TrackEnd", (void*)&MElectronTag_TrackEnd);
      R__insp.InspectMember("vector<double>", (void*)&MElectronTag_TrackEnd, "MElectronTag_TrackEnd.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergy_Likelihood_energyGrad", &EMEnergy_Likelihood_energyGrad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergy_Likelihood_energy_qsumGrad", &EMEnergy_Likelihood_energy_qsumGrad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergy_Likelihood_qsum_like", &EMEnergy_Likelihood_qsum_like);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergy_Para_QSum", &EMEnergy_Para_QSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergy_Para_QMean", &EMEnergy_Para_QMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergy_Para_QRMS", &EMEnergy_Para_QRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergy_Para_QSkew", &EMEnergy_Para_QSkew);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMEnergy_Para_QMax", &EMEnergy_Para_QMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsShowerLike", &IsShowerLike);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsTrackLike", &IsTrackLike);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_AMR", &PID_AMR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Angle", &PID_Angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Max_Ratio", &PID_Max_Ratio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_ShowerAngle", &PID_ShowerAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_Asymmetry", &PID_Asymmetry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_MeanPosition", &PID_MeanPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PID_ShowerWidth", &PID_ShowerWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mostUpStreamLayerHit", &mostUpStreamLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mostDownStreamLayerHit", &mostDownStreamLayerHit);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseShowerObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTECALObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TECALObject : new ::ND::TGlobalReconModule::TECALObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTECALObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TECALObject[nElements] : new ::ND::TGlobalReconModule::TECALObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTECALObject(void *p) {
      delete ((::ND::TGlobalReconModule::TECALObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTECALObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TECALObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTECALObject(void *p) {
      typedef ::ND::TGlobalReconModule::TECALObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TECALObject

      namespace ND {
//______________________________________________________________________________
void TSubBaseShowerObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TSubBaseShowerObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TSubBaseShowerObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TSubBaseShowerObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TSubBaseShowerObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TSubBaseShowerObject.
      TClass *R__cl = ::ND::TSubBaseShowerObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cone", &Cone);
      R__insp.InspectMember(Cone, "Cone.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTSubBaseShowerObject(void *p) {
      return  p ? new(p) ::ND::TSubBaseShowerObject : new ::ND::TSubBaseShowerObject;
   }
   static void *newArray_NDcLcLTSubBaseShowerObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TSubBaseShowerObject[nElements] : new ::ND::TSubBaseShowerObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTSubBaseShowerObject(void *p) {
      delete ((::ND::TSubBaseShowerObject*)p);
   }
   static void deleteArray_NDcLcLTSubBaseShowerObject(void *p) {
      delete [] ((::ND::TSubBaseShowerObject*)p);
   }
   static void destruct_NDcLcLTSubBaseShowerObject(void *p) {
      typedef ::ND::TSubBaseShowerObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TSubBaseShowerObject

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TP0DObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TP0DObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TP0DObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TP0DObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TP0DObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TP0DObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TP0DObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Width", &Width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParticleId", (void*)&ParticleId);
      R__insp.InspectMember("vector<int>", (void*)&ParticleId, "ParticleId.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PIDWeight", (void*)&PIDWeight);
      R__insp.InspectMember("vector<double>", (void*)&PIDWeight, "PIDWeight.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseShowerObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TP0DObject : new ::ND::TGlobalReconModule::TP0DObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTP0DObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TP0DObject[nElements] : new ::ND::TGlobalReconModule::TP0DObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p) {
      delete ((::ND::TGlobalReconModule::TP0DObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TP0DObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTP0DObject(void *p) {
      typedef ::ND::TGlobalReconModule::TP0DObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TP0DObject

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TSMRDObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TSMRDObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TSMRDObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TSMRDObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TSMRDObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TSMRDObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TSMRDObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avgtime", &avgtime);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TSMRDObject : new ::ND::TGlobalReconModule::TSMRDObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTSMRDObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TSMRDObject[nElements] : new ::ND::TGlobalReconModule::TSMRDObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p) {
      delete ((::ND::TGlobalReconModule::TSMRDObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TSMRDObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTSMRDObject(void *p) {
      typedef ::ND::TGlobalReconModule::TSMRDObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TSMRDObject

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TTrackerObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TTrackerObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TTrackerObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TTrackerObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TTrackerObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TTrackerObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TTrackerObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TSubBaseObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TTrackerObject : new ::ND::TGlobalReconModule::TTrackerObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTrackerObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TTrackerObject[nElements] : new ::ND::TGlobalReconModule::TTrackerObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p) {
      delete ((::ND::TGlobalReconModule::TTrackerObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TTrackerObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTTrackerObject(void *p) {
      typedef ::ND::TGlobalReconModule::TTrackerObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TTrackerObject

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TGlobalPIDAlternate::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TGlobalPIDAlternate.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TGlobalPIDAlternate::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TGlobalPIDAlternate::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TGlobalPIDAlternate::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TGlobalPIDAlternate.
      TClass *R__cl = ::ND::TGlobalReconModule::TGlobalPIDAlternate::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detectors", &Detectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DetectorUsed[19]", DetectorUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParticleId", &ParticleId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PIDWeight", &PIDWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPositionVar", &FrontPositionVar);
      R__insp.InspectMember(FrontPositionVar, "FrontPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPositionVar", &BackPositionVar);
      R__insp.InspectMember(BackPositionVar, "BackPositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirection", &FrontDirection);
      R__insp.InspectMember(FrontDirection, "FrontDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirection", &BackDirection);
      R__insp.InspectMember(BackDirection, "BackDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirectionVar", &FrontDirectionVar);
      R__insp.InspectMember(FrontDirectionVar, "FrontDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirectionVar", &BackDirectionVar);
      R__insp.InspectMember(BackDirectionVar, "BackDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentum", &FrontMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentum", &BackMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentumError", &FrontMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentumError", &BackMomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionAtTrueVertex", &PositionAtTrueVertex);
      R__insp.InspectMember(PositionAtTrueVertex, "PositionAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVarAtTrueVertex", &PositionVarAtTrueVertex);
      R__insp.InspectMember(PositionVarAtTrueVertex, "PositionVarAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionAtTrueVertex", &DirectionAtTrueVertex);
      R__insp.InspectMember(DirectionAtTrueVertex, "DirectionAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVarAtTrueVertex", &DirectionVarAtTrueVertex);
      R__insp.InspectMember(DirectionVarAtTrueVertex, "DirectionVarAtTrueVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumAtTrueVertex", &MomentumAtTrueVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumErrorAtTrueVertex", &MomentumErrorAtTrueVertex);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TGlobalPIDAlternate : new ::ND::TGlobalReconModule::TGlobalPIDAlternate;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TGlobalPIDAlternate[nElements] : new ::ND::TGlobalReconModule::TGlobalPIDAlternate[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p) {
      delete ((::ND::TGlobalReconModule::TGlobalPIDAlternate*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p) {
      delete [] ((::ND::TGlobalReconModule::TGlobalPIDAlternate*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void *p) {
      typedef ::ND::TGlobalReconModule::TGlobalPIDAlternate current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TGlobalPIDAlternate

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TTPCOtherObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TTPCOtherObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TTPCOtherObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TTPCOtherObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TTPCOtherObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TTPCOtherObject.
      TClass *R__cl = ::ND::TGlobalReconModule::TTPCOtherObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detector", &Detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirection", &FrontDirection);
      R__insp.InspectMember(FrontDirection, "FrontDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirection", &BackDirection);
      R__insp.InspectMember(BackDirection, "BackDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParticle", &TrueParticle);
      R__insp.InspectMember(TrueParticle, "TrueParticle.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TTPCOtherObject : new ::ND::TGlobalReconModule::TTPCOtherObject;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TTPCOtherObject[nElements] : new ::ND::TGlobalReconModule::TTPCOtherObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p) {
      delete ((::ND::TGlobalReconModule::TTPCOtherObject*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p) {
      delete [] ((::ND::TGlobalReconModule::TTPCOtherObject*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTTPCOtherObject(void *p) {
      typedef ::ND::TGlobalReconModule::TTPCOtherObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TTPCOtherObject

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::TSMRDHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule::TSMRDHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::TSMRDHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::TSMRDHit::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::TSMRDHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule::TSMRDHit.
      TClass *R__cl = ::ND::TGlobalReconModule::TSMRDHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Wall", &Wall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Yoke", &Yoke);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Layer", &Layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tower", &Tower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter", &Counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionError", &PositionError);
      R__insp.InspectMember(PositionError, "PositionError.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Type", &Type);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule::TSMRDHit : new ::ND::TGlobalReconModule::TSMRDHit;
   }
   static void *newArray_NDcLcLTGlobalReconModulecLcLTSMRDHit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule::TSMRDHit[nElements] : new ::ND::TGlobalReconModule::TSMRDHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p) {
      delete ((::ND::TGlobalReconModule::TSMRDHit*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p) {
      delete [] ((::ND::TGlobalReconModule::TSMRDHit*)p);
   }
   static void destruct_NDcLcLTGlobalReconModulecLcLTSMRDHit(void *p) {
      typedef ::ND::TGlobalReconModule::TSMRDHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule::TSMRDHit

      namespace ND {
//______________________________________________________________________________
void TTrackerReconModule::TTrackerVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrackerVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrackerVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrackerVertex::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerReconModule::TTrackerVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrackerVertex.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrackerVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrackerVertex : new ::ND::TTrackerReconModule::TTrackerVertex;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrackerVertex[nElements] : new ::ND::TTrackerReconModule::TTrackerVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p) {
      delete ((::ND::TTrackerReconModule::TTrackerVertex*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrackerVertex*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerVertex(void *p) {
      typedef ::ND::TTrackerReconModule::TTrackerVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerReconModule::TTrackerVertex

      namespace ND {
//______________________________________________________________________________
void TTrackerReconModule::TTrackerResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrackerResult.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrackerResult::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrackerResult::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerReconModule::TTrackerResult::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrackerResult.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrackerResult::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detectors", &Detectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConstitIdx[2]", ConstitIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTotalConstituents", &NTotalConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Constituents", &Constituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isForward", &isForward);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Length", &Length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Likelihoods", (void*)&Likelihoods);
      R__insp.InspectMember("vector<double>", (void*)&Likelihoods, "Likelihoods.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pids", (void*)&Pids);
      R__insp.InspectMember("vector<int>", (void*)&Pids, "Pids.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVariance", &DirectionVariance);
      R__insp.InspectMember(DirectionVariance, "DirectionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumError", &MomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParticle", &TrueParticle);
      R__insp.InspectMember(TrueParticle, "TrueParticle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTPCs", &NTPCs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TPC", &TPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFGDs", &NFGDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FGD", &FGD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNodes", &NNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Nodes", &Nodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackConstituentsObject", &hackConstituentsObject);
      R__insp.InspectMember(hackConstituentsObject, "hackConstituentsObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackTPCTrack", &hackTPCTrack);
      R__insp.InspectMember(hackTPCTrack, "hackTPCTrack.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackFGDTrack", &hackFGDTrack);
      R__insp.InspectMember(hackFGDTrack, "hackFGDTrack.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackNodes", &hackNodes);
      R__insp.InspectMember(hackNodes, "hackNodes.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrackerResult : new ::ND::TTrackerReconModule::TTrackerResult;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerResult(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrackerResult[nElements] : new ::ND::TTrackerReconModule::TTrackerResult[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p) {
      delete ((::ND::TTrackerReconModule::TTrackerResult*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrackerResult*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerResult(void *p) {
      typedef ::ND::TTrackerReconModule::TTrackerResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerReconModule::TTrackerResult

      namespace ND {
//______________________________________________________________________________
void TTrackerReconModule::TTrueParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrueParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrueParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrueParticle::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerReconModule::TTrueParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrueParticle.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrueParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID", &ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pur", &Pur);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eff", &Eff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vertex", &Vertex);
      R__insp.InspectMember(Vertex, "Vertex.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrueParticle : new ::ND::TTrackerReconModule::TTrueParticle;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrueParticle(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrueParticle[nElements] : new ::ND::TTrackerReconModule::TTrueParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p) {
      delete ((::ND::TTrackerReconModule::TTrueParticle*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrueParticle*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrueParticle(void *p) {
      typedef ::ND::TTrackerReconModule::TTrueParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerReconModule::TTrueParticle

      namespace ND {
//______________________________________________________________________________
void TTrackerReconModule::TTrackerConstituent::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrackerConstituent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrackerConstituent::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrackerConstituent::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerReconModule::TTrackerConstituent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrackerConstituent.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrackerConstituent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detectors", &Detectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNodes", &NNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConstitIdx[2]", ConstitIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isForward", &isForward);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontVariance", &FrontVariance);
      R__insp.InspectMember(FrontVariance, "FrontVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackVariance", &BackVariance);
      R__insp.InspectMember(BackVariance, "BackVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontDirection", &FrontDirection);
      R__insp.InspectMember(FrontDirection, "FrontDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackDirection", &BackDirection);
      R__insp.InspectMember(BackDirection, "BackDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontMomentum", &FrontMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackMomentum", &BackMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVariance", &DirectionVariance);
      R__insp.InspectMember(DirectionVariance, "DirectionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumError", &MomentumError);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrackerConstituent : new ::ND::TTrackerReconModule::TTrackerConstituent;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrackerConstituent[nElements] : new ::ND::TTrackerReconModule::TTrackerConstituent[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p) {
      delete ((::ND::TTrackerReconModule::TTrackerConstituent*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrackerConstituent*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerConstituent(void *p) {
      typedef ::ND::TTrackerReconModule::TTrackerConstituent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerReconModule::TTrackerConstituent

      namespace ND {
//______________________________________________________________________________
void TTrackerReconModule::TTPCTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTPCTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTPCTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTPCTrack::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerReconModule::TTPCTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTPCTrack.
      TClass *R__cl = ::ND::TTrackerReconModule::TTPCTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detector", &Detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ndof", &Ndof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumError", &MomentumError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVariance", &PositionVariance);
      R__insp.InspectMember(PositionVariance, "PositionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVariance", &DirectionVariance);
      R__insp.InspectMember(DirectionVariance, "DirectionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTrun", &NTrun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ccorr", &Ccorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullEle", &PullEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullMuon", &PullMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullPion", &PullPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullKaon", &PullKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PullProton", &PullProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpEle", &dEdxexpEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpMuon", &dEdxexpMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpPion", &dEdxexpPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpKaon", &dEdxexpKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxexpProton", &dEdxexpProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaEle", &SigmaEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaMuon", &SigmaMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaPion", &SigmaPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaKaon", &SigmaKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SigmaProton", &SigmaProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Sigma0", &Sigma0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Sigma1", &Sigma1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Sigma2", &Sigma2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanDrift", &MeanDrift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrDirection", &TrDirection);
      R__insp.InspectMember(TrDirection, "TrDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrDirectionVar", &TrDirectionVar);
      R__insp.InspectMember(TrDirectionVar, "TrDirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrCurvature", &TrCurvature);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrCurvatureVar", &TrCurvatureVar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HasExtrapolation", &HasExtrapolation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExtrapolatedVertexXX", &ExtrapolatedVertexXX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExtrapolatedVertexZX", &ExtrapolatedVertexZX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExtrapolatedVertexYY", &ExtrapolatedVertexYY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExtrapolatedVertexZY", &ExtrapolatedVertexZY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnteringFGD", &EnteringFGD);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTPCTrack : new ::ND::TTrackerReconModule::TTPCTrack;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTPCTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTPCTrack[nElements] : new ::ND::TTrackerReconModule::TTPCTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p) {
      delete ((::ND::TTrackerReconModule::TTPCTrack*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTPCTrack*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTPCTrack(void *p) {
      typedef ::ND::TTrackerReconModule::TTPCTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerReconModule::TTPCTrack

      namespace ND {
//______________________________________________________________________________
void TTrackerReconModule::TFGDTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TFGDTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TFGDTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TFGDTrack::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerReconModule::TFGDTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TFGDTrack.
      TClass *R__cl = ::ND::TTrackerReconModule::TFGDTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detector", &Detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ndof", &Ndof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TFGDTrack : new ::ND::TTrackerReconModule::TFGDTrack;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTFGDTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TFGDTrack[nElements] : new ::ND::TTrackerReconModule::TFGDTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p) {
      delete ((::ND::TTrackerReconModule::TFGDTrack*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p) {
      delete [] ((::ND::TTrackerReconModule::TFGDTrack*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTFGDTrack(void *p) {
      typedef ::ND::TTrackerReconModule::TFGDTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerReconModule::TFGDTrack

      namespace ND {
//______________________________________________________________________________
void TTrackerReconModule::TTrackerNode::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrackerNode.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrackerNode::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrackerNode::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerReconModule::TTrackerNode::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrackerNode.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrackerNode::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVariance", &DirectionVariance);
      R__insp.InspectMember(DirectionVariance, "DirectionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MomentumError", &MomentumError);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrackerNode : new ::ND::TTrackerReconModule::TTrackerNode;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackerNode(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrackerNode[nElements] : new ::ND::TTrackerReconModule::TTrackerNode[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p) {
      delete ((::ND::TTrackerReconModule::TTrackerNode*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrackerNode*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackerNode(void *p) {
      typedef ::ND::TTrackerReconModule::TTrackerNode current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerReconModule::TTrackerNode

      namespace ND {
//______________________________________________________________________________
void TTrackerReconModule::TTrackOther::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TTrackOther.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TTrackOther::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TTrackOther::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerReconModule::TTrackOther::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TTrackOther.
      TClass *R__cl = ::ND::TTrackerReconModule::TTrackOther::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Detector", &Detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Hits", &Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosition", &FrontPosition);
      R__insp.InspectMember(FrontPosition, "FrontPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosition", &BackPosition);
      R__insp.InspectMember(BackPosition, "BackPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hackHits", &hackHits);
      R__insp.InspectMember(hackHits, "hackHits.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TTrackOther : new ::ND::TTrackerReconModule::TTrackOther;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTTrackOther(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TTrackOther[nElements] : new ::ND::TTrackerReconModule::TTrackOther[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p) {
      delete ((::ND::TTrackerReconModule::TTrackOther*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p) {
      delete [] ((::ND::TTrackerReconModule::TTrackOther*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTTrackOther(void *p) {
      typedef ::ND::TTrackerReconModule::TTrackOther current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerReconModule::TTrackOther

      namespace ND {
//______________________________________________________________________________
void TTrackerReconModule::TUnusedHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule::TUnusedHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::TUnusedHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::TUnusedHit::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerReconModule::TUnusedHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule::TUnusedHit.
      TClass *R__cl = ::ND::TTrackerReconModule::TUnusedHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalCharge", &TotalCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Variance", &Variance);
      R__insp.InspectMember(Variance, "Variance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeUnc", &TimeUnc);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule::TUnusedHit : new ::ND::TTrackerReconModule::TUnusedHit;
   }
   static void *newArray_NDcLcLTTrackerReconModulecLcLTUnusedHit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule::TUnusedHit[nElements] : new ::ND::TTrackerReconModule::TUnusedHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p) {
      delete ((::ND::TTrackerReconModule::TUnusedHit*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p) {
      delete [] ((::ND::TTrackerReconModule::TUnusedHit*)p);
   }
   static void destruct_NDcLcLTTrackerReconModulecLcLTUnusedHit(void *p) {
      typedef ::ND::TTrackerReconModule::TUnusedHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerReconModule::TUnusedHit

      namespace ND {
//______________________________________________________________________________
void TSmrdReconModule::TSmrdReconHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TSmrdReconModule::TSmrdReconHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TSmrdReconModule::TSmrdReconHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TSmrdReconModule::TSmrdReconHit::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TSmrdReconModule::TSmrdReconHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TSmrdReconModule::TSmrdReconHit.
      TClass *R__cl = ::ND::TSmrdReconModule::TSmrdReconHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionUncertainty", &PositionUncertainty);
      R__insp.InspectMember(PositionUncertainty, "PositionUncertainty.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dZ", &dZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dT", &dT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ContribCharge[2]", ContribCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Wall", &Wall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Yoke", &Yoke);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Layer", &Layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tower", &Tower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Counter", &Counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RMM", &RMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TFB", &TFB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsInnerMatched", &IsInnerMatched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsUsed", &IsUsed);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p) {
      return  p ? new(p) ::ND::TSmrdReconModule::TSmrdReconHit : new ::ND::TSmrdReconModule::TSmrdReconHit;
   }
   static void *newArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TSmrdReconModule::TSmrdReconHit[nElements] : new ::ND::TSmrdReconModule::TSmrdReconHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p) {
      delete ((::ND::TSmrdReconModule::TSmrdReconHit*)p);
   }
   static void deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p) {
      delete [] ((::ND::TSmrdReconModule::TSmrdReconHit*)p);
   }
   static void destruct_NDcLcLTSmrdReconModulecLcLTSmrdReconHit(void *p) {
      typedef ::ND::TSmrdReconModule::TSmrdReconHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TSmrdReconModule::TSmrdReconHit

      namespace ND {
//______________________________________________________________________________
void TSmrdReconModule::TSmrdIsoTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TSmrdReconModule::TSmrdIsoTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TSmrdReconModule::TSmrdIsoTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TSmrdReconModule::TSmrdIsoTrack::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TSmrdReconModule::TSmrdIsoTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TSmrdReconModule::TSmrdIsoTrack.
      TClass *R__cl = ::ND::TSmrdReconModule::TSmrdIsoTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniqueID", &UniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPos", &FrontPos);
      R__insp.InspectMember(FrontPos, "FrontPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FrontPosVariance", &FrontPosVariance);
      R__insp.InspectMember(FrontPosVariance, "FrontPosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPos", &BackPos);
      R__insp.InspectMember(BackPos, "BackPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BackPosVariance", &BackPosVariance);
      R__insp.InspectMember(BackPosVariance, "BackPosVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVariance", &DirectionVariance);
      R__insp.InspectMember(DirectionVariance, "DirectionVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNodes", &NNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KalmanStatus", &KalmanStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avgtime", &avgtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Range", &Range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2", &Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThetaAngle", &ThetaAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PhiAngle", &PhiAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueInitPos", &TrueInitPos);
      R__insp.InspectMember(TrueInitPos, "TrueInitPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueInitDet", &TrueInitDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueFinalPos", &TrueFinalPos);
      R__insp.InspectMember(TrueFinalPos, "TrueFinalPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueFinalDet", &TrueFinalDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueInitMom", &TrueInitMom);
      R__insp.InspectMember(TrueInitMom, "TrueInitMom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueId", &TrueId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TruePDG", &TruePDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueParentId", &TrueParentId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueHitPurity", &TrueHitPurity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueHitEff", &TrueHitEff);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p) {
      return  p ? new(p) ::ND::TSmrdReconModule::TSmrdIsoTrack : new ::ND::TSmrdReconModule::TSmrdIsoTrack;
   }
   static void *newArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TSmrdReconModule::TSmrdIsoTrack[nElements] : new ::ND::TSmrdReconModule::TSmrdIsoTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p) {
      delete ((::ND::TSmrdReconModule::TSmrdIsoTrack*)p);
   }
   static void deleteArray_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p) {
      delete [] ((::ND::TSmrdReconModule::TSmrdIsoTrack*)p);
   }
   static void destruct_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void *p) {
      typedef ::ND::TSmrdReconModule::TSmrdIsoTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TSmrdReconModule::TSmrdIsoTrack

      namespace ND {
//______________________________________________________________________________
void TFgdOnlyModule::TFgd2DIsoTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TFgdOnlyModule::TFgd2DIsoTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TFgdOnlyModule::TFgd2DIsoTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TFgdOnlyModule::TFgd2DIsoTrack::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TFgdOnlyModule::TFgd2DIsoTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TFgdOnlyModule::TFgd2DIsoTrack.
      TClass *R__cl = ::ND::TFgdOnlyModule::TFgd2DIsoTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Angle", &Angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SumCharge", &SumCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Range", &Range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Origin", &Origin);
      R__insp.InspectMember(Origin, "Origin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OriginVariance", &OriginVariance);
      R__insp.InspectMember(OriginVariance, "OriginVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitPositions", (void*)&HitPositions);
      R__insp.InspectMember("vector<TVector3*>", (void*)&HitPositions, "HitPositions.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrajId", &TrajId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Completeness", &Completeness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cleanliness", &Cleanliness);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p) {
      return  p ? new(p) ::ND::TFgdOnlyModule::TFgd2DIsoTrack : new ::ND::TFgdOnlyModule::TFgd2DIsoTrack;
   }
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TFgdOnlyModule::TFgd2DIsoTrack[nElements] : new ::ND::TFgdOnlyModule::TFgd2DIsoTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p) {
      delete ((::ND::TFgdOnlyModule::TFgd2DIsoTrack*)p);
   }
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p) {
      delete [] ((::ND::TFgdOnlyModule::TFgd2DIsoTrack*)p);
   }
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void *p) {
      typedef ::ND::TFgdOnlyModule::TFgd2DIsoTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TFgdOnlyModule::TFgd2DIsoTrack

      namespace ND {
//______________________________________________________________________________
void TFgdOnlyModule::TFgd3DIsoTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TFgdOnlyModule::TFgd3DIsoTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TFgdOnlyModule::TFgd3DIsoTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TFgdOnlyModule::TFgd3DIsoTrack::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TFgdOnlyModule::TFgd3DIsoTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TFgdOnlyModule::TFgd3DIsoTrack.
      TClass *R__cl = ::ND::TFgdOnlyModule::TFgd3DIsoTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SumCharge", &SumCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Range", &Range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Origin", &Origin);
      R__insp.InspectMember(Origin, "Origin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OriginVariance", &OriginVariance);
      R__insp.InspectMember(OriginVariance, "OriginVariance.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muonPull", &muonPull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pionPull", &pionPull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonPull", &protonPull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XZHitPositions", (void*)&XZHitPositions);
      R__insp.InspectMember("vector<TVector3*>", (void*)&XZHitPositions, "XZHitPositions.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "YZHitPositions", (void*)&YZHitPositions);
      R__insp.InspectMember("vector<TVector3*>", (void*)&YZHitPositions, "YZHitPositions.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrajId", &TrajId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Completeness", &Completeness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cleanliness", &Cleanliness);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p) {
      return  p ? new(p) ::ND::TFgdOnlyModule::TFgd3DIsoTrack : new ::ND::TFgdOnlyModule::TFgd3DIsoTrack;
   }
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TFgdOnlyModule::TFgd3DIsoTrack[nElements] : new ::ND::TFgdOnlyModule::TFgd3DIsoTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p) {
      delete ((::ND::TFgdOnlyModule::TFgd3DIsoTrack*)p);
   }
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p) {
      delete [] ((::ND::TFgdOnlyModule::TFgd3DIsoTrack*)p);
   }
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void *p) {
      typedef ::ND::TFgdOnlyModule::TFgd3DIsoTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TFgdOnlyModule::TFgd3DIsoTrack

      namespace ND {
//______________________________________________________________________________
void TFgdOnlyModule::TFgd3DShowerPID::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TFgdOnlyModule::TFgd3DShowerPID.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TFgdOnlyModule::TFgd3DShowerPID::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TFgdOnlyModule::TFgd3DShowerPID::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TFgdOnlyModule::TFgd3DShowerPID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TFgdOnlyModule::TFgd3DShowerPID.
      TClass *R__cl = ::ND::TFgdOnlyModule::TFgd3DShowerPID::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hyp1", &Hyp1);
      R__insp.InspectMember(Hyp1, "Hyp1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hyp2", &Hyp2);
      R__insp.InspectMember(Hyp2, "Hyp2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PCAEigenValues", &PCAEigenValues);
      R__insp.InspectMember(PCAEigenValues, "PCAEigenValues.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumHits", &NumHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatchingLikelihood3D", &MatchingLikelihood3D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Circularity", &Circularity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trajectories", (void*)&Trajectories);
      R__insp.InspectMember("map<int,int>", (void*)&Trajectories, "Trajectories.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p) {
      return  p ? new(p) ::ND::TFgdOnlyModule::TFgd3DShowerPID : new ::ND::TFgdOnlyModule::TFgd3DShowerPID;
   }
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TFgdOnlyModule::TFgd3DShowerPID[nElements] : new ::ND::TFgdOnlyModule::TFgd3DShowerPID[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p) {
      delete ((::ND::TFgdOnlyModule::TFgd3DShowerPID*)p);
   }
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p) {
      delete [] ((::ND::TFgdOnlyModule::TFgd3DShowerPID*)p);
   }
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void *p) {
      typedef ::ND::TFgdOnlyModule::TFgd3DShowerPID current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TFgdOnlyModule::TFgd3DShowerPID

      namespace ND {
//______________________________________________________________________________
void TFgdOnlyModule::TFgd3DShowerHyp::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TFgdOnlyModule::TFgd3DShowerHyp.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TFgdOnlyModule::TFgd3DShowerHyp::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TFgdOnlyModule::TFgd3DShowerHyp::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TFgdOnlyModule::TFgd3DShowerHyp::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TFgdOnlyModule::TFgd3DShowerHyp.
      TClass *R__cl = ::ND::TFgdOnlyModule::TFgd3DShowerHyp::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PositionVar", &PositionVar);
      R__insp.InspectMember(PositionVar, "PositionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DirectionVar", &DirectionVar);
      R__insp.InspectMember(DirectionVar, "DirectionVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConeAngle", &ConeAngle);
      R__insp.InspectMember(ConeAngle, "ConeAngle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConeAngleVar", &ConeAngleVar);
      R__insp.InspectMember(ConeAngleVar, "ConeAngleVar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QAvgInThirds", &QAvgInThirds);
      R__insp.InspectMember(QAvgInThirds, "QAvgInThirds.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SpreadInThirds", &SpreadInThirds);
      R__insp.InspectMember(SpreadInThirds, "SpreadInThirds.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p) {
      return  p ? new(p) ::ND::TFgdOnlyModule::TFgd3DShowerHyp : new ::ND::TFgdOnlyModule::TFgd3DShowerHyp;
   }
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TFgdOnlyModule::TFgd3DShowerHyp[nElements] : new ::ND::TFgdOnlyModule::TFgd3DShowerHyp[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p) {
      delete ((::ND::TFgdOnlyModule::TFgd3DShowerHyp*)p);
   }
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p) {
      delete [] ((::ND::TFgdOnlyModule::TFgd3DShowerHyp*)p);
   }
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void *p) {
      typedef ::ND::TFgdOnlyModule::TFgd3DShowerHyp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TFgdOnlyModule::TFgd3DShowerHyp

      namespace ND {
//______________________________________________________________________________
void TFgdOnlyModule::TFgd2DCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TFgdOnlyModule::TFgd2DCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TFgdOnlyModule::TFgd2DCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TFgdOnlyModule::TFgd2DCluster::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TFgdOnlyModule::TFgd2DCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TFgdOnlyModule::TFgd2DCluster.
      TClass *R__cl = ::ND::TFgdOnlyModule::TFgd2DCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlgorithmName", (void*)&AlgorithmName);
      R__insp.InspectMember("string", (void*)&AlgorithmName, "AlgorithmName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PCADirection", &PCADirection);
      R__insp.InspectMember(PCADirection, "PCADirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StartPosition", &StartPosition);
      R__insp.InspectMember(StartPosition, "StartPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EndPosition", &EndPosition);
      R__insp.InspectMember(EndPosition, "EndPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Range", &Range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AvgHitTime", &AvgHitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDeposit", &EDeposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumHits", &NumHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trajectories", (void*)&Trajectories);
      R__insp.InspectMember("map<int,int>", (void*)&Trajectories, "Trajectories.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p) {
      return  p ? new(p) ::ND::TFgdOnlyModule::TFgd2DCluster : new ::ND::TFgdOnlyModule::TFgd2DCluster;
   }
   static void *newArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TFgdOnlyModule::TFgd2DCluster[nElements] : new ::ND::TFgdOnlyModule::TFgd2DCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p) {
      delete ((::ND::TFgdOnlyModule::TFgd2DCluster*)p);
   }
   static void deleteArray_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p) {
      delete [] ((::ND::TFgdOnlyModule::TFgd2DCluster*)p);
   }
   static void destruct_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void *p) {
      typedef ::ND::TFgdOnlyModule::TFgd2DCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TFgdOnlyModule::TFgd2DCluster

      namespace ND {
//______________________________________________________________________________
void TBeamSummaryDataModule::TBeamSummaryData::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TBeamSummaryDataModule::TBeamSummaryData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TBeamSummaryDataModule::TBeamSummaryData::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TBeamSummaryDataModule::TBeamSummaryData::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TBeamSummaryDataModule::TBeamSummaryData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TBeamSummaryDataModule::TBeamSummaryData.
      TClass *R__cl = ::ND::TBeamSummaryDataModule::TBeamSummaryData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamRunNumber", &BeamRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SpillNumber", &SpillNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GPS1TriggerTime", &GPS1TriggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GPS1TriggerTimeNanoSecond", &GPS1TriggerTimeNanoSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CT5ProtonsPerSpill", &CT5ProtonsPerSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CT5ProtonsPerBunch[8]", CT5ProtonsPerBunch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CT5BeamBunchTiming[8]", CT5BeamBunchTiming);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CT5BeamBunchFlag[8]", CT5BeamBunchFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Horn1CurrentSum", &Horn1CurrentSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Horn2CurrentSum", &Horn2CurrentSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Horn3CurrentSum", &Horn3CurrentSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GoodSpillFlag", &GoodSpillFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BSDVersion", &BSDVersion);
      R__insp.InspectMember(BSDVersion, "BSDVersion.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OtherData", &OtherData);
      R__insp.InspectMember(OtherData, "OtherData.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p) {
      return  p ? new(p) ::ND::TBeamSummaryDataModule::TBeamSummaryData : new ::ND::TBeamSummaryDataModule::TBeamSummaryData;
   }
   static void *newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TBeamSummaryDataModule::TBeamSummaryData[nElements] : new ::ND::TBeamSummaryDataModule::TBeamSummaryData[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p) {
      delete ((::ND::TBeamSummaryDataModule::TBeamSummaryData*)p);
   }
   static void deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p) {
      delete [] ((::ND::TBeamSummaryDataModule::TBeamSummaryData*)p);
   }
   static void destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void *p) {
      typedef ::ND::TBeamSummaryDataModule::TBeamSummaryData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TBeamSummaryDataModule::TBeamSummaryData

      namespace ND {
//______________________________________________________________________________
void TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TBeamSummaryDataModule::TBeamSummaryData::TOtherData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData.
      TClass *R__cl = ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MidasEvent", &MidasEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamRunNumber", &BeamRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SpillNumber", &SpillNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MRRunNumber", &MRRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GPSStatus[2]", GPSStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerTime[3]", TriggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerTimeNanoSecond[3]", TriggerTimeNanoSecond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProtonsPerSpill[5]", ProtonsPerSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProtonsPerBunch[5][9]", ProtonsPerBunch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamTiming[5]", BeamTiming);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamBunchTiming[5][9]", BeamBunchTiming);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamFlag[5]", BeamFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamBunchFlag[5][9]", BeamBunchFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HornCurrent[3]", HornCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HornBusBarCurrent[3][5]", HornBusBarCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamPositionOnTarget[2]", BeamPositionOnTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamDirectionOnTarget[2]", BeamDirectionOnTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamSizeOnTarget[2]", BeamSizeOnTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiTotalQ", &MumonSiTotalQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiPeak", &MumonSiPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiX", &MumonSiX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiwX", &MumonSiwX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiY", &MumonSiY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonSiwY", &MumonSiwY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICTotalQ", &MumonICTotalQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICPeak", &MumonICPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICX", &MumonICX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICwX", &MumonICwX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICY", &MumonICY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MumonICwY", &MumonICwY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRLightYield", &OTRLightYield);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRX", &OTRX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRwX", &OTRwX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRY", &OTRY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRwY", &OTRwY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRXError", &OTRXError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRwXError", &OTRwXError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRYError", &OTRYError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OTRwYError", &OTRwYError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GoodGPSFlag", &GoodGPSFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerFlag", &TriggerFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SpillFlag", &SpillFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GoodSpillFlag", &GoodSpillFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TargetEfficiency[3]", TargetEfficiency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RunType", &RunType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MagSetID", &MagSetID);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p) {
      return  p ? new(p) ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData : new ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData;
   }
   static void *newArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData[nElements] : new ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p) {
      delete ((::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)p);
   }
   static void deleteArray_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p) {
      delete [] ((::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)p);
   }
   static void destruct_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void *p) {
      typedef ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData

      namespace ND {
//______________________________________________________________________________
void TGeometrySummaryModule::TDetectorBoundingBox::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGeometrySummaryModule::TDetectorBoundingBox.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGeometrySummaryModule::TDetectorBoundingBox::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGeometrySummaryModule::TDetectorBoundingBox::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGeometrySummaryModule::TDetectorBoundingBox::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGeometrySummaryModule::TDetectorBoundingBox.
      TClass *R__cl = ::ND::TGeometrySummaryModule::TDetectorBoundingBox::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Minimum", &Minimum);
      R__insp.InspectMember(Minimum, "Minimum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Maximum", &Maximum);
      R__insp.InspectMember(Maximum, "Maximum.");
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p) {
      return  p ? new(p) ::ND::TGeometrySummaryModule::TDetectorBoundingBox : new ::ND::TGeometrySummaryModule::TDetectorBoundingBox;
   }
   static void *newArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGeometrySummaryModule::TDetectorBoundingBox[nElements] : new ::ND::TGeometrySummaryModule::TDetectorBoundingBox[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p) {
      delete ((::ND::TGeometrySummaryModule::TDetectorBoundingBox*)p);
   }
   static void deleteArray_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p) {
      delete [] ((::ND::TGeometrySummaryModule::TDetectorBoundingBox*)p);
   }
   static void destruct_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void *p) {
      typedef ::ND::TGeometrySummaryModule::TDetectorBoundingBox current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGeometrySummaryModule::TDetectorBoundingBox

      namespace ND {
//______________________________________________________________________________
void TGeometrySummaryModule::TTPCMicroMegasVolumes::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGeometrySummaryModule::TTPCMicroMegasVolumes.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGeometrySummaryModule::TTPCMicroMegasVolumes::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGeometrySummaryModule::TTPCMicroMegasVolumes.
      TClass *R__cl = ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MMvolumes", (void*)&MMvolumes);
      R__insp.InspectMember("map<int,std::pair<int,const TGeoNode*> >", (void*)&MMvolumes, "MMvolumes.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p) {
      return  p ? new(p) ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes : new ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes;
   }
   static void *newArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes[nElements] : new ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p) {
      delete ((::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)p);
   }
   static void deleteArray_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p) {
      delete [] ((::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)p);
   }
   static void destruct_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void *p) {
      typedef ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGeometrySummaryModule::TTPCMicroMegasVolumes

      namespace ND {
//______________________________________________________________________________
void GRooTrackerVtx::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::GRooTrackerVtx.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::GRooTrackerVtx::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::GRooTrackerVtx::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void GRooTrackerVtx::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::GRooTrackerVtx.
      TClass *R__cl = ::ND::GRooTrackerVtx::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EvtCode", &EvtCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtNum", &EvtNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtXSec", &EvtXSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtDXSec", &EvtDXSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtWght", &EvtWght);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtProb", &EvtProb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtVtx[4]", EvtVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepN", &StdHepN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepPdg[100]", StdHepPdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepRescat[100]", StdHepRescat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepStatus[100]", StdHepStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepX4[100][4]", StdHepX4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepP4[100][4]", StdHepP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepPolz[100][3]", StdHepPolz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepFd[100]", StdHepFd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepLd[100]", StdHepLd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepFm[100]", StdHepFm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepLm[100]", StdHepLm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "G2NeutEvtCode", &G2NeutEvtCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GeomPath", &GeomPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GeneratorName", &GeneratorName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OrigFileName", &OrigFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OrigTreeName", &OrigTreeName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigEvtNum", &OrigEvtNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigTreeEntries", &OrigTreeEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigTreePOT", &OrigTreePOT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeInSpill", &TimeInSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TruthVertexID", &TruthVertexID);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::JNuBeamFlux baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLGRooTrackerVtx(void *p) {
      return  p ? new(p) ::ND::GRooTrackerVtx : new ::ND::GRooTrackerVtx;
   }
   static void *newArray_NDcLcLGRooTrackerVtx(Long_t nElements, void *p) {
      return p ? new(p) ::ND::GRooTrackerVtx[nElements] : new ::ND::GRooTrackerVtx[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLGRooTrackerVtx(void *p) {
      delete ((::ND::GRooTrackerVtx*)p);
   }
   static void deleteArray_NDcLcLGRooTrackerVtx(void *p) {
      delete [] ((::ND::GRooTrackerVtx*)p);
   }
   static void destruct_NDcLcLGRooTrackerVtx(void *p) {
      typedef ::ND::GRooTrackerVtx current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::GRooTrackerVtx

      namespace ND {
//______________________________________________________________________________
void JNuBeamFlux::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::JNuBeamFlux.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::JNuBeamFlux::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::JNuBeamFlux::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void JNuBeamFlux::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::JNuBeamFlux.
      TClass *R__cl = ::ND::JNuBeamFlux::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuFluxEntry", &NuFluxEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NuFileName", &NuFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentPdg", &NuParentPdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentDecMode", &NuParentDecMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentDecP4[4]", NuParentDecP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentDecX4[4]", NuParentDecX4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuCospibm", &NuCospibm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuNorm", &NuNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentProP4[4]", NuParentProP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuParentProX4[4]", NuParentProX4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuCospi0bm", &NuCospi0bm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuRnu", &NuRnu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuXnu[2]", NuXnu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuIdfd", &NuIdfd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGipart", &NuGipart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGpos0[3]", NuGpos0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGvec0[3]", NuGvec0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGamom0", &NuGamom0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuNg", &NuNg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGp[12][3]", NuGp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGcosbm[12]", NuGcosbm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGv[12][3]", NuGv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGpid[12]", NuGpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGmec[12]", NuGmec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuEnusk", &NuEnusk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuNormsk", &NuNormsk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuAnorm", &NuAnorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGmat[12]", NuGmat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGdistc[12]", NuGdistc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGdistal[12]", NuGdistal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGdistti[12]", NuGdistti);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuGdistfe[12]", NuGdistfe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuVersion", &NuVersion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuTuneid", &NuTuneid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuNtrig", &NuNtrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuPint", &NuPint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuBpos[2]", NuBpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuBtilt[2]", NuBtilt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuBrms[2]", NuBrms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuEmit[2]", NuEmit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuAlpha[2]", NuAlpha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuHcur[3]", NuHcur);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NuRand", &NuRand);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::RooTrackerVtxBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLJNuBeamFlux(void *p) {
      return  p ? new(p) ::ND::JNuBeamFlux : new ::ND::JNuBeamFlux;
   }
   static void *newArray_NDcLcLJNuBeamFlux(Long_t nElements, void *p) {
      return p ? new(p) ::ND::JNuBeamFlux[nElements] : new ::ND::JNuBeamFlux[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLJNuBeamFlux(void *p) {
      delete ((::ND::JNuBeamFlux*)p);
   }
   static void deleteArray_NDcLcLJNuBeamFlux(void *p) {
      delete [] ((::ND::JNuBeamFlux*)p);
   }
   static void destruct_NDcLcLJNuBeamFlux(void *p) {
      typedef ::ND::JNuBeamFlux current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::JNuBeamFlux

      namespace ND {
//______________________________________________________________________________
void RooTrackerVtxBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::RooTrackerVtxBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::RooTrackerVtxBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::RooTrackerVtxBase::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void RooTrackerVtxBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::RooTrackerVtxBase.
      TClass *R__cl = ::ND::RooTrackerVtxBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLRooTrackerVtxBase(void *p) {
      return  p ? new(p) ::ND::RooTrackerVtxBase : new ::ND::RooTrackerVtxBase;
   }
   static void *newArray_NDcLcLRooTrackerVtxBase(Long_t nElements, void *p) {
      return p ? new(p) ::ND::RooTrackerVtxBase[nElements] : new ::ND::RooTrackerVtxBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLRooTrackerVtxBase(void *p) {
      delete ((::ND::RooTrackerVtxBase*)p);
   }
   static void deleteArray_NDcLcLRooTrackerVtxBase(void *p) {
      delete [] ((::ND::RooTrackerVtxBase*)p);
   }
   static void destruct_NDcLcLRooTrackerVtxBase(void *p) {
      typedef ::ND::RooTrackerVtxBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::RooTrackerVtxBase

      namespace ND {
//______________________________________________________________________________
void NRooTrackerVtx::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::NRooTrackerVtx.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::NRooTrackerVtx::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::NRooTrackerVtx::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void NRooTrackerVtx::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::NRooTrackerVtx.
      TClass *R__cl = ::ND::NRooTrackerVtx::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EvtCode", &EvtCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtNum", &EvtNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtXSec", &EvtXSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtDXSec", &EvtDXSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtWght", &EvtWght);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtProb", &EvtProb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtVtx[4]", EvtVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepN", &StdHepN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepPdg[100]", StdHepPdg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepStatus[100]", StdHepStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepX4[100][4]", StdHepX4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepP4[100][4]", StdHepP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepPolz[100][3]", StdHepPolz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepFd[100]", StdHepFd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepLd[100]", StdHepLd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepFm[100]", StdHepFm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StdHepLm[100]", StdHepLm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEnvc", &NEnvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEipvc[100]", NEipvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEpvc[100][3]", NEpvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEiorgvc[100]", NEiorgvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEiflgvc[100]", NEiflgvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEicrnvc[100]", NEicrnvc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEcrsx", &NEcrsx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEcrsy", &NEcrsy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEcrsz", &NEcrsz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEcrsphi", &NEcrsphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEnvert", &NEnvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEposvert[100][3]", NEposvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEiflgvert[100]", NEiflgvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEnvcvert", &NEnvcvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEdirvert[300][3]", NEdirvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEabspvert[300]", NEabspvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEabstpvert[300]", NEabstpvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEipvert[300]", NEipvert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEiverti[300]", NEiverti);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEivertf[300]", NEivertf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GeomPath", &GeomPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GeneratorName", &GeneratorName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OrigFileName", &OrigFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OrigTreeName", &OrigTreeName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigEvtNum", &OrigEvtNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigTreeEntries", &OrigTreeEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OrigTreePOT", &OrigTreePOT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeInSpill", &TimeInSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TruthVertexID", &TruthVertexID);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::JNuBeamFlux baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLNRooTrackerVtx(void *p) {
      return  p ? new(p) ::ND::NRooTrackerVtx : new ::ND::NRooTrackerVtx;
   }
   static void *newArray_NDcLcLNRooTrackerVtx(Long_t nElements, void *p) {
      return p ? new(p) ::ND::NRooTrackerVtx[nElements] : new ::ND::NRooTrackerVtx[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLNRooTrackerVtx(void *p) {
      delete ((::ND::NRooTrackerVtx*)p);
   }
   static void deleteArray_NDcLcLNRooTrackerVtx(void *p) {
      delete [] ((::ND::NRooTrackerVtx*)p);
   }
   static void destruct_NDcLcLNRooTrackerVtx(void *p) {
      typedef ::ND::NRooTrackerVtx current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::NRooTrackerVtx

      namespace ND {
//______________________________________________________________________________
void ToaAnalysisUtils::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::ToaAnalysisUtils.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::ToaAnalysisUtils::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::ToaAnalysisUtils::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void ToaAnalysisUtils::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::ToaAnalysisUtils.
      TClass *R__cl = ::ND::ToaAnalysisUtils::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLToaAnalysisUtils(void *p) {
      return  p ? new(p) ::ND::ToaAnalysisUtils : new ::ND::ToaAnalysisUtils;
   }
   static void *newArray_NDcLcLToaAnalysisUtils(Long_t nElements, void *p) {
      return p ? new(p) ::ND::ToaAnalysisUtils[nElements] : new ::ND::ToaAnalysisUtils[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLToaAnalysisUtils(void *p) {
      delete ((::ND::ToaAnalysisUtils*)p);
   }
   static void deleteArray_NDcLcLToaAnalysisUtils(void *p) {
      delete [] ((::ND::ToaAnalysisUtils*)p);
   }
   static void destruct_NDcLcLToaAnalysisUtils(void *p) {
      typedef ::ND::ToaAnalysisUtils current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::ToaAnalysisUtils

      namespace ND {
//______________________________________________________________________________
void TBasicHeaderModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TBasicHeaderModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TBasicHeaderModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TBasicHeaderModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TBasicHeaderModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TBasicHeaderModule.
      TClass *R__cl = ::ND::TBasicHeaderModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSoftwareVersion[50]", fSoftwareVersion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSoftware", &fSoftware);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisHeaderModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTBasicHeaderModule(void *p) {
      return  p ? new(p) ::ND::TBasicHeaderModule : new ::ND::TBasicHeaderModule;
   }
   static void *newArray_NDcLcLTBasicHeaderModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TBasicHeaderModule[nElements] : new ::ND::TBasicHeaderModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTBasicHeaderModule(void *p) {
      delete ((::ND::TBasicHeaderModule*)p);
   }
   static void deleteArray_NDcLcLTBasicHeaderModule(void *p) {
      delete [] ((::ND::TBasicHeaderModule*)p);
   }
   static void destruct_NDcLcLTBasicHeaderModule(void *p) {
      typedef ::ND::TBasicHeaderModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TBasicHeaderModule

      namespace ND {
//______________________________________________________________________________
void TAnalysisHeaderModuleBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TAnalysisHeaderModuleBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TAnalysisHeaderModuleBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TAnalysisHeaderModuleBase::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TAnalysisHeaderModuleBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TAnalysisHeaderModuleBase.
      TClass *R__cl = ::ND::TAnalysisHeaderModuleBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTAnalysisHeaderModuleBase(void *p) {
      return  p ? new(p) ::ND::TAnalysisHeaderModuleBase : new ::ND::TAnalysisHeaderModuleBase;
   }
   static void *newArray_NDcLcLTAnalysisHeaderModuleBase(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TAnalysisHeaderModuleBase[nElements] : new ::ND::TAnalysisHeaderModuleBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTAnalysisHeaderModuleBase(void *p) {
      delete ((::ND::TAnalysisHeaderModuleBase*)p);
   }
   static void deleteArray_NDcLcLTAnalysisHeaderModuleBase(void *p) {
      delete [] ((::ND::TAnalysisHeaderModuleBase*)p);
   }
   static void destruct_NDcLcLTAnalysisHeaderModuleBase(void *p) {
      typedef ::ND::TAnalysisHeaderModuleBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TAnalysisHeaderModuleBase

      namespace ND {
//______________________________________________________________________________
void TAnalysisModuleBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TAnalysisModuleBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TAnalysisModuleBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TAnalysisModuleBase::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TAnalysisModuleBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TAnalysisModuleBase.
      TClass *R__cl = ::ND::TAnalysisModuleBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsEnabled", &fIsEnabled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsUsedForPreselection", &fIsUsedForPreselection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutputTree", &fOutputTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBufferSize", &fBufferSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSplitLevel", &fSplitLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDescription", (void*)&fDescription);
      R__insp.InspectMember("string", (void*)&fDescription, "fDescription.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCVSTagName", (void*)&fCVSTagName);
      R__insp.InspectMember("string", (void*)&fCVSTagName, "fCVSTagName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCVSID", (void*)&fCVSID);
      R__insp.InspectMember("string", (void*)&fCVSID, "fCVSID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunID", &fRunID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubrunID", &fSubrunID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventID", &fEventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPreselected", &fPreselected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInputDirectory", (void*)&fInputDirectory);
      R__insp.InspectMember("string", (void*)&fInputDirectory, "fInputDirectory.", false);
      TNamed::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTAnalysisModuleBase(void *p) {
      return  p ? new(p) ::ND::TAnalysisModuleBase : new ::ND::TAnalysisModuleBase;
   }
   static void *newArray_NDcLcLTAnalysisModuleBase(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TAnalysisModuleBase[nElements] : new ::ND::TAnalysisModuleBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTAnalysisModuleBase(void *p) {
      delete ((::ND::TAnalysisModuleBase*)p);
   }
   static void deleteArray_NDcLcLTAnalysisModuleBase(void *p) {
      delete [] ((::ND::TAnalysisModuleBase*)p);
   }
   static void destruct_NDcLcLTAnalysisModuleBase(void *p) {
      typedef ::ND::TAnalysisModuleBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TAnalysisModuleBase

      namespace ND {
//______________________________________________________________________________
void TBasicDataQualityModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TBasicDataQualityModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TBasicDataQualityModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TBasicDataQualityModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TBasicDataQualityModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TBasicDataQualityModule.
      TClass *R__cl = ::ND::TBasicDataQualityModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisHeaderModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTBasicDataQualityModule(void *p) {
      return  p ? new(p) ::ND::TBasicDataQualityModule : new ::ND::TBasicDataQualityModule;
   }
   static void *newArray_NDcLcLTBasicDataQualityModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TBasicDataQualityModule[nElements] : new ::ND::TBasicDataQualityModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTBasicDataQualityModule(void *p) {
      delete ((::ND::TBasicDataQualityModule*)p);
   }
   static void deleteArray_NDcLcLTBasicDataQualityModule(void *p) {
      delete [] ((::ND::TBasicDataQualityModule*)p);
   }
   static void destruct_NDcLcLTBasicDataQualityModule(void *p) {
      typedef ::ND::TBasicDataQualityModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TBasicDataQualityModule

      namespace ND {
//______________________________________________________________________________
void TTruthTrajectoriesModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTruthTrajectoriesModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTruthTrajectoriesModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTruthTrajectoriesModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTruthTrajectoriesModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTruthTrajectoriesModule.
      TClass *R__cl = ::ND::TTruthTrajectoriesModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxNTrajectories", &fMaxNTrajectories);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinLength", &fMinLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSaveOnlyP0DTrackerECALTrajectories", &fSaveOnlyP0DTrackerECALTrajectories);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSaveParentChain", &fSaveParentChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSaveList", (void*)&fSaveList);
      R__insp.InspectMember("set<int>", (void*)&fSaveList, "fSaveList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTraj", &fNTraj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrajLepton", &fNTrajLepton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrajBaryon", &fNTrajBaryon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrajMeson", &fNTrajMeson);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrajPhoton", &fNTrajPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrajOtherCharged", &fNTrajOtherCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrajOtherNeutral", &fNTrajOtherNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrajOther", &fNTrajOther);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrajectories", &fTrajectories);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisTruthModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTruthTrajectoriesModule(void *p) {
      return  p ? new(p) ::ND::TTruthTrajectoriesModule : new ::ND::TTruthTrajectoriesModule;
   }
   static void *newArray_NDcLcLTTruthTrajectoriesModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTruthTrajectoriesModule[nElements] : new ::ND::TTruthTrajectoriesModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTruthTrajectoriesModule(void *p) {
      delete ((::ND::TTruthTrajectoriesModule*)p);
   }
   static void deleteArray_NDcLcLTTruthTrajectoriesModule(void *p) {
      delete [] ((::ND::TTruthTrajectoriesModule*)p);
   }
   static void destruct_NDcLcLTTruthTrajectoriesModule(void *p) {
      typedef ::ND::TTruthTrajectoriesModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTruthTrajectoriesModule

      namespace ND {
//______________________________________________________________________________
void TAnalysisTruthModuleBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TAnalysisTruthModuleBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TAnalysisTruthModuleBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TAnalysisTruthModuleBase::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TAnalysisTruthModuleBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TAnalysisTruthModuleBase.
      TClass *R__cl = ::ND::TAnalysisTruthModuleBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTAnalysisTruthModuleBase(void *p) {
      return  p ? new(p) ::ND::TAnalysisTruthModuleBase : new ::ND::TAnalysisTruthModuleBase;
   }
   static void *newArray_NDcLcLTAnalysisTruthModuleBase(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TAnalysisTruthModuleBase[nElements] : new ::ND::TAnalysisTruthModuleBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTAnalysisTruthModuleBase(void *p) {
      delete ((::ND::TAnalysisTruthModuleBase*)p);
   }
   static void deleteArray_NDcLcLTAnalysisTruthModuleBase(void *p) {
      delete [] ((::ND::TAnalysisTruthModuleBase*)p);
   }
   static void destruct_NDcLcLTAnalysisTruthModuleBase(void *p) {
      typedef ::ND::TAnalysisTruthModuleBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TAnalysisTruthModuleBase

      namespace ND {
//______________________________________________________________________________
void TTruthVerticesModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTruthVerticesModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTruthVerticesModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTruthVerticesModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTruthVerticesModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTruthVerticesModule.
      TClass *R__cl = ::ND::TTruthVerticesModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxNVertices", &fMaxNVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtx", &fNVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxFGD1", &fNVtxFGD1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxFGD2", &fNVtxFGD2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxP0D", &fNVtxP0D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxDsECal", &fNVtxDsECal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxBrlECal", &fNVtxBrlECal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxP0DECal", &fNVtxP0DECal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxTPC1", &fNVtxTPC1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxTPC2", &fNVtxTPC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxTPC3", &fNVtxTPC3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxSMRD", &fNVtxSMRD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxRestOfOffAxis", &fNVtxRestOfOffAxis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxINGRID", &fNVtxINGRID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVtxOther", &fNVtxOther);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertices", &fVertices);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisTruthModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTruthVerticesModule(void *p) {
      return  p ? new(p) ::ND::TTruthVerticesModule : new ::ND::TTruthVerticesModule;
   }
   static void *newArray_NDcLcLTTruthVerticesModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTruthVerticesModule[nElements] : new ::ND::TTruthVerticesModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTruthVerticesModule(void *p) {
      delete ((::ND::TTruthVerticesModule*)p);
   }
   static void deleteArray_NDcLcLTTruthVerticesModule(void *p) {
      delete [] ((::ND::TTruthVerticesModule*)p);
   }
   static void destruct_NDcLcLTTruthVerticesModule(void *p) {
      typedef ::ND::TTruthVerticesModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTruthVerticesModule

      namespace ND {
//______________________________________________________________________________
void TP0DReconModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DReconModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DReconModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DReconModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DReconModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DReconModule.
      TClass *R__cl = ::ND::TP0DReconModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRejectAlgoResultList", (void*)&fRejectAlgoResultList);
      R__insp.InspectMember("vector<TPRegexp>", (void*)&fRejectAlgoResultList, "fRejectAlgoResultList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTempHitMap", (void*)&fTempHitMap);
      R__insp.InspectMember("map<UInt_t,short>", (void*)&fTempHitMap, "fTempHitMap.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisReconModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DReconModule(void *p) {
      return  p ? new(p) ::ND::TP0DReconModule : new ::ND::TP0DReconModule;
   }
   static void *newArray_NDcLcLTP0DReconModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DReconModule[nElements] : new ::ND::TP0DReconModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DReconModule(void *p) {
      delete ((::ND::TP0DReconModule*)p);
   }
   static void deleteArray_NDcLcLTP0DReconModule(void *p) {
      delete [] ((::ND::TP0DReconModule*)p);
   }
   static void destruct_NDcLcLTP0DReconModule(void *p) {
      typedef ::ND::TP0DReconModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DReconModule

      namespace ND {
//______________________________________________________________________________
void TAnalysisReconModuleBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TAnalysisReconModuleBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TAnalysisReconModuleBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TAnalysisReconModuleBase::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TAnalysisReconModuleBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TAnalysisReconModuleBase.
      TClass *R__cl = ::ND::TAnalysisReconModuleBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTAnalysisReconModuleBase(void *p) {
      return  p ? new(p) ::ND::TAnalysisReconModuleBase : new ::ND::TAnalysisReconModuleBase;
   }
   static void *newArray_NDcLcLTAnalysisReconModuleBase(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TAnalysisReconModuleBase[nElements] : new ::ND::TAnalysisReconModuleBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTAnalysisReconModuleBase(void *p) {
      delete ((::ND::TAnalysisReconModuleBase*)p);
   }
   static void deleteArray_NDcLcLTAnalysisReconModuleBase(void *p) {
      delete [] ((::ND::TAnalysisReconModuleBase*)p);
   }
   static void destruct_NDcLcLTAnalysisReconModuleBase(void *p) {
      typedef ::ND::TAnalysisReconModuleBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TAnalysisReconModuleBase

      namespace ND {
//______________________________________________________________________________
void TP0DECALReconModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TP0DECALReconModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TP0DECALReconModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TP0DECALReconModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TP0DECALReconModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TP0DECALReconModule.
      TClass *R__cl = ::ND::TP0DECALReconModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisReconModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTP0DECALReconModule(void *p) {
      return  p ? new(p) ::ND::TP0DECALReconModule : new ::ND::TP0DECALReconModule;
   }
   static void *newArray_NDcLcLTP0DECALReconModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TP0DECALReconModule[nElements] : new ::ND::TP0DECALReconModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTP0DECALReconModule(void *p) {
      delete ((::ND::TP0DECALReconModule*)p);
   }
   static void deleteArray_NDcLcLTP0DECALReconModule(void *p) {
      delete [] ((::ND::TP0DECALReconModule*)p);
   }
   static void destruct_NDcLcLTP0DECALReconModule(void *p) {
      typedef ::ND::TP0DECALReconModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TP0DECALReconModule

      namespace ND {
//______________________________________________________________________________
void TTrackerECALReconModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALReconModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALReconModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALReconModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerECALReconModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALReconModule.
      TClass *R__cl = ::ND::TTrackerECALReconModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNUnmatchedObjects", &fNUnmatchedObjects);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsMC", &fIsMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUnmatchedObjects", &fUnmatchedObjects);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisReconModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALReconModule(void *p) {
      return  p ? new(p) ::ND::TTrackerECALReconModule : new ::ND::TTrackerECALReconModule;
   }
   static void *newArray_NDcLcLTTrackerECALReconModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALReconModule[nElements] : new ::ND::TTrackerECALReconModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALReconModule(void *p) {
      delete ((::ND::TTrackerECALReconModule*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALReconModule(void *p) {
      delete [] ((::ND::TTrackerECALReconModule*)p);
   }
   static void destruct_NDcLcLTTrackerECALReconModule(void *p) {
      typedef ::ND::TTrackerECALReconModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerECALReconModule

      namespace ND {
//______________________________________________________________________________
void TTrackerECALPi0ReconModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerECALPi0ReconModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerECALPi0ReconModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerECALPi0ReconModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerECALPi0ReconModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerECALPi0ReconModule.
      TClass *R__cl = ::ND::TTrackerECALPi0ReconModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisReconModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerECALPi0ReconModule(void *p) {
      return  p ? new(p) ::ND::TTrackerECALPi0ReconModule : new ::ND::TTrackerECALPi0ReconModule;
   }
   static void *newArray_NDcLcLTTrackerECALPi0ReconModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerECALPi0ReconModule[nElements] : new ::ND::TTrackerECALPi0ReconModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerECALPi0ReconModule(void *p) {
      delete ((::ND::TTrackerECALPi0ReconModule*)p);
   }
   static void deleteArray_NDcLcLTTrackerECALPi0ReconModule(void *p) {
      delete [] ((::ND::TTrackerECALPi0ReconModule*)p);
   }
   static void destruct_NDcLcLTTrackerECALPi0ReconModule(void *p) {
      typedef ::ND::TTrackerECALPi0ReconModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerECALPi0ReconModule

      namespace ND {
//______________________________________________________________________________
void TGlobalReconModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGlobalReconModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGlobalReconModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGlobalReconModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGlobalReconModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGlobalReconModule.
      TClass *R__cl = ::ND::TGlobalReconModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecPackInitialized", &fRecPackInitialized);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fALLMODULES", (void*)&fALLMODULES);
      R__insp.InspectMember("vector<string>", (void*)&fALLMODULES, "fALLMODULES.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPassedDetector[25]", fPassedDetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTestTPCInfo", &fTestTPCInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTPCPIDs", &fNTPCPIDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTPCPIDs", &fTPCPIDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSMRDBottomUnused", &fNSMRDBottomUnused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSMRDLeftUnused", &fNSMRDLeftUnused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSMRDRightUnused", &fNSMRDRightUnused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP0DOutermostHits", &fP0DOutermostHits);
      R__insp.InspectMember(fP0DOutermostHits, "fP0DOutermostHits.");
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisReconModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGlobalReconModule(void *p) {
      return  p ? new(p) ::ND::TGlobalReconModule : new ::ND::TGlobalReconModule;
   }
   static void *newArray_NDcLcLTGlobalReconModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGlobalReconModule[nElements] : new ::ND::TGlobalReconModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGlobalReconModule(void *p) {
      delete ((::ND::TGlobalReconModule*)p);
   }
   static void deleteArray_NDcLcLTGlobalReconModule(void *p) {
      delete [] ((::ND::TGlobalReconModule*)p);
   }
   static void destruct_NDcLcLTGlobalReconModule(void *p) {
      typedef ::ND::TGlobalReconModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGlobalReconModule

      namespace ND {
//______________________________________________________________________________
void TTrackerReconModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TTrackerReconModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TTrackerReconModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TTrackerReconModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TTrackerReconModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TTrackerReconModule.
      TClass *R__cl = ::ND::TTrackerReconModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVertices", &fNVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertices", &fVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTracks", &fNTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTracks", &fTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFGDOther", &fNFGDOther);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFGDOther", &fFGDOther);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTPCOther", &fNTPCOther);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTPCOther", &fTPCOther);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTPCIso", &fNTPCIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTPCIso", &fTPCIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTPCUnused", &fNTPCUnused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTPCUnused", &fTPCUnused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFGDUnused", &fNFGDUnused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFGDUnused", &fFGDUnused);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTPCExtrapolation", &fNTPCExtrapolation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTPCExtrapolation", &fTPCExtrapolation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxDrift", &fMaxDrift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCathodeOffset", &fCathodeOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftVelocity", &fDriftVelocity);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisReconModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTTrackerReconModule(void *p) {
      return  p ? new(p) ::ND::TTrackerReconModule : new ::ND::TTrackerReconModule;
   }
   static void *newArray_NDcLcLTTrackerReconModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TTrackerReconModule[nElements] : new ::ND::TTrackerReconModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTTrackerReconModule(void *p) {
      delete ((::ND::TTrackerReconModule*)p);
   }
   static void deleteArray_NDcLcLTTrackerReconModule(void *p) {
      delete [] ((::ND::TTrackerReconModule*)p);
   }
   static void destruct_NDcLcLTTrackerReconModule(void *p) {
      typedef ::ND::TTrackerReconModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TTrackerReconModule

      namespace ND {
//______________________________________________________________________________
void TECALTestbeamModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TECALTestbeamModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TECALTestbeamModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TECALTestbeamModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TECALTestbeamModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TECALTestbeamModule.
      TClass *R__cl = ::ND::TECALTestbeamModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cerenkov1Lo[23]", Cerenkov1Lo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cerenkov2Lo[23]", Cerenkov2Lo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cerenkov1Hi[23]", Cerenkov1Hi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cerenkov2Hi[23]", Cerenkov2Hi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOF[23]", TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerWord", &TriggerWord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PIDResult", &PIDResult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Angle", &Angle);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisReconModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTECALTestbeamModule(void *p) {
      return  p ? new(p) ::ND::TECALTestbeamModule : new ::ND::TECALTestbeamModule;
   }
   static void *newArray_NDcLcLTECALTestbeamModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TECALTestbeamModule[nElements] : new ::ND::TECALTestbeamModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTECALTestbeamModule(void *p) {
      delete ((::ND::TECALTestbeamModule*)p);
   }
   static void deleteArray_NDcLcLTECALTestbeamModule(void *p) {
      delete [] ((::ND::TECALTestbeamModule*)p);
   }
   static void destruct_NDcLcLTECALTestbeamModule(void *p) {
      typedef ::ND::TECALTestbeamModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TECALTestbeamModule

      namespace ND {
//______________________________________________________________________________
void TSmrdReconModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TSmrdReconModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TSmrdReconModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TSmrdReconModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TSmrdReconModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TSmrdReconModule.
      TClass *R__cl = ::ND::TSmrdReconModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisReconModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTSmrdReconModule(void *p) {
      return  p ? new(p) ::ND::TSmrdReconModule : new ::ND::TSmrdReconModule;
   }
   static void *newArray_NDcLcLTSmrdReconModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TSmrdReconModule[nElements] : new ::ND::TSmrdReconModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTSmrdReconModule(void *p) {
      delete ((::ND::TSmrdReconModule*)p);
   }
   static void deleteArray_NDcLcLTSmrdReconModule(void *p) {
      delete [] ((::ND::TSmrdReconModule*)p);
   }
   static void destruct_NDcLcLTSmrdReconModule(void *p) {
      typedef ::ND::TSmrdReconModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TSmrdReconModule

      namespace ND {
//______________________________________________________________________________
void TLowLevelInfoModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TLowLevelInfoModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TLowLevelInfoModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TLowLevelInfoModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TLowLevelInfoModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TLowLevelInfoModule.
      TClass *R__cl = ::ND::TLowLevelInfoModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLowLevelTFBDigits", &fLowLevelTFBDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNLowLevelTFBDigits", &fNLowLevelTFBDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLowLevelHits", &fLowLevelHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNLowLevelHits", &fNLowLevelHits);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTLowLevelInfoModule(void *p) {
      return  p ? new(p) ::ND::TLowLevelInfoModule : new ::ND::TLowLevelInfoModule;
   }
   static void *newArray_NDcLcLTLowLevelInfoModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TLowLevelInfoModule[nElements] : new ::ND::TLowLevelInfoModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTLowLevelInfoModule(void *p) {
      delete ((::ND::TLowLevelInfoModule*)p);
   }
   static void deleteArray_NDcLcLTLowLevelInfoModule(void *p) {
      delete [] ((::ND::TLowLevelInfoModule*)p);
   }
   static void destruct_NDcLcLTLowLevelInfoModule(void *p) {
      typedef ::ND::TLowLevelInfoModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TLowLevelInfoModule

      namespace ND {
//______________________________________________________________________________
void TLowLevelInfoModule::TLowLevelTFBDigit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TLowLevelInfoModule::TLowLevelTFBDigit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TLowLevelInfoModule::TLowLevelTFBDigit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TLowLevelInfoModule::TLowLevelTFBDigit::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TLowLevelInfoModule::TLowLevelTFBDigit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TLowLevelInfoModule::TLowLevelTFBDigit.
      TClass *R__cl = ::ND::TLowLevelInfoModule::TLowLevelTFBDigit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chan", &Chan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tfb", &Tfb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Rmm", &Rmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Subdet", &Subdet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Side", &Side);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Err", &Err);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tdc", &Tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TdcTrig", &TdcTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TdcRead", &TdcRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Adc_lo", &Adc_lo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Adc_hi", &Adc_hi);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(void *p) {
      return  p ? new(p) ::ND::TLowLevelInfoModule::TLowLevelTFBDigit : new ::ND::TLowLevelInfoModule::TLowLevelTFBDigit;
   }
   static void *newArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TLowLevelInfoModule::TLowLevelTFBDigit[nElements] : new ::ND::TLowLevelInfoModule::TLowLevelTFBDigit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(void *p) {
      delete ((::ND::TLowLevelInfoModule::TLowLevelTFBDigit*)p);
   }
   static void deleteArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(void *p) {
      delete [] ((::ND::TLowLevelInfoModule::TLowLevelTFBDigit*)p);
   }
   static void destruct_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(void *p) {
      typedef ::ND::TLowLevelInfoModule::TLowLevelTFBDigit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TLowLevelInfoModule::TLowLevelTFBDigit

      namespace ND {
//______________________________________________________________________________
void TLowLevelInfoModule::TLowLevelHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TLowLevelInfoModule::TLowLevelHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TLowLevelInfoModule::TLowLevelHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TLowLevelInfoModule::TLowLevelHit::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TLowLevelInfoModule::TLowLevelHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TLowLevelInfoModule::TLowLevelHit.
      TClass *R__cl = ::ND::TLowLevelInfoModule::TLowLevelHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeomId", &GeomId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosX", &PosX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosY", &PosY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PosZ", &PosZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XLayer", &XLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "YLayer", &YLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Bar", &Bar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "End", &End);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeRead", &TimeRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Event", &Event);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit(void *p) {
      return  p ? new(p) ::ND::TLowLevelInfoModule::TLowLevelHit : new ::ND::TLowLevelInfoModule::TLowLevelHit;
   }
   static void *newArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TLowLevelInfoModule::TLowLevelHit[nElements] : new ::ND::TLowLevelInfoModule::TLowLevelHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit(void *p) {
      delete ((::ND::TLowLevelInfoModule::TLowLevelHit*)p);
   }
   static void deleteArray_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit(void *p) {
      delete [] ((::ND::TLowLevelInfoModule::TLowLevelHit*)p);
   }
   static void destruct_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit(void *p) {
      typedef ::ND::TLowLevelInfoModule::TLowLevelHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TLowLevelInfoModule::TLowLevelHit

      namespace ND {
//______________________________________________________________________________
void TFgdOnlyModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TFgdOnlyModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TFgdOnlyModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TFgdOnlyModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TFgdOnlyModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TFgdOnlyModule.
      TClass *R__cl = ::ND::TFgdOnlyModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fN3DShowers", &fN3DShowers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f3DShowers", &f3DShowers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fN2DClustersXZ", &fN2DClustersXZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f2DClustersXZ", &f2DClustersXZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fN2DClustersYZ", &fN2DClustersYZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f2DClustersYZ", &f2DClustersYZ);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisReconModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTFgdOnlyModule(void *p) {
      return  p ? new(p) ::ND::TFgdOnlyModule : new ::ND::TFgdOnlyModule;
   }
   static void *newArray_NDcLcLTFgdOnlyModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TFgdOnlyModule[nElements] : new ::ND::TFgdOnlyModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTFgdOnlyModule(void *p) {
      delete ((::ND::TFgdOnlyModule*)p);
   }
   static void deleteArray_NDcLcLTFgdOnlyModule(void *p) {
      delete [] ((::ND::TFgdOnlyModule*)p);
   }
   static void destruct_NDcLcLTFgdOnlyModule(void *p) {
      typedef ::ND::TFgdOnlyModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TFgdOnlyModule

      namespace ND {
//______________________________________________________________________________
void TBeamSummaryDataModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TBeamSummaryDataModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TBeamSummaryDataModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TBeamSummaryDataModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TBeamSummaryDataModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TBeamSummaryDataModule.
      TClass *R__cl = ::ND::TBeamSummaryDataModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisHeaderModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTBeamSummaryDataModule(void *p) {
      return  p ? new(p) ::ND::TBeamSummaryDataModule : new ::ND::TBeamSummaryDataModule;
   }
   static void *newArray_NDcLcLTBeamSummaryDataModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TBeamSummaryDataModule[nElements] : new ::ND::TBeamSummaryDataModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTBeamSummaryDataModule(void *p) {
      delete ((::ND::TBeamSummaryDataModule*)p);
   }
   static void deleteArray_NDcLcLTBeamSummaryDataModule(void *p) {
      delete [] ((::ND::TBeamSummaryDataModule*)p);
   }
   static void destruct_NDcLcLTBeamSummaryDataModule(void *p) {
      typedef ::ND::TBeamSummaryDataModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TBeamSummaryDataModule

      namespace ND {
//______________________________________________________________________________
void TReconPerformanceEvalModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TReconPerformanceEvalModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TReconPerformanceEvalModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TReconPerformanceEvalModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TReconPerformanceEvalModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TReconPerformanceEvalModule.
      TClass *R__cl = ::ND::TReconPerformanceEvalModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNGlobalReconObjects", &fNGlobalReconObjects);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGlobalReconObjects", &fGlobalReconObjects);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitInfo", (void*)&fHitInfo);
      R__insp.InspectMember("vector<std::pair<std::string,int> >", (void*)&fHitInfo, "fHitInfo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSaveAllGlobalNodes", &fSaveAllGlobalNodes);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisReconModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTReconPerformanceEvalModule(void *p) {
      return  p ? new(p) ::ND::TReconPerformanceEvalModule : new ::ND::TReconPerformanceEvalModule;
   }
   static void *newArray_NDcLcLTReconPerformanceEvalModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TReconPerformanceEvalModule[nElements] : new ::ND::TReconPerformanceEvalModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTReconPerformanceEvalModule(void *p) {
      delete ((::ND::TReconPerformanceEvalModule*)p);
   }
   static void deleteArray_NDcLcLTReconPerformanceEvalModule(void *p) {
      delete [] ((::ND::TReconPerformanceEvalModule*)p);
   }
   static void destruct_NDcLcLTReconPerformanceEvalModule(void *p) {
      typedef ::ND::TReconPerformanceEvalModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TReconPerformanceEvalModule

      namespace ND {
//______________________________________________________________________________
void TReconPerformanceEvalModule::TGlobalReconObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TReconPerformanceEvalModule::TGlobalReconObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TReconPerformanceEvalModule::TGlobalReconObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TReconPerformanceEvalModule::TGlobalReconObject::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TReconPerformanceEvalModule::TGlobalReconObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TReconPerformanceEvalModule::TGlobalReconObject.
      TClass *R__cl = ::ND::TReconPerformanceEvalModule::TGlobalReconObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SetOK", &SetOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NConstituents", &NConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NModuleConstituents", &NModuleConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SubdetectorString", (void*)&SubdetectorString);
      R__insp.InspectMember("string", (void*)&SubdetectorString, "SubdetectorString.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StatusString", (void*)&StatusString);
      R__insp.InspectMember("string", (void*)&StatusString, "StatusString.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GlobalNodes", &GlobalNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NGlobalNodes", &NGlobalNodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NGlobalNodesSaved", &NGlobalNodesSaved);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Quality", &Quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDOF", &NDOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ParticleID", (void*)&ParticleID);
      R__insp.InspectMember("string", (void*)&ParticleID, "ParticleID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PIDWeight", &PIDWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MatchingChi2Info", &MatchingChi2Info);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NMatchingChi2Info", &NMatchingChi2Info);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Truth", &Truth);
      R__insp.InspectMember(Truth, "Truth.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Constituents", &Constituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DownToTrackerConstituents", &DownToTrackerConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDownToTrackerConstituents", &NDownToTrackerConstituents);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(void *p) {
      return  p ? new(p) ::ND::TReconPerformanceEvalModule::TGlobalReconObject : new ::ND::TReconPerformanceEvalModule::TGlobalReconObject;
   }
   static void *newArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TReconPerformanceEvalModule::TGlobalReconObject[nElements] : new ::ND::TReconPerformanceEvalModule::TGlobalReconObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(void *p) {
      delete ((::ND::TReconPerformanceEvalModule::TGlobalReconObject*)p);
   }
   static void deleteArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(void *p) {
      delete [] ((::ND::TReconPerformanceEvalModule::TGlobalReconObject*)p);
   }
   static void destruct_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(void *p) {
      typedef ::ND::TReconPerformanceEvalModule::TGlobalReconObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TReconPerformanceEvalModule::TGlobalReconObject

      namespace ND {
//______________________________________________________________________________
void TReconPerformanceEvalModule::TGlobalTruthInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TReconPerformanceEvalModule::TGlobalTruthInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TReconPerformanceEvalModule::TGlobalTruthInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TReconPerformanceEvalModule::TGlobalTruthInfo.
      TClass *R__cl = ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SetOK", &SetOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Direction", &Direction);
      R__insp.InspectMember(Direction, "Direction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Efficiency", &Efficiency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Purity", &Purity);
      TObject::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(void *p) {
      return  p ? new(p) ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo : new ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo;
   }
   static void *newArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo[nElements] : new ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(void *p) {
      delete ((::ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)p);
   }
   static void deleteArray_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(void *p) {
      delete [] ((::ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)p);
   }
   static void destruct_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(void *p) {
      typedef ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TReconPerformanceEvalModule::TGlobalTruthInfo

      namespace ND {
//______________________________________________________________________________
void TExample2010aAnalysis1Module::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TExample2010aAnalysis1Module.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TExample2010aAnalysis1Module::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TExample2010aAnalysis1Module::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TExample2010aAnalysis1Module::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TExample2010aAnalysis1Module.
      TClass *R__cl = ::ND::TExample2010aAnalysis1Module::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeOffset", &fTimeOffset);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisReconModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTExample2010aAnalysis1Module(void *p) {
      return  p ? new(p) ::ND::TExample2010aAnalysis1Module : new ::ND::TExample2010aAnalysis1Module;
   }
   static void *newArray_NDcLcLTExample2010aAnalysis1Module(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TExample2010aAnalysis1Module[nElements] : new ::ND::TExample2010aAnalysis1Module[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTExample2010aAnalysis1Module(void *p) {
      delete ((::ND::TExample2010aAnalysis1Module*)p);
   }
   static void deleteArray_NDcLcLTExample2010aAnalysis1Module(void *p) {
      delete [] ((::ND::TExample2010aAnalysis1Module*)p);
   }
   static void destruct_NDcLcLTExample2010aAnalysis1Module(void *p) {
      typedef ::ND::TExample2010aAnalysis1Module current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TExample2010aAnalysis1Module

      namespace ND {
//______________________________________________________________________________
void TGeometrySummaryModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGeometrySummaryModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGeometrySummaryModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGeometrySummaryModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGeometrySummaryModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGeometrySummaryModule.
      TClass *R__cl = ::ND::TGeometrySummaryModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFGD1", &fFGD1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFGD2", &fFGD2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP0D", &fP0D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFGD1Active", &fFGD1Active);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFGD2Active", &fFGD2Active);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP0DActive", &fP0DActive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTPC1", &fTPC1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTPC2", &fTPC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTPC3", &fTPC3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDSECAL", &fDSECAL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTECAL1", &fTECAL1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTECAL2", &fTECAL2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTECAL3", &fTECAL3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTECAL4", &fTECAL4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTECAL5", &fTECAL5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTECAL6", &fTECAL6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPECAL1", &fPECAL1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPECAL2", &fPECAL2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPECAL3", &fPECAL3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPECAL4", &fPECAL4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPECAL5", &fPECAL5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPECAL6", &fPECAL6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSMRD1", &fSMRD1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSMRD2", &fSMRD2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSMRD3", &fSMRD3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSMRD4", &fSMRD4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMM", &fMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MMmap", (void*)&MMmap);
      R__insp.InspectMember("map<int,std::pair<int,const TGeoNode*> >", (void*)&MMmap, "MMmap.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisHeaderModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGeometrySummaryModule(void *p) {
      return  p ? new(p) ::ND::TGeometrySummaryModule : new ::ND::TGeometrySummaryModule;
   }
   static void *newArray_NDcLcLTGeometrySummaryModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGeometrySummaryModule[nElements] : new ::ND::TGeometrySummaryModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGeometrySummaryModule(void *p) {
      delete ((::ND::TGeometrySummaryModule*)p);
   }
   static void deleteArray_NDcLcLTGeometrySummaryModule(void *p) {
      delete [] ((::ND::TGeometrySummaryModule*)p);
   }
   static void destruct_NDcLcLTGeometrySummaryModule(void *p) {
      typedef ::ND::TGeometrySummaryModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGeometrySummaryModule

      namespace ND {
//______________________________________________________________________________
void TGRooTrackerVtxModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TGRooTrackerVtxModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TGRooTrackerVtxModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TGRooTrackerVtxModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TGRooTrackerVtxModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TGRooTrackerVtxModule.
      TClass *R__cl = ::ND::TGRooTrackerVtxModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TRooTrackerVtxModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTGRooTrackerVtxModule(void *p) {
      return  p ? new(p) ::ND::TGRooTrackerVtxModule : new ::ND::TGRooTrackerVtxModule;
   }
   static void *newArray_NDcLcLTGRooTrackerVtxModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TGRooTrackerVtxModule[nElements] : new ::ND::TGRooTrackerVtxModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTGRooTrackerVtxModule(void *p) {
      delete ((::ND::TGRooTrackerVtxModule*)p);
   }
   static void deleteArray_NDcLcLTGRooTrackerVtxModule(void *p) {
      delete [] ((::ND::TGRooTrackerVtxModule*)p);
   }
   static void destruct_NDcLcLTGRooTrackerVtxModule(void *p) {
      typedef ::ND::TGRooTrackerVtxModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TGRooTrackerVtxModule

      namespace ND {
//______________________________________________________________________________
void TRooTrackerVtxModuleBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TRooTrackerVtxModuleBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TRooTrackerVtxModuleBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TRooTrackerVtxModuleBase::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TRooTrackerVtxModuleBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TRooTrackerVtxModuleBase.
      TClass *R__cl = ::ND::TRooTrackerVtxModuleBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPassThroughPresent", &fPassThroughPresent);
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TAnalysisTruthModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTRooTrackerVtxModuleBase(void *p) {
      return  p ? new(p) ::ND::TRooTrackerVtxModuleBase : new ::ND::TRooTrackerVtxModuleBase;
   }
   static void *newArray_NDcLcLTRooTrackerVtxModuleBase(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TRooTrackerVtxModuleBase[nElements] : new ::ND::TRooTrackerVtxModuleBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTRooTrackerVtxModuleBase(void *p) {
      delete ((::ND::TRooTrackerVtxModuleBase*)p);
   }
   static void deleteArray_NDcLcLTRooTrackerVtxModuleBase(void *p) {
      delete [] ((::ND::TRooTrackerVtxModuleBase*)p);
   }
   static void destruct_NDcLcLTRooTrackerVtxModuleBase(void *p) {
      typedef ::ND::TRooTrackerVtxModuleBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TRooTrackerVtxModuleBase

      namespace ND {
//______________________________________________________________________________
void TNRooTrackerVtxModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class ND::TNRooTrackerVtxModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ND::TNRooTrackerVtxModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(ND::TNRooTrackerVtxModule::Class(),this);
   }
}

} // namespace ND
//______________________________________________________________________________
      namespace ND {
void TNRooTrackerVtxModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ND::TNRooTrackerVtxModule.
      TClass *R__cl = ::ND::TNRooTrackerVtxModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef ND::TRooTrackerVtxModuleBase baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace ND
namespace ROOT {
   // Wrappers around operator new
   static void *new_NDcLcLTNRooTrackerVtxModule(void *p) {
      return  p ? new(p) ::ND::TNRooTrackerVtxModule : new ::ND::TNRooTrackerVtxModule;
   }
   static void *newArray_NDcLcLTNRooTrackerVtxModule(Long_t nElements, void *p) {
      return p ? new(p) ::ND::TNRooTrackerVtxModule[nElements] : new ::ND::TNRooTrackerVtxModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_NDcLcLTNRooTrackerVtxModule(void *p) {
      delete ((::ND::TNRooTrackerVtxModule*)p);
   }
   static void deleteArray_NDcLcLTNRooTrackerVtxModule(void *p) {
      delete [] ((::ND::TNRooTrackerVtxModule*)p);
   }
   static void destruct_NDcLcLTNRooTrackerVtxModule(void *p) {
      typedef ::ND::TNRooTrackerVtxModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ND::TNRooTrackerVtxModule

namespace ROOT {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,int>

namespace ROOT {
   void maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_Dictionary();
   static void *new_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p = 0);
   static void *newArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(Long_t size, void *p);
   static void delete_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p);
   static void deleteArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p);
   static void destruct_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,pair<int,const TGeoNode*> >*)
   {
      map<int,pair<int,const TGeoNode*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,pair<int,const TGeoNode*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,pair<int,const TGeoNode*> >", -2, "prec_stl/map", 63,
                  typeid(map<int,pair<int,const TGeoNode*> >), DefineBehavior(ptr, ptr),
                  0, &maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,pair<int,const TGeoNode*> >) );
      instance.SetNew(&new_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetNewArray(&newArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetDelete(&delete_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.SetDestructor(&destruct_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,pair<int,const TGeoNode*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,pair<int,const TGeoNode*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,pair<int,const TGeoNode*> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,pair<int,const TGeoNode*> > : new map<int,pair<int,const TGeoNode*> >;
   }
   static void *newArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,pair<int,const TGeoNode*> >[nElements] : new map<int,pair<int,const TGeoNode*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      delete ((map<int,pair<int,const TGeoNode*> >*)p);
   }
   static void deleteArray_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      delete [] ((map<int,pair<int,const TGeoNode*> >*)p);
   }
   static void destruct_maplEintcOpairlEintcOconstsPTGeoNodemUgRsPgR(void *p) {
      typedef map<int,pair<int,const TGeoNode*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,pair<int,const TGeoNode*> >

namespace ROOT {
   void maplEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOintgR_Dictionary();
   static void *new_maplEstringcOintgR(void *p = 0);
   static void *newArray_maplEstringcOintgR(Long_t size, void *p);
   static void delete_maplEstringcOintgR(void *p);
   static void deleteArray_maplEstringcOintgR(void *p);
   static void destruct_maplEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,int>*)
   {
      map<string,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,int>", -2, "map.dll", 0,
                  typeid(map<string,int>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,int>) );
      instance.SetNew(&new_maplEstringcOintgR);
      instance.SetNewArray(&newArray_maplEstringcOintgR);
      instance.SetDelete(&delete_maplEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOintgR);
      instance.SetDestructor(&destruct_maplEstringcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int> : new map<string,int>;
   }
   static void *newArray_maplEstringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int>[nElements] : new map<string,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOintgR(void *p) {
      delete ((map<string,int>*)p);
   }
   static void deleteArray_maplEstringcOintgR(void *p) {
      delete [] ((map<string,int>*)p);
   }
   static void destruct_maplEstringcOintgR(void *p) {
      typedef map<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,int>

namespace ROOT {
   void maplEunsignedsPintcOshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPintcOshortgR_Dictionary();
   static void *new_maplEunsignedsPintcOshortgR(void *p = 0);
   static void *newArray_maplEunsignedsPintcOshortgR(Long_t size, void *p);
   static void delete_maplEunsignedsPintcOshortgR(void *p);
   static void deleteArray_maplEunsignedsPintcOshortgR(void *p);
   static void destruct_maplEunsignedsPintcOshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned int,short>*)
   {
      map<unsigned int,short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned int,short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned int,short>", -2, "prec_stl/map", 63,
                  typeid(map<unsigned int,short>), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPintcOshortgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned int,short>) );
      instance.SetNew(&new_maplEunsignedsPintcOshortgR);
      instance.SetNewArray(&newArray_maplEunsignedsPintcOshortgR);
      instance.SetDelete(&delete_maplEunsignedsPintcOshortgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPintcOshortgR);
      instance.SetDestructor(&destruct_maplEunsignedsPintcOshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned int,short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned int,short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPintcOshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned int,short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPintcOshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,short> : new map<unsigned int,short>;
   }
   static void *newArray_maplEunsignedsPintcOshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,short>[nElements] : new map<unsigned int,short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPintcOshortgR(void *p) {
      delete ((map<unsigned int,short>*)p);
   }
   static void deleteArray_maplEunsignedsPintcOshortgR(void *p) {
      delete [] ((map<unsigned int,short>*)p);
   }
   static void destruct_maplEunsignedsPintcOshortgR(void *p) {
      typedef map<unsigned int,short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned int,short>

namespace ROOT {
   void setlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void setlEintgR_Dictionary();
   static void *new_setlEintgR(void *p = 0);
   static void *newArray_setlEintgR(Long_t size, void *p);
   static void delete_setlEintgR(void *p);
   static void deleteArray_setlEintgR(void *p);
   static void destruct_setlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<int>*)
   {
      set<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<int>", -2, "set.dll", 0,
                  typeid(set<int>), DefineBehavior(ptr, ptr),
                  0, &setlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(set<int>) );
      instance.SetNew(&new_setlEintgR);
      instance.SetNewArray(&newArray_setlEintgR);
      instance.SetDelete(&delete_setlEintgR);
      instance.SetDeleteArray(&deleteArray_setlEintgR);
      instance.SetDestructor(&destruct_setlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int> : new set<int>;
   }
   static void *newArray_setlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int>[nElements] : new set<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEintgR(void *p) {
      delete ((set<int>*)p);
   }
   static void deleteArray_setlEintgR(void *p) {
      delete [] ((set<int>*)p);
   }
   static void destruct_setlEintgR(void *p) {
      typedef set<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<int>

namespace ROOT {
   void vectorlENDcLcLTDatummUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlENDcLcLTDatummUgR_Dictionary();
   static void *new_vectorlENDcLcLTDatummUgR(void *p = 0);
   static void *newArray_vectorlENDcLcLTDatummUgR(Long_t size, void *p);
   static void delete_vectorlENDcLcLTDatummUgR(void *p);
   static void deleteArray_vectorlENDcLcLTDatummUgR(void *p);
   static void destruct_vectorlENDcLcLTDatummUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<ND::TDatum*>*)
   {
      vector<ND::TDatum*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ND::TDatum*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ND::TDatum*>", -2, "prec_stl/vector", 49,
                  typeid(vector<ND::TDatum*>), DefineBehavior(ptr, ptr),
                  0, &vectorlENDcLcLTDatummUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ND::TDatum*>) );
      instance.SetNew(&new_vectorlENDcLcLTDatummUgR);
      instance.SetNewArray(&newArray_vectorlENDcLcLTDatummUgR);
      instance.SetDelete(&delete_vectorlENDcLcLTDatummUgR);
      instance.SetDeleteArray(&deleteArray_vectorlENDcLcLTDatummUgR);
      instance.SetDestructor(&destruct_vectorlENDcLcLTDatummUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<ND::TDatum*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ND::TDatum*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlENDcLcLTDatummUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<ND::TDatum*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlENDcLcLTDatummUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ND::TDatum*> : new vector<ND::TDatum*>;
   }
   static void *newArray_vectorlENDcLcLTDatummUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ND::TDatum*>[nElements] : new vector<ND::TDatum*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlENDcLcLTDatummUgR(void *p) {
      delete ((vector<ND::TDatum*>*)p);
   }
   static void deleteArray_vectorlENDcLcLTDatummUgR(void *p) {
      delete [] ((vector<ND::TDatum*>*)p);
   }
   static void destruct_vectorlENDcLcLTDatummUgR(void *p) {
      typedef vector<ND::TDatum*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<ND::TDatum*>

namespace ROOT {
   void vectorlETLorentzVectorgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETLorentzVectorgR_Dictionary();
   static void *new_vectorlETLorentzVectorgR(void *p = 0);
   static void *newArray_vectorlETLorentzVectorgR(Long_t size, void *p);
   static void delete_vectorlETLorentzVectorgR(void *p);
   static void deleteArray_vectorlETLorentzVectorgR(void *p);
   static void destruct_vectorlETLorentzVectorgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TLorentzVector>*)
   {
      vector<TLorentzVector> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TLorentzVector>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TLorentzVector>", -2, "prec_stl/vector", 49,
                  typeid(vector<TLorentzVector>), DefineBehavior(ptr, ptr),
                  0, &vectorlETLorentzVectorgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TLorentzVector>) );
      instance.SetNew(&new_vectorlETLorentzVectorgR);
      instance.SetNewArray(&newArray_vectorlETLorentzVectorgR);
      instance.SetDelete(&delete_vectorlETLorentzVectorgR);
      instance.SetDeleteArray(&deleteArray_vectorlETLorentzVectorgR);
      instance.SetDestructor(&destruct_vectorlETLorentzVectorgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TLorentzVector> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETLorentzVectorgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETLorentzVectorgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector> : new vector<TLorentzVector>;
   }
   static void *newArray_vectorlETLorentzVectorgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector>[nElements] : new vector<TLorentzVector>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETLorentzVectorgR(void *p) {
      delete ((vector<TLorentzVector>*)p);
   }
   static void deleteArray_vectorlETLorentzVectorgR(void *p) {
      delete [] ((vector<TLorentzVector>*)p);
   }
   static void destruct_vectorlETLorentzVectorgR(void *p) {
      typedef vector<TLorentzVector> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TLorentzVector>

namespace ROOT {
   void vectorlETPRegexpgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETPRegexpgR_Dictionary();
   static void *new_vectorlETPRegexpgR(void *p = 0);
   static void *newArray_vectorlETPRegexpgR(Long_t size, void *p);
   static void delete_vectorlETPRegexpgR(void *p);
   static void deleteArray_vectorlETPRegexpgR(void *p);
   static void destruct_vectorlETPRegexpgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TPRegexp>*)
   {
      vector<TPRegexp> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TPRegexp>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TPRegexp>", -2, "prec_stl/vector", 49,
                  typeid(vector<TPRegexp>), DefineBehavior(ptr, ptr),
                  0, &vectorlETPRegexpgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TPRegexp>) );
      instance.SetNew(&new_vectorlETPRegexpgR);
      instance.SetNewArray(&newArray_vectorlETPRegexpgR);
      instance.SetDelete(&delete_vectorlETPRegexpgR);
      instance.SetDeleteArray(&deleteArray_vectorlETPRegexpgR);
      instance.SetDestructor(&destruct_vectorlETPRegexpgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TPRegexp> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TPRegexp>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETPRegexpgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TPRegexp>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETPRegexpgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TPRegexp> : new vector<TPRegexp>;
   }
   static void *newArray_vectorlETPRegexpgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TPRegexp>[nElements] : new vector<TPRegexp>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETPRegexpgR(void *p) {
      delete ((vector<TPRegexp>*)p);
   }
   static void deleteArray_vectorlETPRegexpgR(void *p) {
      delete [] ((vector<TPRegexp>*)p);
   }
   static void destruct_vectorlETPRegexpgR(void *p) {
      typedef vector<TPRegexp> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TPRegexp>

namespace ROOT {
   void vectorlETVector3mUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETVector3mUgR_Dictionary();
   static void *new_vectorlETVector3mUgR(void *p = 0);
   static void *newArray_vectorlETVector3mUgR(Long_t size, void *p);
   static void delete_vectorlETVector3mUgR(void *p);
   static void deleteArray_vectorlETVector3mUgR(void *p);
   static void destruct_vectorlETVector3mUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TVector3*>*)
   {
      vector<TVector3*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TVector3*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TVector3*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TVector3*>), DefineBehavior(ptr, ptr),
                  0, &vectorlETVector3mUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TVector3*>) );
      instance.SetNew(&new_vectorlETVector3mUgR);
      instance.SetNewArray(&newArray_vectorlETVector3mUgR);
      instance.SetDelete(&delete_vectorlETVector3mUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETVector3mUgR);
      instance.SetDestructor(&destruct_vectorlETVector3mUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TVector3*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TVector3*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETVector3mUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TVector3*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETVector3mUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3*> : new vector<TVector3*>;
   }
   static void *newArray_vectorlETVector3mUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3*>[nElements] : new vector<TVector3*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETVector3mUgR(void *p) {
      delete ((vector<TVector3*>*)p);
   }
   static void deleteArray_vectorlETVector3mUgR(void *p) {
      delete [] ((vector<TVector3*>*)p);
   }
   static void destruct_vectorlETVector3mUgR(void *p) {
      typedef vector<TVector3*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TVector3*>

namespace ROOT {
   void vectorlETVector3gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETVector3gR_Dictionary();
   static void *new_vectorlETVector3gR(void *p = 0);
   static void *newArray_vectorlETVector3gR(Long_t size, void *p);
   static void delete_vectorlETVector3gR(void *p);
   static void deleteArray_vectorlETVector3gR(void *p);
   static void destruct_vectorlETVector3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TVector3>*)
   {
      vector<TVector3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TVector3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TVector3>", -2, "prec_stl/vector", 49,
                  typeid(vector<TVector3>), DefineBehavior(ptr, ptr),
                  0, &vectorlETVector3gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TVector3>) );
      instance.SetNew(&new_vectorlETVector3gR);
      instance.SetNewArray(&newArray_vectorlETVector3gR);
      instance.SetDelete(&delete_vectorlETVector3gR);
      instance.SetDeleteArray(&deleteArray_vectorlETVector3gR);
      instance.SetDestructor(&destruct_vectorlETVector3gR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TVector3> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TVector3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETVector3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TVector3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETVector3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3> : new vector<TVector3>;
   }
   static void *newArray_vectorlETVector3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3>[nElements] : new vector<TVector3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETVector3gR(void *p) {
      delete ((vector<TVector3>*)p);
   }
   static void deleteArray_vectorlETVector3gR(void *p) {
      delete [] ((vector<TVector3>*)p);
   }
   static void destruct_vectorlETVector3gR(void *p) {
      typedef vector<TVector3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TVector3>

namespace ROOT {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<bool>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEpairlEstringcOintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEstringcOintgRsPgR_Dictionary();
   static void *new_vectorlEpairlEstringcOintgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEstringcOintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEstringcOintgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEstringcOintgRsPgR(void *p);
   static void destruct_vectorlEpairlEstringcOintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<string,int> >*)
   {
      vector<pair<string,int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<string,int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<string,int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<pair<string,int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEstringcOintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<string,int> >) );
      instance.SetNew(&new_vectorlEpairlEstringcOintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEstringcOintgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEstringcOintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEstringcOintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEstringcOintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<string,int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<string,int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEstringcOintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<string,int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEstringcOintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,int> > : new vector<pair<string,int> >;
   }
   static void *newArray_vectorlEpairlEstringcOintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,int> >[nElements] : new vector<pair<string,int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEstringcOintgRsPgR(void *p) {
      delete ((vector<pair<string,int> >*)p);
   }
   static void deleteArray_vectorlEpairlEstringcOintgRsPgR(void *p) {
      delete [] ((vector<pair<string,int> >*)p);
   }
   static void destruct_vectorlEpairlEstringcOintgRsPgR(void *p) {
      typedef vector<pair<string,int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<string,int> >

namespace ROOT {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<short>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

namespace ROOT {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<float> >

namespace ROOT {
   void vectorlEvectorlEshortgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEshortgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEshortgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEshortgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEshortgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEshortgRsPgR(void *p);
   static void destruct_vectorlEvectorlEshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<short> >*)
   {
      vector<vector<short> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<short> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<short> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<short> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEshortgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<short> >) );
      instance.SetNew(&new_vectorlEvectorlEshortgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEshortgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEshortgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEshortgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<short> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<short> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEshortgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<short> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEshortgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<short> > : new vector<vector<short> >;
   }
   static void *newArray_vectorlEvectorlEshortgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<short> >[nElements] : new vector<vector<short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEshortgRsPgR(void *p) {
      delete ((vector<vector<short> >*)p);
   }
   static void deleteArray_vectorlEvectorlEshortgRsPgR(void *p) {
      delete [] ((vector<vector<short> >*)p);
   }
   static void destruct_vectorlEvectorlEshortgRsPgR(void *p) {
      typedef vector<vector<short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<short> >

/********************************************************
* nd280ProjectDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablend280ProjectDict();

extern "C" void G__set_cpp_environmentnd280ProjectDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("nd280ProjectHeaders.h");
  G__cpp_reset_tagtablend280ProjectDict();
}
#include <new>
extern "C" int G__cpp_dllrevnd280ProjectDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ND */

/* ND::TND280Event */
static int G__nd280ProjectDict_163_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Event[n];
     } else {
       p = new((void*) gvp) ND::TND280Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Event;
     } else {
       p = new((void*) gvp) ND::TND280Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_163_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TND280Event(*(ND::TND280Event*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TND280Event(*(ND::TND280Event*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_163_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TND280Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_163_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_163_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TND280Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_163_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TND280Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_163_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TND280Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_163_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_163_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TND280Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_163_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_163_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TND280Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TND280Event G__TNDcLcLTND280Event;
static int G__nd280ProjectDict_163_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TND280Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TND280Event*) (soff+(sizeof(ND::TND280Event)*i)))->~G__TNDcLcLTND280Event();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TND280Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TND280Event*) (soff))->~G__TNDcLcLTND280Event();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_163_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event* dest = (ND::TND280Event*) G__getstructoffset();
   *dest = *(ND::TND280Event*) libp->para[0].ref;
   const ND::TND280Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TDataVector */
static int G__nd280ProjectDict_164_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDataVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TDataVector[n];
     } else {
       p = new((void*) gvp) ND::TDataVector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TDataVector;
     } else {
       p = new((void*) gvp) ND::TDataVector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_164_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDataVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TDataVector(*(ND::TDataVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TDataVector(*(ND::TDataVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_164_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TDataVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_164_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDataVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_164_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TDataVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_164_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TDataVector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_164_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TDataVector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_164_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDataVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_164_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TDataVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_164_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDataVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_164_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TDataVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TDataVector G__TNDcLcLTDataVector;
static int G__nd280ProjectDict_164_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TDataVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TDataVector*) (soff+(sizeof(ND::TDataVector)*i)))->~G__TNDcLcLTDataVector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TDataVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TDataVector*) (soff))->~G__TNDcLcLTDataVector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_164_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDataVector* dest = (ND::TDataVector*) G__getstructoffset();
   *dest = *(ND::TDataVector*) libp->para[0].ref;
   const ND::TDataVector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TData */
static int G__nd280ProjectDict_165_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TData[n];
     } else {
       p = new((void*) gvp) ND::TData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TData;
     } else {
       p = new((void*) gvp) ND::TData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_165_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TData(*(ND::TData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TData(*(ND::TData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_165_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_165_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_165_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_165_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_165_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_165_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_165_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_165_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_165_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TData G__TNDcLcLTData;
static int G__nd280ProjectDict_165_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TData*) (soff+(sizeof(ND::TData)*i)))->~G__TNDcLcLTData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TData*) (soff))->~G__TNDcLcLTData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_165_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TData* dest = (ND::TData*) G__getstructoffset();
   *dest = *(ND::TData*) libp->para[0].ref;
   const ND::TData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TDatum */
static int G__nd280ProjectDict_166_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDatum* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TDatum[n];
     } else {
       p = new((void*) gvp) ND::TDatum[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TDatum;
     } else {
       p = new((void*) gvp) ND::TDatum;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_166_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDatum* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TDatum(*(ND::TDatum*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TDatum(*(ND::TDatum*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_166_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TDatum::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_166_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDatum::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_166_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TDatum::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_166_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TDatum::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_166_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TDatum*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_166_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDatum::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_166_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TDatum::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_166_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TDatum::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_166_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TDatum::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TDatum G__TNDcLcLTDatum;
static int G__nd280ProjectDict_166_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TDatum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TDatum*) (soff+(sizeof(ND::TDatum)*i)))->~G__TNDcLcLTDatum();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TDatum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TDatum*) (soff))->~G__TNDcLcLTDatum();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_166_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TDatum* dest = (ND::TDatum*) G__getstructoffset();
   *dest = *(ND::TDatum*) libp->para[0].ref;
   const ND::TDatum& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TND280Context */
static int G__nd280ProjectDict_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Context* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Context[n];
     } else {
       p = new((void*) gvp) ND::TND280Context[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Context;
     } else {
       p = new((void*) gvp) ND::TND280Context;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Context));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_192_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Context* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TND280Context(*(ND::TND280Context*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TND280Context(*(ND::TND280Context*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Context));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TND280Context G__TNDcLcLTND280Context;
static int G__nd280ProjectDict_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TND280Context*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TND280Context*) (soff+(sizeof(ND::TND280Context)*i)))->~G__TNDcLcLTND280Context();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TND280Context*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TND280Context*) (soff))->~G__TNDcLcLTND280Context();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Context* dest = (ND::TND280Context*) G__getstructoffset();
   *dest = *(ND::TND280Context*) libp->para[0].ref;
   const ND::TND280Context& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TSHAHashValue */
static int G__nd280ProjectDict_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSHAHashValue* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSHAHashValue[n];
     } else {
       p = new((void*) gvp) ND::TSHAHashValue[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSHAHashValue;
     } else {
       p = new((void*) gvp) ND::TSHAHashValue;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSHAHashValue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSHAHashValue* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TSHAHashValue(*(ND::TSHAHashValue*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TSHAHashValue(*(ND::TSHAHashValue*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSHAHashValue));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TSHAHashValue G__TNDcLcLTSHAHashValue;
static int G__nd280ProjectDict_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TSHAHashValue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TSHAHashValue*) (soff+(sizeof(ND::TSHAHashValue)*i)))->~G__TNDcLcLTSHAHashValue();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TSHAHashValue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TSHAHashValue*) (soff))->~G__TNDcLcLTSHAHashValue();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSHAHashValue* dest = (ND::TSHAHashValue*) G__getstructoffset();
   *dest = *(ND::TSHAHashValue*) libp->para[0].ref;
   const ND::TSHAHashValue& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TAlignmentId */
static int G__nd280ProjectDict_195_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAlignmentId* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAlignmentId[n];
     } else {
       p = new((void*) gvp) ND::TAlignmentId[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAlignmentId;
     } else {
       p = new((void*) gvp) ND::TAlignmentId;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAlignmentId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_195_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAlignmentId* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TAlignmentId(*(ND::TAlignmentId*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TAlignmentId(*(ND::TAlignmentId*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAlignmentId));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TAlignmentId G__TNDcLcLTAlignmentId;
static int G__nd280ProjectDict_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TAlignmentId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TAlignmentId*) (soff+(sizeof(ND::TAlignmentId)*i)))->~G__TNDcLcLTAlignmentId();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TAlignmentId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TAlignmentId*) (soff))->~G__TNDcLcLTAlignmentId();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAlignmentId* dest = (ND::TAlignmentId*) G__getstructoffset();
   *dest = *(ND::TAlignmentId*) libp->para[0].ref;
   const ND::TAlignmentId& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TND280Event::Header */
static int G__nd280ProjectDict_196_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event::Header* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Event::Header[n];
     } else {
       p = new((void*) gvp) ND::TND280Event::Header[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TND280Event::Header;
     } else {
       p = new((void*) gvp) ND::TND280Event::Header;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280EventcLcLHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event::Header* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TND280Event::Header(*(ND::TND280Event::Header*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TND280Event::Header(*(ND::TND280Event::Header*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280EventcLcLHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TND280Event::Header::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::Header::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TND280Event::Header::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TND280Event::Header::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ND::TND280Event::Header*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TND280Event::Header*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TND280Event::Header*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TND280Event::Header*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::Header::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TND280Event::Header::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TND280Event::Header::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_196_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TND280Event::Header::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TND280Event::Header G__TNDcLcLTND280EventcLcLHeader;
static int G__nd280ProjectDict_196_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TND280Event::Header*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TND280Event::Header*) (soff+(sizeof(ND::TND280Event::Header)*i)))->~G__TNDcLcLTND280EventcLcLHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TND280Event::Header*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TND280Event::Header*) (soff))->~G__TNDcLcLTND280EventcLcLHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_196_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TND280Event::Header* dest = (ND::TND280Event::Header*) G__getstructoffset();
   *dest = *(ND::TND280Event::Header*) libp->para[0].ref;
   const ND::TND280Event::Header& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrueVertex */
static int G__nd280ProjectDict_197_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrueVertex[n];
     } else {
       p = new((void*) gvp) ND::TTrueVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrueVertex;
     } else {
       p = new((void*) gvp) ND::TTrueVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_197_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrueVertex(*(ND::TTrueVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrueVertex(*(ND::TTrueVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_197_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrueVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrueVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_197_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrueVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_197_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrueVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_197_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_197_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrueVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_197_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_197_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrueVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrueVertex G__TNDcLcLTTrueVertex;
static int G__nd280ProjectDict_197_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrueVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrueVertex*) (soff+(sizeof(ND::TTrueVertex)*i)))->~G__TNDcLcLTTrueVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrueVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrueVertex*) (soff))->~G__TNDcLcLTTrueVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_197_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueVertex* dest = (ND::TTrueVertex*) G__getstructoffset();
   *dest = *(ND::TTrueVertex*) libp->para[0].ref;
   const ND::TTrueVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrueParticle */
static int G__nd280ProjectDict_240_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrueParticle[n];
     } else {
       p = new((void*) gvp) ND::TTrueParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrueParticle;
     } else {
       p = new((void*) gvp) ND::TTrueParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_240_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrueParticle(*(ND::TTrueParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrueParticle(*(ND::TTrueParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_240_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrueParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_240_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_240_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrueParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_240_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrueParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_240_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrueParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_240_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_240_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrueParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_240_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrueParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_240_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrueParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrueParticle G__TNDcLcLTTrueParticle;
static int G__nd280ProjectDict_240_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrueParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrueParticle*) (soff+(sizeof(ND::TTrueParticle)*i)))->~G__TNDcLcLTTrueParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrueParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrueParticle*) (soff))->~G__TNDcLcLTTrueParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_240_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrueParticle* dest = (ND::TTrueParticle*) G__getstructoffset();
   *dest = *(ND::TTrueParticle*) libp->para[0].ref;
   const ND::TTrueParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TSubBaseObject */
static int G__nd280ProjectDict_241_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSubBaseObject[n];
     } else {
       p = new((void*) gvp) ND::TSubBaseObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSubBaseObject;
     } else {
       p = new((void*) gvp) ND::TSubBaseObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_241_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TSubBaseObject(*(ND::TSubBaseObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TSubBaseObject(*(ND::TSubBaseObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_241_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TSubBaseObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_241_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TSubBaseObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_241_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TSubBaseObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_241_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TSubBaseObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_241_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSubBaseObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_241_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_241_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSubBaseObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TSubBaseObject G__TNDcLcLTSubBaseObject;
static int G__nd280ProjectDict_241_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TSubBaseObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TSubBaseObject*) (soff+(sizeof(ND::TSubBaseObject)*i)))->~G__TNDcLcLTSubBaseObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TSubBaseObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TSubBaseObject*) (soff))->~G__TNDcLcLTSubBaseObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_241_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseObject* dest = (ND::TSubBaseObject*) G__getstructoffset();
   *dest = *(ND::TSubBaseObject*) libp->para[0].ref;
   const ND::TSubBaseObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TSubBaseShowerObject */
static int G__nd280ProjectDict_242_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseShowerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSubBaseShowerObject[n];
     } else {
       p = new((void*) gvp) ND::TSubBaseShowerObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSubBaseShowerObject;
     } else {
       p = new((void*) gvp) ND::TSubBaseShowerObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_242_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseShowerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TSubBaseShowerObject(*(ND::TSubBaseShowerObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TSubBaseShowerObject(*(ND::TSubBaseShowerObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_242_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TSubBaseShowerObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_242_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseShowerObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_242_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TSubBaseShowerObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_242_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TSubBaseShowerObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_242_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TSubBaseShowerObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_242_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseShowerObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_242_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSubBaseShowerObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_242_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSubBaseShowerObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_242_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSubBaseShowerObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TSubBaseShowerObject G__TNDcLcLTSubBaseShowerObject;
static int G__nd280ProjectDict_242_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TSubBaseShowerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TSubBaseShowerObject*) (soff+(sizeof(ND::TSubBaseShowerObject)*i)))->~G__TNDcLcLTSubBaseShowerObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TSubBaseShowerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TSubBaseShowerObject*) (soff))->~G__TNDcLcLTSubBaseShowerObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_242_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSubBaseShowerObject* dest = (ND::TSubBaseShowerObject*) G__getstructoffset();
   *dest = *(ND::TSubBaseShowerObject*) libp->para[0].ref;
   const ND::TSubBaseShowerObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::GRooTrackerVtx */
static int G__nd280ProjectDict_243_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::GRooTrackerVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::GRooTrackerVtx[n];
     } else {
       p = new((void*) gvp) ND::GRooTrackerVtx[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::GRooTrackerVtx;
     } else {
       p = new((void*) gvp) ND::GRooTrackerVtx;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_243_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::GRooTrackerVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::GRooTrackerVtx(*(ND::GRooTrackerVtx*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::GRooTrackerVtx(*(ND::GRooTrackerVtx*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_243_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::GRooTrackerVtx::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_243_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::GRooTrackerVtx::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_243_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::GRooTrackerVtx::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_243_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::GRooTrackerVtx::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_243_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::GRooTrackerVtx*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_243_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::GRooTrackerVtx::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_243_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::GRooTrackerVtx::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_243_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::GRooTrackerVtx::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_243_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::GRooTrackerVtx::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::GRooTrackerVtx G__TNDcLcLGRooTrackerVtx;
static int G__nd280ProjectDict_243_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::GRooTrackerVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::GRooTrackerVtx*) (soff+(sizeof(ND::GRooTrackerVtx)*i)))->~G__TNDcLcLGRooTrackerVtx();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::GRooTrackerVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::GRooTrackerVtx*) (soff))->~G__TNDcLcLGRooTrackerVtx();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_243_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::GRooTrackerVtx* dest = (ND::GRooTrackerVtx*) G__getstructoffset();
   *dest = *(ND::GRooTrackerVtx*) libp->para[0].ref;
   const ND::GRooTrackerVtx& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::JNuBeamFlux */
static int G__nd280ProjectDict_244_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::JNuBeamFlux* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::JNuBeamFlux[n];
     } else {
       p = new((void*) gvp) ND::JNuBeamFlux[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::JNuBeamFlux;
     } else {
       p = new((void*) gvp) ND::JNuBeamFlux;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_244_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::JNuBeamFlux* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::JNuBeamFlux(*(ND::JNuBeamFlux*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::JNuBeamFlux(*(ND::JNuBeamFlux*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_244_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::JNuBeamFlux::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_244_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::JNuBeamFlux::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_244_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::JNuBeamFlux::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_244_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::JNuBeamFlux::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_244_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::JNuBeamFlux*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_244_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::JNuBeamFlux::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_244_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::JNuBeamFlux::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_244_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::JNuBeamFlux::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_244_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::JNuBeamFlux::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::JNuBeamFlux G__TNDcLcLJNuBeamFlux;
static int G__nd280ProjectDict_244_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::JNuBeamFlux*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::JNuBeamFlux*) (soff+(sizeof(ND::JNuBeamFlux)*i)))->~G__TNDcLcLJNuBeamFlux();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::JNuBeamFlux*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::JNuBeamFlux*) (soff))->~G__TNDcLcLJNuBeamFlux();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_244_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::JNuBeamFlux* dest = (ND::JNuBeamFlux*) G__getstructoffset();
   *dest = *(ND::JNuBeamFlux*) libp->para[0].ref;
   const ND::JNuBeamFlux& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::RooTrackerVtxBase */
static int G__nd280ProjectDict_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::RooTrackerVtxBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::RooTrackerVtxBase[n];
     } else {
       p = new((void*) gvp) ND::RooTrackerVtxBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::RooTrackerVtxBase;
     } else {
       p = new((void*) gvp) ND::RooTrackerVtxBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_245_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::RooTrackerVtxBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::RooTrackerVtxBase(*(ND::RooTrackerVtxBase*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::RooTrackerVtxBase(*(ND::RooTrackerVtxBase*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_245_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::RooTrackerVtxBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_245_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::RooTrackerVtxBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_245_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::RooTrackerVtxBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_245_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::RooTrackerVtxBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_245_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::RooTrackerVtxBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_245_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::RooTrackerVtxBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_245_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::RooTrackerVtxBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_245_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::RooTrackerVtxBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_245_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::RooTrackerVtxBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::RooTrackerVtxBase G__TNDcLcLRooTrackerVtxBase;
static int G__nd280ProjectDict_245_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::RooTrackerVtxBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::RooTrackerVtxBase*) (soff+(sizeof(ND::RooTrackerVtxBase)*i)))->~G__TNDcLcLRooTrackerVtxBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::RooTrackerVtxBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::RooTrackerVtxBase*) (soff))->~G__TNDcLcLRooTrackerVtxBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_245_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::RooTrackerVtxBase* dest = (ND::RooTrackerVtxBase*) G__getstructoffset();
   *dest = *(ND::RooTrackerVtxBase*) libp->para[0].ref;
   const ND::RooTrackerVtxBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::NRooTrackerVtx */
static int G__nd280ProjectDict_247_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::NRooTrackerVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::NRooTrackerVtx[n];
     } else {
       p = new((void*) gvp) ND::NRooTrackerVtx[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::NRooTrackerVtx;
     } else {
       p = new((void*) gvp) ND::NRooTrackerVtx;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_247_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::NRooTrackerVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::NRooTrackerVtx(*(ND::NRooTrackerVtx*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::NRooTrackerVtx(*(ND::NRooTrackerVtx*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_247_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::NRooTrackerVtx::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_247_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::NRooTrackerVtx::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_247_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::NRooTrackerVtx::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_247_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::NRooTrackerVtx::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_247_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::NRooTrackerVtx*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_247_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::NRooTrackerVtx::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_247_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::NRooTrackerVtx::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_247_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::NRooTrackerVtx::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_247_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::NRooTrackerVtx::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::NRooTrackerVtx G__TNDcLcLNRooTrackerVtx;
static int G__nd280ProjectDict_247_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::NRooTrackerVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::NRooTrackerVtx*) (soff+(sizeof(ND::NRooTrackerVtx)*i)))->~G__TNDcLcLNRooTrackerVtx();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::NRooTrackerVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::NRooTrackerVtx*) (soff))->~G__TNDcLcLNRooTrackerVtx();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_247_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::NRooTrackerVtx* dest = (ND::NRooTrackerVtx*) G__getstructoffset();
   *dest = *(ND::NRooTrackerVtx*) libp->para[0].ref;
   const ND::NRooTrackerVtx& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::ToaAnalysisUtils */
static int G__nd280ProjectDict_248_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::ToaAnalysisUtils* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::ToaAnalysisUtils[n];
     } else {
       p = new((void*) gvp) ND::ToaAnalysisUtils[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::ToaAnalysisUtils;
     } else {
       p = new((void*) gvp) ND::ToaAnalysisUtils;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_248_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::ToaAnalysisUtils* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::ToaAnalysisUtils(*(ND::ToaAnalysisUtils*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::ToaAnalysisUtils(*(ND::ToaAnalysisUtils*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_248_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::ToaAnalysisUtils::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_248_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::ToaAnalysisUtils::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_248_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::ToaAnalysisUtils::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_248_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::ToaAnalysisUtils::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_248_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::ToaAnalysisUtils*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_248_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::ToaAnalysisUtils::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_248_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::ToaAnalysisUtils::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_248_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::ToaAnalysisUtils::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_248_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::ToaAnalysisUtils::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::ToaAnalysisUtils G__TNDcLcLToaAnalysisUtils;
static int G__nd280ProjectDict_248_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::ToaAnalysisUtils*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::ToaAnalysisUtils*) (soff+(sizeof(ND::ToaAnalysisUtils)*i)))->~G__TNDcLcLToaAnalysisUtils();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::ToaAnalysisUtils*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::ToaAnalysisUtils*) (soff))->~G__TNDcLcLToaAnalysisUtils();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_248_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::ToaAnalysisUtils* dest = (ND::ToaAnalysisUtils*) G__getstructoffset();
   *dest = *(ND::ToaAnalysisUtils*) libp->para[0].ref;
   const ND::ToaAnalysisUtils& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TBasicHeaderModule */
static int G__nd280ProjectDict_251_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBasicHeaderModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBasicHeaderModule[n];
     } else {
       p = new((void*) gvp) ND::TBasicHeaderModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBasicHeaderModule;
     } else {
       p = new((void*) gvp) ND::TBasicHeaderModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_251_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBasicHeaderModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TBasicHeaderModule(*(ND::TBasicHeaderModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TBasicHeaderModule(*(ND::TBasicHeaderModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_251_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TBasicHeaderModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_251_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBasicHeaderModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_251_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TBasicHeaderModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_251_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TBasicHeaderModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_251_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TBasicHeaderModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_251_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBasicHeaderModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_251_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBasicHeaderModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_251_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBasicHeaderModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_251_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBasicHeaderModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TBasicHeaderModule G__TNDcLcLTBasicHeaderModule;
static int G__nd280ProjectDict_251_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TBasicHeaderModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TBasicHeaderModule*) (soff+(sizeof(ND::TBasicHeaderModule)*i)))->~G__TNDcLcLTBasicHeaderModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TBasicHeaderModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TBasicHeaderModule*) (soff))->~G__TNDcLcLTBasicHeaderModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_251_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBasicHeaderModule* dest = (ND::TBasicHeaderModule*) G__getstructoffset();
   *dest = *(ND::TBasicHeaderModule*) libp->para[0].ref;
   const ND::TBasicHeaderModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TAnalysisHeaderModuleBase */
static int G__nd280ProjectDict_252_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisHeaderModuleBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAnalysisHeaderModuleBase[n];
     } else {
       p = new((void*) gvp) ND::TAnalysisHeaderModuleBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAnalysisHeaderModuleBase;
     } else {
       p = new((void*) gvp) ND::TAnalysisHeaderModuleBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_252_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisHeaderModuleBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TAnalysisHeaderModuleBase(*(ND::TAnalysisHeaderModuleBase*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TAnalysisHeaderModuleBase(*(ND::TAnalysisHeaderModuleBase*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_252_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TAnalysisHeaderModuleBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_252_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisHeaderModuleBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_252_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TAnalysisHeaderModuleBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_252_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TAnalysisHeaderModuleBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_252_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TAnalysisHeaderModuleBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_252_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisHeaderModuleBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_252_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TAnalysisHeaderModuleBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_252_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisHeaderModuleBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_252_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TAnalysisHeaderModuleBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TAnalysisHeaderModuleBase G__TNDcLcLTAnalysisHeaderModuleBase;
static int G__nd280ProjectDict_252_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TAnalysisHeaderModuleBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TAnalysisHeaderModuleBase*) (soff+(sizeof(ND::TAnalysisHeaderModuleBase)*i)))->~G__TNDcLcLTAnalysisHeaderModuleBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TAnalysisHeaderModuleBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TAnalysisHeaderModuleBase*) (soff))->~G__TNDcLcLTAnalysisHeaderModuleBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_252_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisHeaderModuleBase* dest = (ND::TAnalysisHeaderModuleBase*) G__getstructoffset();
   *dest = *(ND::TAnalysisHeaderModuleBase*) libp->para[0].ref;
   const ND::TAnalysisHeaderModuleBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TAnalysisModuleBase */
static int G__nd280ProjectDict_253_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisModuleBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAnalysisModuleBase[n];
     } else {
       p = new((void*) gvp) ND::TAnalysisModuleBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAnalysisModuleBase;
     } else {
       p = new((void*) gvp) ND::TAnalysisModuleBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_253_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisModuleBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TAnalysisModuleBase(*(ND::TAnalysisModuleBase*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TAnalysisModuleBase(*(ND::TAnalysisModuleBase*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_253_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TAnalysisModuleBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_253_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisModuleBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_253_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TAnalysisModuleBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_253_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TAnalysisModuleBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_253_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TAnalysisModuleBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_253_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisModuleBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_253_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TAnalysisModuleBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_253_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisModuleBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_253_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TAnalysisModuleBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TAnalysisModuleBase G__TNDcLcLTAnalysisModuleBase;
static int G__nd280ProjectDict_253_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TAnalysisModuleBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TAnalysisModuleBase*) (soff+(sizeof(ND::TAnalysisModuleBase)*i)))->~G__TNDcLcLTAnalysisModuleBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TAnalysisModuleBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TAnalysisModuleBase*) (soff))->~G__TNDcLcLTAnalysisModuleBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_253_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisModuleBase* dest = (ND::TAnalysisModuleBase*) G__getstructoffset();
   *dest = *(ND::TAnalysisModuleBase*) libp->para[0].ref;
   const ND::TAnalysisModuleBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TBasicDataQualityModule */
static int G__nd280ProjectDict_558_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBasicDataQualityModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBasicDataQualityModule[n];
     } else {
       p = new((void*) gvp) ND::TBasicDataQualityModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBasicDataQualityModule;
     } else {
       p = new((void*) gvp) ND::TBasicDataQualityModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_558_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBasicDataQualityModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TBasicDataQualityModule(*(ND::TBasicDataQualityModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TBasicDataQualityModule(*(ND::TBasicDataQualityModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_558_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TBasicDataQualityModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_558_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBasicDataQualityModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_558_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TBasicDataQualityModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_558_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TBasicDataQualityModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_558_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TBasicDataQualityModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_558_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBasicDataQualityModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_558_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBasicDataQualityModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_558_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBasicDataQualityModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_558_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBasicDataQualityModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TBasicDataQualityModule G__TNDcLcLTBasicDataQualityModule;
static int G__nd280ProjectDict_558_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TBasicDataQualityModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TBasicDataQualityModule*) (soff+(sizeof(ND::TBasicDataQualityModule)*i)))->~G__TNDcLcLTBasicDataQualityModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TBasicDataQualityModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TBasicDataQualityModule*) (soff))->~G__TNDcLcLTBasicDataQualityModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_558_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBasicDataQualityModule* dest = (ND::TBasicDataQualityModule*) G__getstructoffset();
   *dest = *(ND::TBasicDataQualityModule*) libp->para[0].ref;
   const ND::TBasicDataQualityModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTruthTrajectoriesModule */
static int G__nd280ProjectDict_559_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthTrajectoriesModule[n];
     } else {
       p = new((void*) gvp) ND::TTruthTrajectoriesModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthTrajectoriesModule;
     } else {
       p = new((void*) gvp) ND::TTruthTrajectoriesModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_559_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTruthTrajectoriesModule(*(ND::TTruthTrajectoriesModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTruthTrajectoriesModule(*(ND::TTruthTrajectoriesModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_559_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTruthTrajectoriesModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_559_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_559_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTruthTrajectoriesModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_559_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTruthTrajectoriesModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_559_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTruthTrajectoriesModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_559_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_559_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthTrajectoriesModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_559_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_559_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthTrajectoriesModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTruthTrajectoriesModule G__TNDcLcLTTruthTrajectoriesModule;
static int G__nd280ProjectDict_559_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTruthTrajectoriesModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTruthTrajectoriesModule*) (soff+(sizeof(ND::TTruthTrajectoriesModule)*i)))->~G__TNDcLcLTTruthTrajectoriesModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTruthTrajectoriesModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTruthTrajectoriesModule*) (soff))->~G__TNDcLcLTTruthTrajectoriesModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_559_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule* dest = (ND::TTruthTrajectoriesModule*) G__getstructoffset();
   *dest = *(ND::TTruthTrajectoriesModule*) libp->para[0].ref;
   const ND::TTruthTrajectoriesModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TAnalysisTruthModuleBase */
static int G__nd280ProjectDict_560_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisTruthModuleBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAnalysisTruthModuleBase[n];
     } else {
       p = new((void*) gvp) ND::TAnalysisTruthModuleBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAnalysisTruthModuleBase;
     } else {
       p = new((void*) gvp) ND::TAnalysisTruthModuleBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_560_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisTruthModuleBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TAnalysisTruthModuleBase(*(ND::TAnalysisTruthModuleBase*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TAnalysisTruthModuleBase(*(ND::TAnalysisTruthModuleBase*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_560_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TAnalysisTruthModuleBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_560_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisTruthModuleBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_560_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TAnalysisTruthModuleBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_560_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TAnalysisTruthModuleBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_560_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TAnalysisTruthModuleBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_560_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisTruthModuleBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_560_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TAnalysisTruthModuleBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_560_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisTruthModuleBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_560_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TAnalysisTruthModuleBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TAnalysisTruthModuleBase G__TNDcLcLTAnalysisTruthModuleBase;
static int G__nd280ProjectDict_560_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TAnalysisTruthModuleBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TAnalysisTruthModuleBase*) (soff+(sizeof(ND::TAnalysisTruthModuleBase)*i)))->~G__TNDcLcLTAnalysisTruthModuleBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TAnalysisTruthModuleBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TAnalysisTruthModuleBase*) (soff))->~G__TNDcLcLTAnalysisTruthModuleBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_560_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisTruthModuleBase* dest = (ND::TAnalysisTruthModuleBase*) G__getstructoffset();
   *dest = *(ND::TAnalysisTruthModuleBase*) libp->para[0].ref;
   const ND::TAnalysisTruthModuleBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTruthTrajectoriesModule::TTruthTrajectory */
static int G__nd280ProjectDict_617_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule::TTruthTrajectory* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthTrajectoriesModule::TTruthTrajectory[n];
     } else {
       p = new((void*) gvp) ND::TTruthTrajectoriesModule::TTruthTrajectory[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthTrajectoriesModule::TTruthTrajectory;
     } else {
       p = new((void*) gvp) ND::TTruthTrajectoriesModule::TTruthTrajectory;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_617_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule::TTruthTrajectory* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTruthTrajectoriesModule::TTruthTrajectory(*(ND::TTruthTrajectoriesModule::TTruthTrajectory*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTruthTrajectoriesModule::TTruthTrajectory(*(ND::TTruthTrajectoriesModule::TTruthTrajectory*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_617_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_617_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_617_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_617_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTruthTrajectoriesModule::TTruthTrajectory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_617_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTruthTrajectoriesModule::TTruthTrajectory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_617_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_617_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_617_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_617_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthTrajectoriesModule::TTruthTrajectory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTruthTrajectoriesModule::TTruthTrajectory G__TNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory;
static int G__nd280ProjectDict_617_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTruthTrajectoriesModule::TTruthTrajectory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTruthTrajectoriesModule::TTruthTrajectory*) (soff+(sizeof(ND::TTruthTrajectoriesModule::TTruthTrajectory)*i)))->~G__TNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTruthTrajectoriesModule::TTruthTrajectory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTruthTrajectoriesModule::TTruthTrajectory*) (soff))->~G__TNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_617_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthTrajectoriesModule::TTruthTrajectory* dest = (ND::TTruthTrajectoriesModule::TTruthTrajectory*) G__getstructoffset();
   *dest = *(ND::TTruthTrajectoriesModule::TTruthTrajectory*) libp->para[0].ref;
   const ND::TTruthTrajectoriesModule::TTruthTrajectory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTruthVerticesModule */
static int G__nd280ProjectDict_629_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthVerticesModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthVerticesModule[n];
     } else {
       p = new((void*) gvp) ND::TTruthVerticesModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthVerticesModule;
     } else {
       p = new((void*) gvp) ND::TTruthVerticesModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_629_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthVerticesModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTruthVerticesModule(*(ND::TTruthVerticesModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTruthVerticesModule(*(ND::TTruthVerticesModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_629_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTruthVerticesModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_629_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthVerticesModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_629_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTruthVerticesModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_629_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTruthVerticesModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_629_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTruthVerticesModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_629_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthVerticesModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_629_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthVerticesModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_629_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthVerticesModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_629_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthVerticesModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTruthVerticesModule G__TNDcLcLTTruthVerticesModule;
static int G__nd280ProjectDict_629_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTruthVerticesModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTruthVerticesModule*) (soff+(sizeof(ND::TTruthVerticesModule)*i)))->~G__TNDcLcLTTruthVerticesModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTruthVerticesModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTruthVerticesModule*) (soff))->~G__TNDcLcLTTruthVerticesModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_629_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthVerticesModule* dest = (ND::TTruthVerticesModule*) G__getstructoffset();
   *dest = *(ND::TTruthVerticesModule*) libp->para[0].ref;
   const ND::TTruthVerticesModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTruthVerticesModule::TTruthVertex */
static int G__nd280ProjectDict_630_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthVerticesModule::TTruthVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthVerticesModule::TTruthVertex[n];
     } else {
       p = new((void*) gvp) ND::TTruthVerticesModule::TTruthVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTruthVerticesModule::TTruthVertex;
     } else {
       p = new((void*) gvp) ND::TTruthVerticesModule::TTruthVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_630_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthVerticesModule::TTruthVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTruthVerticesModule::TTruthVertex(*(ND::TTruthVerticesModule::TTruthVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTruthVerticesModule::TTruthVertex(*(ND::TTruthVerticesModule::TTruthVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_630_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTruthVerticesModule::TTruthVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_630_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthVerticesModule::TTruthVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_630_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTruthVerticesModule::TTruthVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_630_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTruthVerticesModule::TTruthVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_630_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTruthVerticesModule::TTruthVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_630_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthVerticesModule::TTruthVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_630_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthVerticesModule::TTruthVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_630_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTruthVerticesModule::TTruthVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_630_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTruthVerticesModule::TTruthVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTruthVerticesModule::TTruthVertex G__TNDcLcLTTruthVerticesModulecLcLTTruthVertex;
static int G__nd280ProjectDict_630_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTruthVerticesModule::TTruthVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTruthVerticesModule::TTruthVertex*) (soff+(sizeof(ND::TTruthVerticesModule::TTruthVertex)*i)))->~G__TNDcLcLTTruthVerticesModulecLcLTTruthVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTruthVerticesModule::TTruthVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTruthVerticesModule::TTruthVertex*) (soff))->~G__TNDcLcLTTruthVerticesModulecLcLTTruthVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_630_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTruthVerticesModule::TTruthVertex* dest = (ND::TTruthVerticesModule::TTruthVertex*) G__getstructoffset();
   *dest = *(ND::TTruthVerticesModule::TTruthVertex*) libp->para[0].ref;
   const ND::TTruthVerticesModule::TTruthVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule */
static int G__nd280ProjectDict_631_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_631_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule(*(ND::TP0DReconModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule(*(ND::TP0DReconModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_631_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_631_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_631_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_631_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_631_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_631_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_631_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_631_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_631_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule G__TNDcLcLTP0DReconModule;
static int G__nd280ProjectDict_631_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule*) (soff+(sizeof(ND::TP0DReconModule)*i)))->~G__TNDcLcLTP0DReconModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule*) (soff))->~G__TNDcLcLTP0DReconModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_631_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule* dest = (ND::TP0DReconModule*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule*) libp->para[0].ref;
   const ND::TP0DReconModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TAnalysisReconModuleBase */
static int G__nd280ProjectDict_632_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisReconModuleBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAnalysisReconModuleBase[n];
     } else {
       p = new((void*) gvp) ND::TAnalysisReconModuleBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TAnalysisReconModuleBase;
     } else {
       p = new((void*) gvp) ND::TAnalysisReconModuleBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_632_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisReconModuleBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TAnalysisReconModuleBase(*(ND::TAnalysisReconModuleBase*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TAnalysisReconModuleBase(*(ND::TAnalysisReconModuleBase*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_632_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TAnalysisReconModuleBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_632_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisReconModuleBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_632_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TAnalysisReconModuleBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_632_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TAnalysisReconModuleBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_632_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TAnalysisReconModuleBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_632_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisReconModuleBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_632_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TAnalysisReconModuleBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_632_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TAnalysisReconModuleBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_632_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TAnalysisReconModuleBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TAnalysisReconModuleBase G__TNDcLcLTAnalysisReconModuleBase;
static int G__nd280ProjectDict_632_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TAnalysisReconModuleBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TAnalysisReconModuleBase*) (soff+(sizeof(ND::TAnalysisReconModuleBase)*i)))->~G__TNDcLcLTAnalysisReconModuleBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TAnalysisReconModuleBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TAnalysisReconModuleBase*) (soff))->~G__TNDcLcLTAnalysisReconModuleBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_632_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TAnalysisReconModuleBase* dest = (ND::TAnalysisReconModuleBase*) G__getstructoffset();
   *dest = *(ND::TAnalysisReconModuleBase*) libp->para[0].ref;
   const ND::TAnalysisReconModuleBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DAlgoRes */
static int G__nd280ProjectDict_637_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DAlgoRes* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DAlgoRes[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DAlgoRes[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DAlgoRes;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DAlgoRes;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_637_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DAlgoRes* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DAlgoRes(*(ND::TP0DReconModule::TP0DAlgoRes*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DAlgoRes(*(ND::TP0DReconModule::TP0DAlgoRes*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_637_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DAlgoRes::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_637_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DAlgoRes::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_637_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DAlgoRes::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_637_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DAlgoRes::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_637_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DAlgoRes*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_637_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DAlgoRes::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_637_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DAlgoRes::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_637_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DAlgoRes::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_637_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DAlgoRes::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DAlgoRes G__TNDcLcLTP0DReconModulecLcLTP0DAlgoRes;
static int G__nd280ProjectDict_637_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DAlgoRes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DAlgoRes*) (soff+(sizeof(ND::TP0DReconModule::TP0DAlgoRes)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DAlgoRes();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DAlgoRes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DAlgoRes*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DAlgoRes();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_637_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DAlgoRes* dest = (ND::TP0DReconModule::TP0DAlgoRes*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DAlgoRes*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DAlgoRes& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DVertex */
static int G__nd280ProjectDict_638_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DVertex[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DVertex;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_638_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DVertex(*(ND::TP0DReconModule::TP0DVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DVertex(*(ND::TP0DReconModule::TP0DVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_638_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_638_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_638_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_638_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_638_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_638_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_638_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_638_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_638_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DVertex G__TNDcLcLTP0DReconModulecLcLTP0DVertex;
static int G__nd280ProjectDict_638_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DVertex*) (soff+(sizeof(ND::TP0DReconModule::TP0DVertex)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DVertex*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_638_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DVertex* dest = (ND::TP0DReconModule::TP0DVertex*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DVertex*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DParticle */
static int G__nd280ProjectDict_639_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DParticle[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DParticle;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_639_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DParticle(*(ND::TP0DReconModule::TP0DParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DParticle(*(ND::TP0DReconModule::TP0DParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_639_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_639_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_639_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_639_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_639_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_639_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_639_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_639_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_639_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DParticle G__TNDcLcLTP0DReconModulecLcLTP0DParticle;
static int G__nd280ProjectDict_639_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DParticle*) (soff+(sizeof(ND::TP0DReconModule::TP0DParticle)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DParticle*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_639_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DParticle* dest = (ND::TP0DReconModule::TP0DParticle*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DParticle*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DShower */
static int G__nd280ProjectDict_640_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DShower[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DShower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DShower;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DShower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_640_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DShower(*(ND::TP0DReconModule::TP0DShower*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DShower(*(ND::TP0DReconModule::TP0DShower*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_640_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DShower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_640_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DShower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_640_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DShower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_640_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DShower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_640_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DShower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_640_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DShower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_640_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DShower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_640_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DShower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_640_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DShower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DShower G__TNDcLcLTP0DReconModulecLcLTP0DShower;
static int G__nd280ProjectDict_640_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DShower*) (soff+(sizeof(ND::TP0DReconModule::TP0DShower)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DShower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DShower*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DShower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_640_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DShower* dest = (ND::TP0DReconModule::TP0DShower*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DShower*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DShower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DTrack */
static int G__nd280ProjectDict_641_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DTrack[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DTrack;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_641_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DTrack(*(ND::TP0DReconModule::TP0DTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DTrack(*(ND::TP0DReconModule::TP0DTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_641_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_641_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_641_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_641_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_641_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_641_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_641_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_641_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_641_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DTrack G__TNDcLcLTP0DReconModulecLcLTP0DTrack;
static int G__nd280ProjectDict_641_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DTrack*) (soff+(sizeof(ND::TP0DReconModule::TP0DTrack)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DTrack*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_641_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DTrack* dest = (ND::TP0DReconModule::TP0DTrack*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DTrack*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DNode */
static int G__nd280ProjectDict_642_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DNode[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DNode[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DNode;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DNode;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_642_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DNode(*(ND::TP0DReconModule::TP0DNode*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DNode(*(ND::TP0DReconModule::TP0DNode*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_642_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DNode::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_642_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DNode::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_642_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DNode::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_642_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DNode::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_642_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DNode*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_642_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DNode::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_642_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DNode::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_642_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DNode::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_642_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DNode::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DNode G__TNDcLcLTP0DReconModulecLcLTP0DNode;
static int G__nd280ProjectDict_642_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DNode*) (soff+(sizeof(ND::TP0DReconModule::TP0DNode)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DNode();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DNode*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DNode();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_642_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DNode* dest = (ND::TP0DReconModule::TP0DNode*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DNode*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DNode& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DHit */
static int G__nd280ProjectDict_643_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DHit[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DHit;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_643_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DHit(*(ND::TP0DReconModule::TP0DHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DHit(*(ND::TP0DReconModule::TP0DHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_643_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_643_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_643_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_643_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_643_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_643_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_643_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_643_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_643_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DHit G__TNDcLcLTP0DReconModulecLcLTP0DHit;
static int G__nd280ProjectDict_643_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DHit*) (soff+(sizeof(ND::TP0DReconModule::TP0DHit)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DHit*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_643_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DHit* dest = (ND::TP0DReconModule::TP0DHit*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DHit*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DReconModule::TP0DCluster */
static int G__nd280ProjectDict_644_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DCluster[n];
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DReconModule::TP0DCluster;
     } else {
       p = new((void*) gvp) ND::TP0DReconModule::TP0DCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_644_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DReconModule::TP0DCluster(*(ND::TP0DReconModule::TP0DCluster*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DReconModule::TP0DCluster(*(ND::TP0DReconModule::TP0DCluster*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_644_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DReconModule::TP0DCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_644_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_644_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DReconModule::TP0DCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_644_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DReconModule::TP0DCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_644_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DReconModule::TP0DCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_644_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_644_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_644_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DReconModule::TP0DCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_644_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DReconModule::TP0DCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DReconModule::TP0DCluster G__TNDcLcLTP0DReconModulecLcLTP0DCluster;
static int G__nd280ProjectDict_644_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DReconModule::TP0DCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DReconModule::TP0DCluster*) (soff+(sizeof(ND::TP0DReconModule::TP0DCluster)*i)))->~G__TNDcLcLTP0DReconModulecLcLTP0DCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DReconModule::TP0DCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DReconModule::TP0DCluster*) (soff))->~G__TNDcLcLTP0DReconModulecLcLTP0DCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_644_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DReconModule::TP0DCluster* dest = (ND::TP0DReconModule::TP0DCluster*) G__getstructoffset();
   *dest = *(ND::TP0DReconModule::TP0DCluster*) libp->para[0].ref;
   const ND::TP0DReconModule::TP0DCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DECALReconModule */
static int G__nd280ProjectDict_669_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule[n];
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule;
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_669_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DECALReconModule(*(ND::TP0DECALReconModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DECALReconModule(*(ND::TP0DECALReconModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_669_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DECALReconModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_669_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_669_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DECALReconModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_669_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DECALReconModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_669_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DECALReconModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_669_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_669_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_669_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_669_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DECALReconModule G__TNDcLcLTP0DECALReconModule;
static int G__nd280ProjectDict_669_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DECALReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DECALReconModule*) (soff+(sizeof(ND::TP0DECALReconModule)*i)))->~G__TNDcLcLTP0DECALReconModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DECALReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DECALReconModule*) (soff))->~G__TNDcLcLTP0DECALReconModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_669_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule* dest = (ND::TP0DECALReconModule*) G__getstructoffset();
   *dest = *(ND::TP0DECALReconModule*) libp->para[0].ref;
   const ND::TP0DECALReconModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DECALReconModule::TP0DECALReconTrack */
static int G__nd280ProjectDict_670_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule::TP0DECALReconTrack[n];
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule::TP0DECALReconTrack;
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_670_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DECALReconModule::TP0DECALReconTrack(*(ND::TP0DECALReconModule::TP0DECALReconTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconTrack(*(ND::TP0DECALReconModule::TP0DECALReconTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_670_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_670_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_670_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_670_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DECALReconModule::TP0DECALReconTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_670_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DECALReconModule::TP0DECALReconTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_670_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_670_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_670_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_670_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::TP0DECALReconTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DECALReconModule::TP0DECALReconTrack G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack;
static int G__nd280ProjectDict_670_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DECALReconModule::TP0DECALReconTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DECALReconModule::TP0DECALReconTrack*) (soff+(sizeof(ND::TP0DECALReconModule::TP0DECALReconTrack)*i)))->~G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DECALReconModule::TP0DECALReconTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DECALReconModule::TP0DECALReconTrack*) (soff))->~G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_670_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconTrack* dest = (ND::TP0DECALReconModule::TP0DECALReconTrack*) G__getstructoffset();
   *dest = *(ND::TP0DECALReconModule::TP0DECALReconTrack*) libp->para[0].ref;
   const ND::TP0DECALReconModule::TP0DECALReconTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TP0DECALReconModule::TP0DECALReconShower */
static int G__nd280ProjectDict_671_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule::TP0DECALReconShower[n];
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconShower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TP0DECALReconModule::TP0DECALReconShower;
     } else {
       p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconShower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_671_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TP0DECALReconModule::TP0DECALReconShower(*(ND::TP0DECALReconModule::TP0DECALReconShower*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TP0DECALReconModule::TP0DECALReconShower(*(ND::TP0DECALReconModule::TP0DECALReconShower*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_671_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TP0DECALReconModule::TP0DECALReconShower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_671_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconShower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_671_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TP0DECALReconModule::TP0DECALReconShower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_671_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TP0DECALReconModule::TP0DECALReconShower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_671_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TP0DECALReconModule::TP0DECALReconShower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_671_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconShower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_671_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::TP0DECALReconShower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_671_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TP0DECALReconModule::TP0DECALReconShower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_671_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TP0DECALReconModule::TP0DECALReconShower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TP0DECALReconModule::TP0DECALReconShower G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower;
static int G__nd280ProjectDict_671_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TP0DECALReconModule::TP0DECALReconShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TP0DECALReconModule::TP0DECALReconShower*) (soff+(sizeof(ND::TP0DECALReconModule::TP0DECALReconShower)*i)))->~G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TP0DECALReconModule::TP0DECALReconShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TP0DECALReconModule::TP0DECALReconShower*) (soff))->~G__TNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_671_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TP0DECALReconModule::TP0DECALReconShower* dest = (ND::TP0DECALReconModule::TP0DECALReconShower*) G__getstructoffset();
   *dest = *(ND::TP0DECALReconModule::TP0DECALReconShower*) libp->para[0].ref;
   const ND::TP0DECALReconModule::TP0DECALReconShower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALReconModule */
static int G__nd280ProjectDict_672_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule;
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_672_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALReconModule(*(ND::TTrackerECALReconModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALReconModule(*(ND::TTrackerECALReconModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_672_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALReconModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_672_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_672_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALReconModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_672_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALReconModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_672_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALReconModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_672_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_672_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_672_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_672_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALReconModule G__TNDcLcLTTrackerECALReconModule;
static int G__nd280ProjectDict_672_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALReconModule*) (soff+(sizeof(ND::TTrackerECALReconModule)*i)))->~G__TNDcLcLTTrackerECALReconModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALReconModule*) (soff))->~G__TNDcLcLTTrackerECALReconModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_672_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule* dest = (ND::TTrackerECALReconModule*) G__getstructoffset();
   *dest = *(ND::TTrackerECALReconModule*) libp->para[0].ref;
   const ND::TTrackerECALReconModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALReconModule::TECALReconObject */
static int G__nd280ProjectDict_673_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconObject[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconObject;
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_673_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALReconModule::TECALReconObject(*(ND::TTrackerECALReconModule::TECALReconObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconObject(*(ND::TTrackerECALReconModule::TECALReconObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_673_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALReconModule::TECALReconObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_673_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_673_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALReconModule::TECALReconObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_673_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALReconModule::TECALReconObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_673_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALReconModule::TECALReconObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_673_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_673_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_673_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_673_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALReconModule::TECALReconObject G__TNDcLcLTTrackerECALReconModulecLcLTECALReconObject;
static int G__nd280ProjectDict_673_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALReconModule::TECALReconObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALReconModule::TECALReconObject*) (soff+(sizeof(ND::TTrackerECALReconModule::TECALReconObject)*i)))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALReconModule::TECALReconObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALReconModule::TECALReconObject*) (soff))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_673_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconObject* dest = (ND::TTrackerECALReconModule::TECALReconObject*) G__getstructoffset();
   *dest = *(ND::TTrackerECALReconModule::TECALReconObject*) libp->para[0].ref;
   const ND::TTrackerECALReconModule::TECALReconObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALReconModule::TECALReconTrack */
static int G__nd280ProjectDict_674_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconTrack[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconTrack;
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_674_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALReconModule::TECALReconTrack(*(ND::TTrackerECALReconModule::TECALReconTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconTrack(*(ND::TTrackerECALReconModule::TECALReconTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_674_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALReconModule::TECALReconTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_674_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_674_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALReconModule::TECALReconTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_674_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALReconModule::TECALReconTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_674_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALReconModule::TECALReconTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_674_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_674_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_674_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_674_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALReconModule::TECALReconTrack G__TNDcLcLTTrackerECALReconModulecLcLTECALReconTrack;
static int G__nd280ProjectDict_674_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALReconModule::TECALReconTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALReconModule::TECALReconTrack*) (soff+(sizeof(ND::TTrackerECALReconModule::TECALReconTrack)*i)))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALReconModule::TECALReconTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALReconModule::TECALReconTrack*) (soff))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_674_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconTrack* dest = (ND::TTrackerECALReconModule::TECALReconTrack*) G__getstructoffset();
   *dest = *(ND::TTrackerECALReconModule::TECALReconTrack*) libp->para[0].ref;
   const ND::TTrackerECALReconModule::TECALReconTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALReconModule::TECALReconShower */
static int G__nd280ProjectDict_675_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconShower[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconShower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconShower;
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconShower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_675_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALReconModule::TECALReconShower(*(ND::TTrackerECALReconModule::TECALReconShower*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconShower(*(ND::TTrackerECALReconModule::TECALReconShower*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_675_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALReconModule::TECALReconShower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_675_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconShower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_675_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALReconModule::TECALReconShower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_675_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALReconModule::TECALReconShower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_675_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALReconModule::TECALReconShower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_675_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconShower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_675_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconShower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_675_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconShower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_675_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconShower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALReconModule::TECALReconShower G__TNDcLcLTTrackerECALReconModulecLcLTECALReconShower;
static int G__nd280ProjectDict_675_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALReconModule::TECALReconShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALReconModule::TECALReconShower*) (soff+(sizeof(ND::TTrackerECALReconModule::TECALReconShower)*i)))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconShower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALReconModule::TECALReconShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALReconModule::TECALReconShower*) (soff))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconShower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_675_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconShower* dest = (ND::TTrackerECALReconModule::TECALReconShower*) G__getstructoffset();
   *dest = *(ND::TTrackerECALReconModule::TECALReconShower*) libp->para[0].ref;
   const ND::TTrackerECALReconModule::TECALReconShower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALReconModule::TECALReconCluster */
static int G__nd280ProjectDict_676_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconCluster[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconCluster;
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_676_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALReconModule::TECALReconCluster(*(ND::TTrackerECALReconModule::TECALReconCluster*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconCluster(*(ND::TTrackerECALReconModule::TECALReconCluster*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_676_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALReconModule::TECALReconCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_676_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_676_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALReconModule::TECALReconCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_676_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALReconModule::TECALReconCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_676_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALReconModule::TECALReconCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_676_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_676_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_676_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_676_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALReconModule::TECALReconCluster G__TNDcLcLTTrackerECALReconModulecLcLTECALReconCluster;
static int G__nd280ProjectDict_676_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALReconModule::TECALReconCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALReconModule::TECALReconCluster*) (soff+(sizeof(ND::TTrackerECALReconModule::TECALReconCluster)*i)))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALReconModule::TECALReconCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALReconModule::TECALReconCluster*) (soff))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_676_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconCluster* dest = (ND::TTrackerECALReconModule::TECALReconCluster*) G__getstructoffset();
   *dest = *(ND::TTrackerECALReconModule::TECALReconCluster*) libp->para[0].ref;
   const ND::TTrackerECALReconModule::TECALReconCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALReconModule::TECALReconUnmatchedObject */
static int G__nd280ProjectDict_677_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconUnmatchedObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconUnmatchedObject[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconUnmatchedObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALReconModule::TECALReconUnmatchedObject;
     } else {
       p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconUnmatchedObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_677_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconUnmatchedObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALReconModule::TECALReconUnmatchedObject(*(ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALReconModule::TECALReconUnmatchedObject(*(ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_677_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_677_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_677_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_677_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_677_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_677_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_677_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_677_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_677_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALReconModule::TECALReconUnmatchedObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALReconModule::TECALReconUnmatchedObject G__TNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject;
static int G__nd280ProjectDict_677_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) (soff+(sizeof(ND::TTrackerECALReconModule::TECALReconUnmatchedObject)*i)))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) (soff))->~G__TNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_677_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALReconModule::TECALReconUnmatchedObject* dest = (ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) G__getstructoffset();
   *dest = *(ND::TTrackerECALReconModule::TECALReconUnmatchedObject*) libp->para[0].ref;
   const ND::TTrackerECALReconModule::TECALReconUnmatchedObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerECALPi0ReconModule */
static int G__nd280ProjectDict_678_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALPi0ReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALPi0ReconModule[n];
     } else {
       p = new((void*) gvp) ND::TTrackerECALPi0ReconModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerECALPi0ReconModule;
     } else {
       p = new((void*) gvp) ND::TTrackerECALPi0ReconModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_678_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALPi0ReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerECALPi0ReconModule(*(ND::TTrackerECALPi0ReconModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerECALPi0ReconModule(*(ND::TTrackerECALPi0ReconModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_678_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerECALPi0ReconModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_678_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALPi0ReconModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_678_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerECALPi0ReconModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_678_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerECALPi0ReconModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_678_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerECALPi0ReconModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_678_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALPi0ReconModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_678_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALPi0ReconModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_678_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerECALPi0ReconModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_678_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerECALPi0ReconModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerECALPi0ReconModule G__TNDcLcLTTrackerECALPi0ReconModule;
static int G__nd280ProjectDict_678_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerECALPi0ReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerECALPi0ReconModule*) (soff+(sizeof(ND::TTrackerECALPi0ReconModule)*i)))->~G__TNDcLcLTTrackerECALPi0ReconModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerECALPi0ReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerECALPi0ReconModule*) (soff))->~G__TNDcLcLTTrackerECALPi0ReconModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_678_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerECALPi0ReconModule* dest = (ND::TTrackerECALPi0ReconModule*) G__getstructoffset();
   *dest = *(ND::TTrackerECALPi0ReconModule*) libp->para[0].ref;
   const ND::TTrackerECALPi0ReconModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule */
static int G__nd280ProjectDict_679_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_679_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule(*(ND::TGlobalReconModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule(*(ND::TGlobalReconModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_679_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_679_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_679_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_679_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_679_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_679_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_679_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_679_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_679_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule G__TNDcLcLTGlobalReconModule;
static int G__nd280ProjectDict_679_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule*) (soff+(sizeof(ND::TGlobalReconModule)*i)))->~G__TNDcLcLTGlobalReconModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule*) (soff))->~G__TNDcLcLTGlobalReconModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_679_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule* dest = (ND::TGlobalReconModule*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule*) libp->para[0].ref;
   const ND::TGlobalReconModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TGlobalVertex */
static int G__nd280ProjectDict_680_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalVertex[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalVertex;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_680_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TGlobalVertex(*(ND::TGlobalReconModule::TGlobalVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TGlobalVertex(*(ND::TGlobalReconModule::TGlobalVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_680_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TGlobalVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_680_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_680_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TGlobalVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_680_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TGlobalVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_680_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TGlobalVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_680_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_680_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_680_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_680_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TGlobalVertex G__TNDcLcLTGlobalReconModulecLcLTGlobalVertex;
static int G__nd280ProjectDict_680_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TGlobalVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TGlobalVertex*) (soff+(sizeof(ND::TGlobalReconModule::TGlobalVertex)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TGlobalVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TGlobalVertex*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_680_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalVertex* dest = (ND::TGlobalReconModule::TGlobalVertex*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TGlobalVertex*) libp->para[0].ref;
   const ND::TGlobalReconModule::TGlobalVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TVertexConstituent */
static int G__nd280ProjectDict_681_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TVertexConstituent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TVertexConstituent[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TVertexConstituent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TVertexConstituent;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TVertexConstituent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_681_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TVertexConstituent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TVertexConstituent(*(ND::TGlobalReconModule::TVertexConstituent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TVertexConstituent(*(ND::TGlobalReconModule::TVertexConstituent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_681_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TVertexConstituent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_681_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TVertexConstituent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_681_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TVertexConstituent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_681_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TVertexConstituent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_681_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TVertexConstituent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_681_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TVertexConstituent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_681_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TVertexConstituent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_681_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TVertexConstituent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_681_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TVertexConstituent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TVertexConstituent G__TNDcLcLTGlobalReconModulecLcLTVertexConstituent;
static int G__nd280ProjectDict_681_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TVertexConstituent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TVertexConstituent*) (soff+(sizeof(ND::TGlobalReconModule::TVertexConstituent)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTVertexConstituent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TVertexConstituent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TVertexConstituent*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTVertexConstituent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_681_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TVertexConstituent* dest = (ND::TGlobalReconModule::TVertexConstituent*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TVertexConstituent*) libp->para[0].ref;
   const ND::TGlobalReconModule::TVertexConstituent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TFgdCluster */
static int G__nd280ProjectDict_682_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFgdCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TFgdCluster[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TFgdCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TFgdCluster;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TFgdCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_682_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFgdCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TFgdCluster(*(ND::TGlobalReconModule::TFgdCluster*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TFgdCluster(*(ND::TGlobalReconModule::TFgdCluster*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_682_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TFgdCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_682_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFgdCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_682_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TFgdCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_682_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TFgdCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_682_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TFgdCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_682_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFgdCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_682_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TFgdCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_682_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFgdCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_682_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TFgdCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TFgdCluster G__TNDcLcLTGlobalReconModulecLcLTFgdCluster;
static int G__nd280ProjectDict_682_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TFgdCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TFgdCluster*) (soff+(sizeof(ND::TGlobalReconModule::TFgdCluster)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTFgdCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TFgdCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TFgdCluster*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTFgdCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_682_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFgdCluster* dest = (ND::TGlobalReconModule::TFgdCluster*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TFgdCluster*) libp->para[0].ref;
   const ND::TGlobalReconModule::TFgdCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TFgdTimeBin */
static int G__nd280ProjectDict_683_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFgdTimeBin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TFgdTimeBin[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TFgdTimeBin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TFgdTimeBin;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TFgdTimeBin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_683_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFgdTimeBin* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TFgdTimeBin(*(ND::TGlobalReconModule::TFgdTimeBin*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TFgdTimeBin(*(ND::TGlobalReconModule::TFgdTimeBin*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_683_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TFgdTimeBin::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_683_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFgdTimeBin::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_683_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TFgdTimeBin::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_683_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TFgdTimeBin::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_683_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TFgdTimeBin*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_683_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFgdTimeBin::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_683_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TFgdTimeBin::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_683_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFgdTimeBin::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_683_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TFgdTimeBin::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TFgdTimeBin G__TNDcLcLTGlobalReconModulecLcLTFgdTimeBin;
static int G__nd280ProjectDict_683_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TFgdTimeBin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TFgdTimeBin*) (soff+(sizeof(ND::TGlobalReconModule::TFgdTimeBin)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTFgdTimeBin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TFgdTimeBin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TFgdTimeBin*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTFgdTimeBin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_683_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFgdTimeBin* dest = (ND::TGlobalReconModule::TFgdTimeBin*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TFgdTimeBin*) libp->para[0].ref;
   const ND::TGlobalReconModule::TFgdTimeBin& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TOutermostHits */
static int G__nd280ProjectDict_684_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TOutermostHits* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TOutermostHits[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TOutermostHits[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TOutermostHits;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TOutermostHits;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_684_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TOutermostHits* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TOutermostHits(*(ND::TGlobalReconModule::TOutermostHits*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TOutermostHits(*(ND::TGlobalReconModule::TOutermostHits*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_684_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TOutermostHits::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_684_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TOutermostHits::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_684_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TOutermostHits::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_684_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TOutermostHits::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_684_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TOutermostHits*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_684_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TOutermostHits::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_684_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TOutermostHits::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_684_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TOutermostHits::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_684_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TOutermostHits::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TOutermostHits G__TNDcLcLTGlobalReconModulecLcLTOutermostHits;
static int G__nd280ProjectDict_684_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TOutermostHits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TOutermostHits*) (soff+(sizeof(ND::TGlobalReconModule::TOutermostHits)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTOutermostHits();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TOutermostHits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TOutermostHits*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTOutermostHits();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_684_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TOutermostHits* dest = (ND::TGlobalReconModule::TOutermostHits*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TOutermostHits*) libp->para[0].ref;
   const ND::TGlobalReconModule::TOutermostHits& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TGlobalHit */
static int G__nd280ProjectDict_685_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalHit[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalHit;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_685_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TGlobalHit(*(ND::TGlobalReconModule::TGlobalHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TGlobalHit(*(ND::TGlobalReconModule::TGlobalHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_685_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TGlobalHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_685_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_685_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TGlobalHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_685_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TGlobalHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_685_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TGlobalHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_685_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_685_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_685_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_685_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TGlobalHit G__TNDcLcLTGlobalReconModulecLcLTGlobalHit;
static int G__nd280ProjectDict_685_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TGlobalHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TGlobalHit*) (soff+(sizeof(ND::TGlobalReconModule::TGlobalHit)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TGlobalHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TGlobalHit*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_685_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalHit* dest = (ND::TGlobalReconModule::TGlobalHit*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TGlobalHit*) libp->para[0].ref;
   const ND::TGlobalReconModule::TGlobalHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TGlobalPID */
static int G__nd280ProjectDict_686_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalPID[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPID[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalPID;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPID;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_686_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TGlobalPID(*(ND::TGlobalReconModule::TGlobalPID*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPID(*(ND::TGlobalReconModule::TGlobalPID*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_686_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TGlobalPID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_686_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_686_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TGlobalPID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_686_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TGlobalPID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_686_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TGlobalPID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_686_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_686_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalPID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_686_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_686_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalPID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TGlobalPID G__TNDcLcLTGlobalReconModulecLcLTGlobalPID;
static int G__nd280ProjectDict_686_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TGlobalPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TGlobalPID*) (soff+(sizeof(ND::TGlobalReconModule::TGlobalPID)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalPID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TGlobalPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TGlobalPID*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalPID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_686_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPID* dest = (ND::TGlobalReconModule::TGlobalPID*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TGlobalPID*) libp->para[0].ref;
   const ND::TGlobalReconModule::TGlobalPID& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TTPCObject */
static int G__nd280ProjectDict_687_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTPCObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTPCObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTPCObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTPCObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_687_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TTPCObject(*(ND::TGlobalReconModule::TTPCObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TTPCObject(*(ND::TGlobalReconModule::TTPCObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_687_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TTPCObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_687_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_687_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TTPCObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_687_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TTPCObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_687_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TTPCObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_687_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_687_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTPCObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_687_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_687_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTPCObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TTPCObject G__TNDcLcLTGlobalReconModulecLcLTTPCObject;
static int G__nd280ProjectDict_687_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TTPCObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TTPCObject*) (soff+(sizeof(ND::TGlobalReconModule::TTPCObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTTPCObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TTPCObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TTPCObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTTPCObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_687_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCObject* dest = (ND::TGlobalReconModule::TTPCObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TTPCObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TTPCObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TFGDObject */
static int G__nd280ProjectDict_688_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFGDObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TFGDObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TFGDObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TFGDObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TFGDObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_688_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFGDObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TFGDObject(*(ND::TGlobalReconModule::TFGDObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TFGDObject(*(ND::TGlobalReconModule::TFGDObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_688_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TFGDObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_688_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFGDObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_688_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TFGDObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_688_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TFGDObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_688_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TFGDObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_688_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFGDObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_688_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TFGDObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_688_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TFGDObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_688_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TFGDObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TFGDObject G__TNDcLcLTGlobalReconModulecLcLTFGDObject;
static int G__nd280ProjectDict_688_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TFGDObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TFGDObject*) (soff+(sizeof(ND::TGlobalReconModule::TFGDObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTFGDObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TFGDObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TFGDObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTFGDObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_688_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TFGDObject* dest = (ND::TGlobalReconModule::TFGDObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TFGDObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TFGDObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TECALObject */
static int G__nd280ProjectDict_689_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TECALObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TECALObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TECALObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TECALObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TECALObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_689_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TECALObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TECALObject(*(ND::TGlobalReconModule::TECALObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TECALObject(*(ND::TGlobalReconModule::TECALObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_689_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TECALObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_689_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TECALObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_689_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TECALObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_689_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TECALObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_689_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TECALObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_689_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TECALObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_689_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TECALObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_689_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TECALObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_689_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TECALObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TECALObject G__TNDcLcLTGlobalReconModulecLcLTECALObject;
static int G__nd280ProjectDict_689_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TECALObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TECALObject*) (soff+(sizeof(ND::TGlobalReconModule::TECALObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTECALObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TECALObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TECALObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTECALObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_689_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TECALObject* dest = (ND::TGlobalReconModule::TECALObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TECALObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TECALObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TP0DObject */
static int G__nd280ProjectDict_690_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TP0DObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TP0DObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TP0DObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TP0DObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TP0DObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_690_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TP0DObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TP0DObject(*(ND::TGlobalReconModule::TP0DObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TP0DObject(*(ND::TGlobalReconModule::TP0DObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_690_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TP0DObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_690_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TP0DObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_690_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TP0DObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_690_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TP0DObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_690_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TP0DObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_690_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TP0DObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_690_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TP0DObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_690_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TP0DObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_690_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TP0DObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TP0DObject G__TNDcLcLTGlobalReconModulecLcLTP0DObject;
static int G__nd280ProjectDict_690_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TP0DObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TP0DObject*) (soff+(sizeof(ND::TGlobalReconModule::TP0DObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTP0DObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TP0DObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TP0DObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTP0DObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_690_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TP0DObject* dest = (ND::TGlobalReconModule::TP0DObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TP0DObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TP0DObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TSMRDObject */
static int G__nd280ProjectDict_691_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TSMRDObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TSMRDObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TSMRDObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TSMRDObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_691_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TSMRDObject(*(ND::TGlobalReconModule::TSMRDObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TSMRDObject(*(ND::TGlobalReconModule::TSMRDObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_691_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TSMRDObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_691_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_691_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TSMRDObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_691_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TSMRDObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_691_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TSMRDObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_691_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_691_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TSMRDObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_691_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_691_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TSMRDObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TSMRDObject G__TNDcLcLTGlobalReconModulecLcLTSMRDObject;
static int G__nd280ProjectDict_691_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TSMRDObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TSMRDObject*) (soff+(sizeof(ND::TGlobalReconModule::TSMRDObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTSMRDObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TSMRDObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TSMRDObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTSMRDObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_691_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDObject* dest = (ND::TGlobalReconModule::TSMRDObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TSMRDObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TSMRDObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TTrackerObject */
static int G__nd280ProjectDict_692_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTrackerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTrackerObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTrackerObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTrackerObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTrackerObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_692_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTrackerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TTrackerObject(*(ND::TGlobalReconModule::TTrackerObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TTrackerObject(*(ND::TGlobalReconModule::TTrackerObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_692_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TTrackerObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_692_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTrackerObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_692_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TTrackerObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_692_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TTrackerObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_692_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TTrackerObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_692_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTrackerObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_692_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTrackerObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_692_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTrackerObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_692_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTrackerObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TTrackerObject G__TNDcLcLTGlobalReconModulecLcLTTrackerObject;
static int G__nd280ProjectDict_692_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TTrackerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TTrackerObject*) (soff+(sizeof(ND::TGlobalReconModule::TTrackerObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTTrackerObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TTrackerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TTrackerObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTTrackerObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_692_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTrackerObject* dest = (ND::TGlobalReconModule::TTrackerObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TTrackerObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TTrackerObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TGlobalPIDAlternate */
static int G__nd280ProjectDict_693_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPIDAlternate* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalPIDAlternate[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPIDAlternate[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TGlobalPIDAlternate;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPIDAlternate;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_693_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPIDAlternate* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TGlobalPIDAlternate(*(ND::TGlobalReconModule::TGlobalPIDAlternate*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TGlobalPIDAlternate(*(ND::TGlobalReconModule::TGlobalPIDAlternate*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_693_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_693_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_693_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_693_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TGlobalPIDAlternate::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_693_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TGlobalPIDAlternate*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_693_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_693_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_693_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_693_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TGlobalPIDAlternate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TGlobalPIDAlternate G__TNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate;
static int G__nd280ProjectDict_693_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TGlobalPIDAlternate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TGlobalPIDAlternate*) (soff+(sizeof(ND::TGlobalReconModule::TGlobalPIDAlternate)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TGlobalPIDAlternate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TGlobalPIDAlternate*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_693_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TGlobalPIDAlternate* dest = (ND::TGlobalReconModule::TGlobalPIDAlternate*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TGlobalPIDAlternate*) libp->para[0].ref;
   const ND::TGlobalReconModule::TGlobalPIDAlternate& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TTPCOtherObject */
static int G__nd280ProjectDict_694_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCOtherObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTPCOtherObject[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTPCOtherObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TTPCOtherObject;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TTPCOtherObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_694_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCOtherObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TTPCOtherObject(*(ND::TGlobalReconModule::TTPCOtherObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TTPCOtherObject(*(ND::TGlobalReconModule::TTPCOtherObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_694_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TTPCOtherObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_694_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCOtherObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_694_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TTPCOtherObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_694_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TTPCOtherObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_694_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TTPCOtherObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_694_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCOtherObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_694_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTPCOtherObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_694_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TTPCOtherObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_694_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TTPCOtherObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TTPCOtherObject G__TNDcLcLTGlobalReconModulecLcLTTPCOtherObject;
static int G__nd280ProjectDict_694_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TTPCOtherObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TTPCOtherObject*) (soff+(sizeof(ND::TGlobalReconModule::TTPCOtherObject)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTTPCOtherObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TTPCOtherObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TTPCOtherObject*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTTPCOtherObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_694_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TTPCOtherObject* dest = (ND::TGlobalReconModule::TTPCOtherObject*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TTPCOtherObject*) libp->para[0].ref;
   const ND::TGlobalReconModule::TTPCOtherObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGlobalReconModule::TSMRDHit */
static int G__nd280ProjectDict_695_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TSMRDHit[n];
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TSMRDHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGlobalReconModule::TSMRDHit;
     } else {
       p = new((void*) gvp) ND::TGlobalReconModule::TSMRDHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_695_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGlobalReconModule::TSMRDHit(*(ND::TGlobalReconModule::TSMRDHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGlobalReconModule::TSMRDHit(*(ND::TGlobalReconModule::TSMRDHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_695_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGlobalReconModule::TSMRDHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_695_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_695_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGlobalReconModule::TSMRDHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_695_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGlobalReconModule::TSMRDHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_695_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGlobalReconModule::TSMRDHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_695_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_695_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TSMRDHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_695_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGlobalReconModule::TSMRDHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_695_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGlobalReconModule::TSMRDHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGlobalReconModule::TSMRDHit G__TNDcLcLTGlobalReconModulecLcLTSMRDHit;
static int G__nd280ProjectDict_695_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGlobalReconModule::TSMRDHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGlobalReconModule::TSMRDHit*) (soff+(sizeof(ND::TGlobalReconModule::TSMRDHit)*i)))->~G__TNDcLcLTGlobalReconModulecLcLTSMRDHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGlobalReconModule::TSMRDHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGlobalReconModule::TSMRDHit*) (soff))->~G__TNDcLcLTGlobalReconModulecLcLTSMRDHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_695_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGlobalReconModule::TSMRDHit* dest = (ND::TGlobalReconModule::TSMRDHit*) G__getstructoffset();
   *dest = *(ND::TGlobalReconModule::TSMRDHit*) libp->para[0].ref;
   const ND::TGlobalReconModule::TSMRDHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule */
static int G__nd280ProjectDict_696_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_696_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule(*(ND::TTrackerReconModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule(*(ND::TTrackerReconModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_696_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_696_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_696_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_696_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_696_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_696_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_696_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_696_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_696_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule G__TNDcLcLTTrackerReconModule;
static int G__nd280ProjectDict_696_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule*) (soff+(sizeof(ND::TTrackerReconModule)*i)))->~G__TNDcLcLTTrackerReconModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule*) (soff))->~G__TNDcLcLTTrackerReconModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_696_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule* dest = (ND::TTrackerReconModule*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule*) libp->para[0].ref;
   const ND::TTrackerReconModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTrackerVertex */
static int G__nd280ProjectDict_697_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerVertex[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerVertex;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_697_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrackerVertex(*(ND::TTrackerReconModule::TTrackerVertex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrackerVertex(*(ND::TTrackerReconModule::TTrackerVertex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_697_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrackerVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_697_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_697_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrackerVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_697_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrackerVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_697_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrackerVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_697_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_697_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_697_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_697_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrackerVertex G__TNDcLcLTTrackerReconModulecLcLTTrackerVertex;
static int G__nd280ProjectDict_697_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrackerVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrackerVertex*) (soff+(sizeof(ND::TTrackerReconModule::TTrackerVertex)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrackerVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrackerVertex*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_697_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerVertex* dest = (ND::TTrackerReconModule::TTrackerVertex*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrackerVertex*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrackerVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTrackerResult */
static int G__nd280ProjectDict_698_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerResult[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerResult[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerResult;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerResult;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_698_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrackerResult(*(ND::TTrackerReconModule::TTrackerResult*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrackerResult(*(ND::TTrackerReconModule::TTrackerResult*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_698_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrackerResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_698_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_698_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrackerResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_698_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrackerResult::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_698_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrackerResult*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_698_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_698_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_698_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_698_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrackerResult G__TNDcLcLTTrackerReconModulecLcLTTrackerResult;
static int G__nd280ProjectDict_698_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrackerResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrackerResult*) (soff+(sizeof(ND::TTrackerReconModule::TTrackerResult)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerResult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrackerResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrackerResult*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerResult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_698_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerResult* dest = (ND::TTrackerReconModule::TTrackerResult*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrackerResult*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrackerResult& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTrueParticle */
static int G__nd280ProjectDict_699_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrueParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrueParticle[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrueParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrueParticle;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrueParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_699_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrueParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrueParticle(*(ND::TTrackerReconModule::TTrueParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrueParticle(*(ND::TTrackerReconModule::TTrueParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_699_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrueParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_699_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrueParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_699_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrueParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_699_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrueParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_699_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrueParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_699_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrueParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_699_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrueParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_699_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrueParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_699_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrueParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrueParticle G__TNDcLcLTTrackerReconModulecLcLTTrueParticle;
static int G__nd280ProjectDict_699_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrueParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrueParticle*) (soff+(sizeof(ND::TTrackerReconModule::TTrueParticle)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrueParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrueParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrueParticle*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrueParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_699_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrueParticle* dest = (ND::TTrackerReconModule::TTrueParticle*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrueParticle*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrueParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTrackerConstituent */
static int G__nd280ProjectDict_700_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerConstituent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerConstituent[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerConstituent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerConstituent;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerConstituent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_700_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerConstituent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrackerConstituent(*(ND::TTrackerReconModule::TTrackerConstituent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrackerConstituent(*(ND::TTrackerReconModule::TTrackerConstituent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_700_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrackerConstituent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_700_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerConstituent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_700_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrackerConstituent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_700_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrackerConstituent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_700_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrackerConstituent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_700_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerConstituent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_700_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerConstituent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_700_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerConstituent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_700_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerConstituent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrackerConstituent G__TNDcLcLTTrackerReconModulecLcLTTrackerConstituent;
static int G__nd280ProjectDict_700_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrackerConstituent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrackerConstituent*) (soff+(sizeof(ND::TTrackerReconModule::TTrackerConstituent)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerConstituent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrackerConstituent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrackerConstituent*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerConstituent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_700_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerConstituent* dest = (ND::TTrackerReconModule::TTrackerConstituent*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrackerConstituent*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrackerConstituent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTPCTrack */
static int G__nd280ProjectDict_701_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTPCTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTPCTrack[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTPCTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTPCTrack;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTPCTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_701_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTPCTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTPCTrack(*(ND::TTrackerReconModule::TTPCTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTPCTrack(*(ND::TTrackerReconModule::TTPCTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_701_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTPCTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_701_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTPCTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_701_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTPCTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_701_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTPCTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_701_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTPCTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_701_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTPCTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_701_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTPCTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_701_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTPCTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_701_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTPCTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTPCTrack G__TNDcLcLTTrackerReconModulecLcLTTPCTrack;
static int G__nd280ProjectDict_701_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTPCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTPCTrack*) (soff+(sizeof(ND::TTrackerReconModule::TTPCTrack)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTPCTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTPCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTPCTrack*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTPCTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_701_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTPCTrack* dest = (ND::TTrackerReconModule::TTPCTrack*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTPCTrack*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTPCTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TFGDTrack */
static int G__nd280ProjectDict_702_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TFGDTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TFGDTrack[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TFGDTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TFGDTrack;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TFGDTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_702_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TFGDTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TFGDTrack(*(ND::TTrackerReconModule::TFGDTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TFGDTrack(*(ND::TTrackerReconModule::TFGDTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_702_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TFGDTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_702_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TFGDTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_702_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TFGDTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_702_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TFGDTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_702_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TFGDTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_702_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TFGDTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_702_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TFGDTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_702_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TFGDTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_702_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TFGDTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TFGDTrack G__TNDcLcLTTrackerReconModulecLcLTFGDTrack;
static int G__nd280ProjectDict_702_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TFGDTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TFGDTrack*) (soff+(sizeof(ND::TTrackerReconModule::TFGDTrack)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTFGDTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TFGDTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TFGDTrack*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTFGDTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_702_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TFGDTrack* dest = (ND::TTrackerReconModule::TFGDTrack*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TFGDTrack*) libp->para[0].ref;
   const ND::TTrackerReconModule::TFGDTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTrackerNode */
static int G__nd280ProjectDict_703_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerNode[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerNode[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackerNode;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackerNode;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_703_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrackerNode(*(ND::TTrackerReconModule::TTrackerNode*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrackerNode(*(ND::TTrackerReconModule::TTrackerNode*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_703_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrackerNode::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_703_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerNode::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_703_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrackerNode::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_703_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrackerNode::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_703_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrackerNode*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_703_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerNode::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_703_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerNode::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_703_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackerNode::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_703_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackerNode::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrackerNode G__TNDcLcLTTrackerReconModulecLcLTTrackerNode;
static int G__nd280ProjectDict_703_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrackerNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrackerNode*) (soff+(sizeof(ND::TTrackerReconModule::TTrackerNode)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerNode();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrackerNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrackerNode*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrackerNode();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_703_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackerNode* dest = (ND::TTrackerReconModule::TTrackerNode*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrackerNode*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrackerNode& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TTrackOther */
static int G__nd280ProjectDict_704_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackOther* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackOther[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackOther[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TTrackOther;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TTrackOther;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_704_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackOther* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TTrackOther(*(ND::TTrackerReconModule::TTrackOther*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TTrackOther(*(ND::TTrackerReconModule::TTrackOther*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_704_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TTrackOther::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_704_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackOther::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_704_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TTrackOther::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_704_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TTrackOther::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_704_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TTrackOther*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_704_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackOther::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_704_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackOther::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_704_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TTrackOther::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_704_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TTrackOther::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TTrackOther G__TNDcLcLTTrackerReconModulecLcLTTrackOther;
static int G__nd280ProjectDict_704_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TTrackOther*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TTrackOther*) (soff+(sizeof(ND::TTrackerReconModule::TTrackOther)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTTrackOther();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TTrackOther*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TTrackOther*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTTrackOther();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_704_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TTrackOther* dest = (ND::TTrackerReconModule::TTrackOther*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TTrackOther*) libp->para[0].ref;
   const ND::TTrackerReconModule::TTrackOther& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TTrackerReconModule::TUnusedHit */
static int G__nd280ProjectDict_705_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TUnusedHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TUnusedHit[n];
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TUnusedHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TTrackerReconModule::TUnusedHit;
     } else {
       p = new((void*) gvp) ND::TTrackerReconModule::TUnusedHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_705_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TUnusedHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TTrackerReconModule::TUnusedHit(*(ND::TTrackerReconModule::TUnusedHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TTrackerReconModule::TUnusedHit(*(ND::TTrackerReconModule::TUnusedHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_705_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TTrackerReconModule::TUnusedHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_705_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TUnusedHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_705_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TTrackerReconModule::TUnusedHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_705_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TTrackerReconModule::TUnusedHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_705_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TTrackerReconModule::TUnusedHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_705_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TUnusedHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_705_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TUnusedHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_705_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TTrackerReconModule::TUnusedHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_705_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TTrackerReconModule::TUnusedHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TTrackerReconModule::TUnusedHit G__TNDcLcLTTrackerReconModulecLcLTUnusedHit;
static int G__nd280ProjectDict_705_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TTrackerReconModule::TUnusedHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TTrackerReconModule::TUnusedHit*) (soff+(sizeof(ND::TTrackerReconModule::TUnusedHit)*i)))->~G__TNDcLcLTTrackerReconModulecLcLTUnusedHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TTrackerReconModule::TUnusedHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TTrackerReconModule::TUnusedHit*) (soff))->~G__TNDcLcLTTrackerReconModulecLcLTUnusedHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_705_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TTrackerReconModule::TUnusedHit* dest = (ND::TTrackerReconModule::TUnusedHit*) G__getstructoffset();
   *dest = *(ND::TTrackerReconModule::TUnusedHit*) libp->para[0].ref;
   const ND::TTrackerReconModule::TUnusedHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TECALTestbeamModule */
static int G__nd280ProjectDict_706_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TECALTestbeamModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TECALTestbeamModule[n];
     } else {
       p = new((void*) gvp) ND::TECALTestbeamModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TECALTestbeamModule;
     } else {
       p = new((void*) gvp) ND::TECALTestbeamModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_706_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TECALTestbeamModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TECALTestbeamModule(*(ND::TECALTestbeamModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TECALTestbeamModule(*(ND::TECALTestbeamModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_706_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TECALTestbeamModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_706_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TECALTestbeamModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_706_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TECALTestbeamModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_706_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TECALTestbeamModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_706_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TECALTestbeamModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_706_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TECALTestbeamModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_706_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TECALTestbeamModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_706_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TECALTestbeamModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_706_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TECALTestbeamModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TECALTestbeamModule G__TNDcLcLTECALTestbeamModule;
static int G__nd280ProjectDict_706_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TECALTestbeamModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TECALTestbeamModule*) (soff+(sizeof(ND::TECALTestbeamModule)*i)))->~G__TNDcLcLTECALTestbeamModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TECALTestbeamModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TECALTestbeamModule*) (soff))->~G__TNDcLcLTECALTestbeamModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_706_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TECALTestbeamModule* dest = (ND::TECALTestbeamModule*) G__getstructoffset();
   *dest = *(ND::TECALTestbeamModule*) libp->para[0].ref;
   const ND::TECALTestbeamModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TSmrdReconModule */
static int G__nd280ProjectDict_707_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSmrdReconModule[n];
     } else {
       p = new((void*) gvp) ND::TSmrdReconModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSmrdReconModule;
     } else {
       p = new((void*) gvp) ND::TSmrdReconModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_707_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TSmrdReconModule(*(ND::TSmrdReconModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TSmrdReconModule(*(ND::TSmrdReconModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_707_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TSmrdReconModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_707_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_707_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TSmrdReconModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_707_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TSmrdReconModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_707_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TSmrdReconModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_707_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_707_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSmrdReconModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_707_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_707_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSmrdReconModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TSmrdReconModule G__TNDcLcLTSmrdReconModule;
static int G__nd280ProjectDict_707_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TSmrdReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TSmrdReconModule*) (soff+(sizeof(ND::TSmrdReconModule)*i)))->~G__TNDcLcLTSmrdReconModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TSmrdReconModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TSmrdReconModule*) (soff))->~G__TNDcLcLTSmrdReconModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_707_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule* dest = (ND::TSmrdReconModule*) G__getstructoffset();
   *dest = *(ND::TSmrdReconModule*) libp->para[0].ref;
   const ND::TSmrdReconModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TSmrdReconModule::TSmrdReconHit */
static int G__nd280ProjectDict_708_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdReconHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSmrdReconModule::TSmrdReconHit[n];
     } else {
       p = new((void*) gvp) ND::TSmrdReconModule::TSmrdReconHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSmrdReconModule::TSmrdReconHit;
     } else {
       p = new((void*) gvp) ND::TSmrdReconModule::TSmrdReconHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_708_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdReconHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TSmrdReconModule::TSmrdReconHit(*(ND::TSmrdReconModule::TSmrdReconHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TSmrdReconModule::TSmrdReconHit(*(ND::TSmrdReconModule::TSmrdReconHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_708_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TSmrdReconModule::TSmrdReconHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_708_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdReconHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_708_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TSmrdReconModule::TSmrdReconHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_708_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TSmrdReconModule::TSmrdReconHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_708_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TSmrdReconModule::TSmrdReconHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_708_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdReconHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_708_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSmrdReconModule::TSmrdReconHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_708_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdReconHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_708_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSmrdReconModule::TSmrdReconHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TSmrdReconModule::TSmrdReconHit G__TNDcLcLTSmrdReconModulecLcLTSmrdReconHit;
static int G__nd280ProjectDict_708_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TSmrdReconModule::TSmrdReconHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TSmrdReconModule::TSmrdReconHit*) (soff+(sizeof(ND::TSmrdReconModule::TSmrdReconHit)*i)))->~G__TNDcLcLTSmrdReconModulecLcLTSmrdReconHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TSmrdReconModule::TSmrdReconHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TSmrdReconModule::TSmrdReconHit*) (soff))->~G__TNDcLcLTSmrdReconModulecLcLTSmrdReconHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_708_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdReconHit* dest = (ND::TSmrdReconModule::TSmrdReconHit*) G__getstructoffset();
   *dest = *(ND::TSmrdReconModule::TSmrdReconHit*) libp->para[0].ref;
   const ND::TSmrdReconModule::TSmrdReconHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TSmrdReconModule::TSmrdIsoTrack */
static int G__nd280ProjectDict_709_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSmrdReconModule::TSmrdIsoTrack[n];
     } else {
       p = new((void*) gvp) ND::TSmrdReconModule::TSmrdIsoTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TSmrdReconModule::TSmrdIsoTrack;
     } else {
       p = new((void*) gvp) ND::TSmrdReconModule::TSmrdIsoTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_709_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TSmrdReconModule::TSmrdIsoTrack(*(ND::TSmrdReconModule::TSmrdIsoTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TSmrdReconModule::TSmrdIsoTrack(*(ND::TSmrdReconModule::TSmrdIsoTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_709_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TSmrdReconModule::TSmrdIsoTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_709_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdIsoTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_709_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TSmrdReconModule::TSmrdIsoTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_709_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TSmrdReconModule::TSmrdIsoTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_709_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TSmrdReconModule::TSmrdIsoTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_709_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdIsoTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_709_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSmrdReconModule::TSmrdIsoTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_709_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TSmrdReconModule::TSmrdIsoTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_709_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TSmrdReconModule::TSmrdIsoTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TSmrdReconModule::TSmrdIsoTrack G__TNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack;
static int G__nd280ProjectDict_709_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TSmrdReconModule::TSmrdIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TSmrdReconModule::TSmrdIsoTrack*) (soff+(sizeof(ND::TSmrdReconModule::TSmrdIsoTrack)*i)))->~G__TNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TSmrdReconModule::TSmrdIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TSmrdReconModule::TSmrdIsoTrack*) (soff))->~G__TNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_709_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TSmrdReconModule::TSmrdIsoTrack* dest = (ND::TSmrdReconModule::TSmrdIsoTrack*) G__getstructoffset();
   *dest = *(ND::TSmrdReconModule::TSmrdIsoTrack*) libp->para[0].ref;
   const ND::TSmrdReconModule::TSmrdIsoTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TLowLevelInfoModule */
static int G__nd280ProjectDict_710_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TLowLevelInfoModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TLowLevelInfoModule[n];
     } else {
       p = new((void*) gvp) ND::TLowLevelInfoModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TLowLevelInfoModule;
     } else {
       p = new((void*) gvp) ND::TLowLevelInfoModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_710_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TLowLevelInfoModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TLowLevelInfoModule(*(ND::TLowLevelInfoModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TLowLevelInfoModule(*(ND::TLowLevelInfoModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_710_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TLowLevelInfoModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_710_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TLowLevelInfoModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_710_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TLowLevelInfoModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_710_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TLowLevelInfoModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_710_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TLowLevelInfoModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_710_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TLowLevelInfoModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_710_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TLowLevelInfoModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_710_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TLowLevelInfoModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_710_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TLowLevelInfoModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TLowLevelInfoModule G__TNDcLcLTLowLevelInfoModule;
static int G__nd280ProjectDict_710_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TLowLevelInfoModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TLowLevelInfoModule*) (soff+(sizeof(ND::TLowLevelInfoModule)*i)))->~G__TNDcLcLTLowLevelInfoModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TLowLevelInfoModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TLowLevelInfoModule*) (soff))->~G__TNDcLcLTLowLevelInfoModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_710_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TLowLevelInfoModule* dest = (ND::TLowLevelInfoModule*) G__getstructoffset();
   *dest = *(ND::TLowLevelInfoModule*) libp->para[0].ref;
   const ND::TLowLevelInfoModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TLowLevelInfoModule::TLowLevelTFBDigit */
static int G__nd280ProjectDict_711_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TLowLevelInfoModule::TLowLevelTFBDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TLowLevelInfoModule::TLowLevelTFBDigit[n];
     } else {
       p = new((void*) gvp) ND::TLowLevelInfoModule::TLowLevelTFBDigit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TLowLevelInfoModule::TLowLevelTFBDigit;
     } else {
       p = new((void*) gvp) ND::TLowLevelInfoModule::TLowLevelTFBDigit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_711_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TLowLevelInfoModule::TLowLevelTFBDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TLowLevelInfoModule::TLowLevelTFBDigit(*(ND::TLowLevelInfoModule::TLowLevelTFBDigit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TLowLevelInfoModule::TLowLevelTFBDigit(*(ND::TLowLevelInfoModule::TLowLevelTFBDigit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_711_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TLowLevelInfoModule::TLowLevelTFBDigit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_711_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TLowLevelInfoModule::TLowLevelTFBDigit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_711_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TLowLevelInfoModule::TLowLevelTFBDigit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_711_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TLowLevelInfoModule::TLowLevelTFBDigit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_711_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TLowLevelInfoModule::TLowLevelTFBDigit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_711_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TLowLevelInfoModule::TLowLevelTFBDigit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_711_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TLowLevelInfoModule::TLowLevelTFBDigit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_711_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TLowLevelInfoModule::TLowLevelTFBDigit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_711_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TLowLevelInfoModule::TLowLevelTFBDigit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TLowLevelInfoModule::TLowLevelTFBDigit G__TNDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit;
static int G__nd280ProjectDict_711_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TLowLevelInfoModule::TLowLevelTFBDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TLowLevelInfoModule::TLowLevelTFBDigit*) (soff+(sizeof(ND::TLowLevelInfoModule::TLowLevelTFBDigit)*i)))->~G__TNDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TLowLevelInfoModule::TLowLevelTFBDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TLowLevelInfoModule::TLowLevelTFBDigit*) (soff))->~G__TNDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_711_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TLowLevelInfoModule::TLowLevelTFBDigit* dest = (ND::TLowLevelInfoModule::TLowLevelTFBDigit*) G__getstructoffset();
   *dest = *(ND::TLowLevelInfoModule::TLowLevelTFBDigit*) libp->para[0].ref;
   const ND::TLowLevelInfoModule::TLowLevelTFBDigit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TLowLevelInfoModule::TLowLevelHit */
static int G__nd280ProjectDict_712_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TLowLevelInfoModule::TLowLevelHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TLowLevelInfoModule::TLowLevelHit[n];
     } else {
       p = new((void*) gvp) ND::TLowLevelInfoModule::TLowLevelHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TLowLevelInfoModule::TLowLevelHit;
     } else {
       p = new((void*) gvp) ND::TLowLevelInfoModule::TLowLevelHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_712_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TLowLevelInfoModule::TLowLevelHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TLowLevelInfoModule::TLowLevelHit(*(ND::TLowLevelInfoModule::TLowLevelHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TLowLevelInfoModule::TLowLevelHit(*(ND::TLowLevelInfoModule::TLowLevelHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_712_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TLowLevelInfoModule::TLowLevelHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_712_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TLowLevelInfoModule::TLowLevelHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_712_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TLowLevelInfoModule::TLowLevelHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_712_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TLowLevelInfoModule::TLowLevelHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_712_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TLowLevelInfoModule::TLowLevelHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_712_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TLowLevelInfoModule::TLowLevelHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_712_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TLowLevelInfoModule::TLowLevelHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_712_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TLowLevelInfoModule::TLowLevelHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_712_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TLowLevelInfoModule::TLowLevelHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TLowLevelInfoModule::TLowLevelHit G__TNDcLcLTLowLevelInfoModulecLcLTLowLevelHit;
static int G__nd280ProjectDict_712_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TLowLevelInfoModule::TLowLevelHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TLowLevelInfoModule::TLowLevelHit*) (soff+(sizeof(ND::TLowLevelInfoModule::TLowLevelHit)*i)))->~G__TNDcLcLTLowLevelInfoModulecLcLTLowLevelHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TLowLevelInfoModule::TLowLevelHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TLowLevelInfoModule::TLowLevelHit*) (soff))->~G__TNDcLcLTLowLevelInfoModulecLcLTLowLevelHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_712_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TLowLevelInfoModule::TLowLevelHit* dest = (ND::TLowLevelInfoModule::TLowLevelHit*) G__getstructoffset();
   *dest = *(ND::TLowLevelInfoModule::TLowLevelHit*) libp->para[0].ref;
   const ND::TLowLevelInfoModule::TLowLevelHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TFgdOnlyModule */
static int G__nd280ProjectDict_713_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule[n];
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule;
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_713_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TFgdOnlyModule(*(ND::TFgdOnlyModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TFgdOnlyModule(*(ND::TFgdOnlyModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_713_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TFgdOnlyModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_713_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_713_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TFgdOnlyModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_713_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TFgdOnlyModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_713_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TFgdOnlyModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_713_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_713_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_713_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_713_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TFgdOnlyModule G__TNDcLcLTFgdOnlyModule;
static int G__nd280ProjectDict_713_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TFgdOnlyModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TFgdOnlyModule*) (soff+(sizeof(ND::TFgdOnlyModule)*i)))->~G__TNDcLcLTFgdOnlyModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TFgdOnlyModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TFgdOnlyModule*) (soff))->~G__TNDcLcLTFgdOnlyModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_713_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule* dest = (ND::TFgdOnlyModule*) G__getstructoffset();
   *dest = *(ND::TFgdOnlyModule*) libp->para[0].ref;
   const ND::TFgdOnlyModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TFgdOnlyModule::TFgd2DIsoTrack */
static int G__nd280ProjectDict_714_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd2DIsoTrack[n];
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DIsoTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd2DIsoTrack;
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DIsoTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_714_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TFgdOnlyModule::TFgd2DIsoTrack(*(ND::TFgdOnlyModule::TFgd2DIsoTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DIsoTrack(*(ND::TFgdOnlyModule::TFgd2DIsoTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_714_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_714_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_714_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_714_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TFgdOnlyModule::TFgd2DIsoTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_714_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TFgdOnlyModule::TFgd2DIsoTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_714_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_714_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_714_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_714_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd2DIsoTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TFgdOnlyModule::TFgd2DIsoTrack G__TNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack;
static int G__nd280ProjectDict_714_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TFgdOnlyModule::TFgd2DIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TFgdOnlyModule::TFgd2DIsoTrack*) (soff+(sizeof(ND::TFgdOnlyModule::TFgd2DIsoTrack)*i)))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TFgdOnlyModule::TFgd2DIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TFgdOnlyModule::TFgd2DIsoTrack*) (soff))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_714_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DIsoTrack* dest = (ND::TFgdOnlyModule::TFgd2DIsoTrack*) G__getstructoffset();
   *dest = *(ND::TFgdOnlyModule::TFgd2DIsoTrack*) libp->para[0].ref;
   const ND::TFgdOnlyModule::TFgd2DIsoTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TFgdOnlyModule::TFgd3DIsoTrack */
static int G__nd280ProjectDict_715_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DIsoTrack[n];
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DIsoTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DIsoTrack;
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DIsoTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_715_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DIsoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TFgdOnlyModule::TFgd3DIsoTrack(*(ND::TFgdOnlyModule::TFgd3DIsoTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DIsoTrack(*(ND::TFgdOnlyModule::TFgd3DIsoTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_715_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_715_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_715_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_715_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TFgdOnlyModule::TFgd3DIsoTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_715_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TFgdOnlyModule::TFgd3DIsoTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_715_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_715_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_715_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_715_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DIsoTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TFgdOnlyModule::TFgd3DIsoTrack G__TNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack;
static int G__nd280ProjectDict_715_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TFgdOnlyModule::TFgd3DIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TFgdOnlyModule::TFgd3DIsoTrack*) (soff+(sizeof(ND::TFgdOnlyModule::TFgd3DIsoTrack)*i)))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TFgdOnlyModule::TFgd3DIsoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TFgdOnlyModule::TFgd3DIsoTrack*) (soff))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_715_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DIsoTrack* dest = (ND::TFgdOnlyModule::TFgd3DIsoTrack*) G__getstructoffset();
   *dest = *(ND::TFgdOnlyModule::TFgd3DIsoTrack*) libp->para[0].ref;
   const ND::TFgdOnlyModule::TFgd3DIsoTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TFgdOnlyModule::TFgd3DShowerPID */
static int G__nd280ProjectDict_716_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DShowerPID[n];
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerPID[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DShowerPID;
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerPID;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_716_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TFgdOnlyModule::TFgd3DShowerPID(*(ND::TFgdOnlyModule::TFgd3DShowerPID*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerPID(*(ND::TFgdOnlyModule::TFgd3DShowerPID*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_716_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_716_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_716_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_716_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TFgdOnlyModule::TFgd3DShowerPID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_716_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TFgdOnlyModule::TFgd3DShowerPID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_716_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_716_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_716_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_716_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DShowerPID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TFgdOnlyModule::TFgd3DShowerPID G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID;
static int G__nd280ProjectDict_716_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TFgdOnlyModule::TFgd3DShowerPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TFgdOnlyModule::TFgd3DShowerPID*) (soff+(sizeof(ND::TFgdOnlyModule::TFgd3DShowerPID)*i)))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TFgdOnlyModule::TFgd3DShowerPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TFgdOnlyModule::TFgd3DShowerPID*) (soff))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_716_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerPID* dest = (ND::TFgdOnlyModule::TFgd3DShowerPID*) G__getstructoffset();
   *dest = *(ND::TFgdOnlyModule::TFgd3DShowerPID*) libp->para[0].ref;
   const ND::TFgdOnlyModule::TFgd3DShowerPID& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TFgdOnlyModule::TFgd3DShowerHyp */
static int G__nd280ProjectDict_717_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerHyp* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DShowerHyp[n];
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerHyp[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd3DShowerHyp;
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerHyp;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_717_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerHyp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TFgdOnlyModule::TFgd3DShowerHyp(*(ND::TFgdOnlyModule::TFgd3DShowerHyp*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TFgdOnlyModule::TFgd3DShowerHyp(*(ND::TFgdOnlyModule::TFgd3DShowerHyp*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_717_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_717_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_717_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_717_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TFgdOnlyModule::TFgd3DShowerHyp::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_717_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TFgdOnlyModule::TFgd3DShowerHyp*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_717_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_717_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_717_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_717_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd3DShowerHyp::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TFgdOnlyModule::TFgd3DShowerHyp G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp;
static int G__nd280ProjectDict_717_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TFgdOnlyModule::TFgd3DShowerHyp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TFgdOnlyModule::TFgd3DShowerHyp*) (soff+(sizeof(ND::TFgdOnlyModule::TFgd3DShowerHyp)*i)))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TFgdOnlyModule::TFgd3DShowerHyp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TFgdOnlyModule::TFgd3DShowerHyp*) (soff))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_717_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd3DShowerHyp* dest = (ND::TFgdOnlyModule::TFgd3DShowerHyp*) G__getstructoffset();
   *dest = *(ND::TFgdOnlyModule::TFgd3DShowerHyp*) libp->para[0].ref;
   const ND::TFgdOnlyModule::TFgd3DShowerHyp& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TFgdOnlyModule::TFgd2DCluster */
static int G__nd280ProjectDict_718_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd2DCluster[n];
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TFgdOnlyModule::TFgd2DCluster;
     } else {
       p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_718_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TFgdOnlyModule::TFgd2DCluster(*(ND::TFgdOnlyModule::TFgd2DCluster*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TFgdOnlyModule::TFgd2DCluster(*(ND::TFgdOnlyModule::TFgd2DCluster*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_718_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TFgdOnlyModule::TFgd2DCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_718_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_718_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TFgdOnlyModule::TFgd2DCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_718_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TFgdOnlyModule::TFgd2DCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_718_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TFgdOnlyModule::TFgd2DCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_718_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_718_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd2DCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_718_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TFgdOnlyModule::TFgd2DCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_718_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TFgdOnlyModule::TFgd2DCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TFgdOnlyModule::TFgd2DCluster G__TNDcLcLTFgdOnlyModulecLcLTFgd2DCluster;
static int G__nd280ProjectDict_718_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TFgdOnlyModule::TFgd2DCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TFgdOnlyModule::TFgd2DCluster*) (soff+(sizeof(ND::TFgdOnlyModule::TFgd2DCluster)*i)))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd2DCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TFgdOnlyModule::TFgd2DCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TFgdOnlyModule::TFgd2DCluster*) (soff))->~G__TNDcLcLTFgdOnlyModulecLcLTFgd2DCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_718_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TFgdOnlyModule::TFgd2DCluster* dest = (ND::TFgdOnlyModule::TFgd2DCluster*) G__getstructoffset();
   *dest = *(ND::TFgdOnlyModule::TFgd2DCluster*) libp->para[0].ref;
   const ND::TFgdOnlyModule::TFgd2DCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TBeamSummaryDataModule */
static int G__nd280ProjectDict_723_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBeamSummaryDataModule[n];
     } else {
       p = new((void*) gvp) ND::TBeamSummaryDataModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBeamSummaryDataModule;
     } else {
       p = new((void*) gvp) ND::TBeamSummaryDataModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_723_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TBeamSummaryDataModule(*(ND::TBeamSummaryDataModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TBeamSummaryDataModule(*(ND::TBeamSummaryDataModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_723_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TBeamSummaryDataModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_723_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_723_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TBeamSummaryDataModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_723_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TBeamSummaryDataModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_723_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TBeamSummaryDataModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_723_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_723_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBeamSummaryDataModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_723_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_723_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBeamSummaryDataModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TBeamSummaryDataModule G__TNDcLcLTBeamSummaryDataModule;
static int G__nd280ProjectDict_723_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TBeamSummaryDataModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TBeamSummaryDataModule*) (soff+(sizeof(ND::TBeamSummaryDataModule)*i)))->~G__TNDcLcLTBeamSummaryDataModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TBeamSummaryDataModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TBeamSummaryDataModule*) (soff))->~G__TNDcLcLTBeamSummaryDataModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_723_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule* dest = (ND::TBeamSummaryDataModule*) G__getstructoffset();
   *dest = *(ND::TBeamSummaryDataModule*) libp->para[0].ref;
   const ND::TBeamSummaryDataModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TBeamSummaryDataModule::TBeamSummaryData */
static int G__nd280ProjectDict_724_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBeamSummaryDataModule::TBeamSummaryData[n];
     } else {
       p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBeamSummaryDataModule::TBeamSummaryData;
     } else {
       p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_724_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TBeamSummaryDataModule::TBeamSummaryData(*(ND::TBeamSummaryDataModule::TBeamSummaryData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData(*(ND::TBeamSummaryDataModule::TBeamSummaryData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_724_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_724_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_724_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_724_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TBeamSummaryDataModule::TBeamSummaryData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_724_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TBeamSummaryDataModule::TBeamSummaryData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_724_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_724_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_724_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_724_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TBeamSummaryDataModule::TBeamSummaryData G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData;
static int G__nd280ProjectDict_724_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TBeamSummaryDataModule::TBeamSummaryData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TBeamSummaryDataModule::TBeamSummaryData*) (soff+(sizeof(ND::TBeamSummaryDataModule::TBeamSummaryData)*i)))->~G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TBeamSummaryDataModule::TBeamSummaryData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TBeamSummaryDataModule::TBeamSummaryData*) (soff))->~G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_724_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData* dest = (ND::TBeamSummaryDataModule::TBeamSummaryData*) G__getstructoffset();
   *dest = *(ND::TBeamSummaryDataModule::TBeamSummaryData*) libp->para[0].ref;
   const ND::TBeamSummaryDataModule::TBeamSummaryData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData */
static int G__nd280ProjectDict_725_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData[n];
     } else {
       p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData;
     } else {
       p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_725_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData(*(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData(*(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_725_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_725_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_725_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_725_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_725_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_725_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_725_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_725_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_725_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData;
static int G__nd280ProjectDict_725_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) (soff+(sizeof(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData)*i)))->~G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) (soff))->~G__TNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_725_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData* dest = (ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) G__getstructoffset();
   *dest = *(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*) libp->para[0].ref;
   const ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TReconPerformanceEvalModule */
static int G__nd280ProjectDict_726_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TReconPerformanceEvalModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TReconPerformanceEvalModule[n];
     } else {
       p = new((void*) gvp) ND::TReconPerformanceEvalModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TReconPerformanceEvalModule;
     } else {
       p = new((void*) gvp) ND::TReconPerformanceEvalModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_726_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TReconPerformanceEvalModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TReconPerformanceEvalModule(*(ND::TReconPerformanceEvalModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TReconPerformanceEvalModule(*(ND::TReconPerformanceEvalModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_726_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TReconPerformanceEvalModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_726_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TReconPerformanceEvalModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_726_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TReconPerformanceEvalModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_726_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TReconPerformanceEvalModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_726_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TReconPerformanceEvalModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_726_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TReconPerformanceEvalModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_726_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TReconPerformanceEvalModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_726_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TReconPerformanceEvalModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_726_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TReconPerformanceEvalModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TReconPerformanceEvalModule G__TNDcLcLTReconPerformanceEvalModule;
static int G__nd280ProjectDict_726_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TReconPerformanceEvalModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TReconPerformanceEvalModule*) (soff+(sizeof(ND::TReconPerformanceEvalModule)*i)))->~G__TNDcLcLTReconPerformanceEvalModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TReconPerformanceEvalModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TReconPerformanceEvalModule*) (soff))->~G__TNDcLcLTReconPerformanceEvalModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_726_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TReconPerformanceEvalModule* dest = (ND::TReconPerformanceEvalModule*) G__getstructoffset();
   *dest = *(ND::TReconPerformanceEvalModule*) libp->para[0].ref;
   const ND::TReconPerformanceEvalModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TReconPerformanceEvalModule::TGlobalReconObject */
static int G__nd280ProjectDict_727_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TReconPerformanceEvalModule::TGlobalReconObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TReconPerformanceEvalModule::TGlobalReconObject[n];
     } else {
       p = new((void*) gvp) ND::TReconPerformanceEvalModule::TGlobalReconObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TReconPerformanceEvalModule::TGlobalReconObject;
     } else {
       p = new((void*) gvp) ND::TReconPerformanceEvalModule::TGlobalReconObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_727_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TReconPerformanceEvalModule::TGlobalReconObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TReconPerformanceEvalModule::TGlobalReconObject(*(ND::TReconPerformanceEvalModule::TGlobalReconObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TReconPerformanceEvalModule::TGlobalReconObject(*(ND::TReconPerformanceEvalModule::TGlobalReconObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_727_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TReconPerformanceEvalModule::TGlobalReconObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_727_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TReconPerformanceEvalModule::TGlobalReconObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_727_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TReconPerformanceEvalModule::TGlobalReconObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_727_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TReconPerformanceEvalModule::TGlobalReconObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_727_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TReconPerformanceEvalModule::TGlobalReconObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_727_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TReconPerformanceEvalModule::TGlobalReconObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_727_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TReconPerformanceEvalModule::TGlobalReconObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_727_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TReconPerformanceEvalModule::TGlobalReconObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_727_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TReconPerformanceEvalModule::TGlobalReconObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TReconPerformanceEvalModule::TGlobalReconObject G__TNDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject;
static int G__nd280ProjectDict_727_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TReconPerformanceEvalModule::TGlobalReconObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TReconPerformanceEvalModule::TGlobalReconObject*) (soff+(sizeof(ND::TReconPerformanceEvalModule::TGlobalReconObject)*i)))->~G__TNDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TReconPerformanceEvalModule::TGlobalReconObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TReconPerformanceEvalModule::TGlobalReconObject*) (soff))->~G__TNDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_727_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TReconPerformanceEvalModule::TGlobalReconObject* dest = (ND::TReconPerformanceEvalModule::TGlobalReconObject*) G__getstructoffset();
   *dest = *(ND::TReconPerformanceEvalModule::TGlobalReconObject*) libp->para[0].ref;
   const ND::TReconPerformanceEvalModule::TGlobalReconObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TReconPerformanceEvalModule::TGlobalTruthInfo */
static int G__nd280ProjectDict_728_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TReconPerformanceEvalModule::TGlobalTruthInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TReconPerformanceEvalModule::TGlobalTruthInfo[n];
     } else {
       p = new((void*) gvp) ND::TReconPerformanceEvalModule::TGlobalTruthInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TReconPerformanceEvalModule::TGlobalTruthInfo;
     } else {
       p = new((void*) gvp) ND::TReconPerformanceEvalModule::TGlobalTruthInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_728_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TReconPerformanceEvalModule::TGlobalTruthInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TReconPerformanceEvalModule::TGlobalTruthInfo(*(ND::TReconPerformanceEvalModule::TGlobalTruthInfo*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TReconPerformanceEvalModule::TGlobalTruthInfo(*(ND::TReconPerformanceEvalModule::TGlobalTruthInfo*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_728_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_728_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_728_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_728_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_728_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TReconPerformanceEvalModule::TGlobalTruthInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_728_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TReconPerformanceEvalModule::TGlobalTruthInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_728_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TReconPerformanceEvalModule::TGlobalTruthInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_728_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TReconPerformanceEvalModule::TGlobalTruthInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_728_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TReconPerformanceEvalModule::TGlobalTruthInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TReconPerformanceEvalModule::TGlobalTruthInfo G__TNDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo;
static int G__nd280ProjectDict_728_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TReconPerformanceEvalModule::TGlobalTruthInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TReconPerformanceEvalModule::TGlobalTruthInfo*) (soff+(sizeof(ND::TReconPerformanceEvalModule::TGlobalTruthInfo)*i)))->~G__TNDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TReconPerformanceEvalModule::TGlobalTruthInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TReconPerformanceEvalModule::TGlobalTruthInfo*) (soff))->~G__TNDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_728_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TReconPerformanceEvalModule::TGlobalTruthInfo* dest = (ND::TReconPerformanceEvalModule::TGlobalTruthInfo*) G__getstructoffset();
   *dest = *(ND::TReconPerformanceEvalModule::TGlobalTruthInfo*) libp->para[0].ref;
   const ND::TReconPerformanceEvalModule::TGlobalTruthInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TExample2010aAnalysis1Module */
static int G__nd280ProjectDict_733_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TExample2010aAnalysis1Module* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TExample2010aAnalysis1Module[n];
     } else {
       p = new((void*) gvp) ND::TExample2010aAnalysis1Module[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TExample2010aAnalysis1Module;
     } else {
       p = new((void*) gvp) ND::TExample2010aAnalysis1Module;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_733_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TExample2010aAnalysis1Module* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TExample2010aAnalysis1Module(*(ND::TExample2010aAnalysis1Module*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TExample2010aAnalysis1Module(*(ND::TExample2010aAnalysis1Module*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_733_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TExample2010aAnalysis1Module::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_733_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TExample2010aAnalysis1Module::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_733_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TExample2010aAnalysis1Module::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_733_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TExample2010aAnalysis1Module::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_733_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TExample2010aAnalysis1Module*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_733_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TExample2010aAnalysis1Module::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_733_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TExample2010aAnalysis1Module::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_733_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TExample2010aAnalysis1Module::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_733_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TExample2010aAnalysis1Module::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TExample2010aAnalysis1Module G__TNDcLcLTExample2010aAnalysis1Module;
static int G__nd280ProjectDict_733_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TExample2010aAnalysis1Module*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TExample2010aAnalysis1Module*) (soff+(sizeof(ND::TExample2010aAnalysis1Module)*i)))->~G__TNDcLcLTExample2010aAnalysis1Module();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TExample2010aAnalysis1Module*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TExample2010aAnalysis1Module*) (soff))->~G__TNDcLcLTExample2010aAnalysis1Module();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_733_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TExample2010aAnalysis1Module* dest = (ND::TExample2010aAnalysis1Module*) G__getstructoffset();
   *dest = *(ND::TExample2010aAnalysis1Module*) libp->para[0].ref;
   const ND::TExample2010aAnalysis1Module& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGeometrySummaryModule */
static int G__nd280ProjectDict_734_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGeometrySummaryModule[n];
     } else {
       p = new((void*) gvp) ND::TGeometrySummaryModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGeometrySummaryModule;
     } else {
       p = new((void*) gvp) ND::TGeometrySummaryModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_734_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGeometrySummaryModule(*(ND::TGeometrySummaryModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGeometrySummaryModule(*(ND::TGeometrySummaryModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_734_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGeometrySummaryModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_734_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_734_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGeometrySummaryModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_734_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGeometrySummaryModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_734_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGeometrySummaryModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_734_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_734_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGeometrySummaryModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_734_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_734_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGeometrySummaryModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGeometrySummaryModule G__TNDcLcLTGeometrySummaryModule;
static int G__nd280ProjectDict_734_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGeometrySummaryModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGeometrySummaryModule*) (soff+(sizeof(ND::TGeometrySummaryModule)*i)))->~G__TNDcLcLTGeometrySummaryModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGeometrySummaryModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGeometrySummaryModule*) (soff))->~G__TNDcLcLTGeometrySummaryModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_734_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule* dest = (ND::TGeometrySummaryModule*) G__getstructoffset();
   *dest = *(ND::TGeometrySummaryModule*) libp->para[0].ref;
   const ND::TGeometrySummaryModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGeometrySummaryModule::TDetectorBoundingBox */
static int G__nd280ProjectDict_808_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TDetectorBoundingBox* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGeometrySummaryModule::TDetectorBoundingBox[n];
     } else {
       p = new((void*) gvp) ND::TGeometrySummaryModule::TDetectorBoundingBox[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGeometrySummaryModule::TDetectorBoundingBox;
     } else {
       p = new((void*) gvp) ND::TGeometrySummaryModule::TDetectorBoundingBox;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_808_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TDetectorBoundingBox* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGeometrySummaryModule::TDetectorBoundingBox(*(ND::TGeometrySummaryModule::TDetectorBoundingBox*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGeometrySummaryModule::TDetectorBoundingBox(*(ND::TGeometrySummaryModule::TDetectorBoundingBox*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_808_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_808_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_808_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_808_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGeometrySummaryModule::TDetectorBoundingBox::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_808_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGeometrySummaryModule::TDetectorBoundingBox*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_808_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_808_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_808_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_808_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGeometrySummaryModule::TDetectorBoundingBox::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGeometrySummaryModule::TDetectorBoundingBox G__TNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox;
static int G__nd280ProjectDict_808_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGeometrySummaryModule::TDetectorBoundingBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGeometrySummaryModule::TDetectorBoundingBox*) (soff+(sizeof(ND::TGeometrySummaryModule::TDetectorBoundingBox)*i)))->~G__TNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGeometrySummaryModule::TDetectorBoundingBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGeometrySummaryModule::TDetectorBoundingBox*) (soff))->~G__TNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_808_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TDetectorBoundingBox* dest = (ND::TGeometrySummaryModule::TDetectorBoundingBox*) G__getstructoffset();
   *dest = *(ND::TGeometrySummaryModule::TDetectorBoundingBox*) libp->para[0].ref;
   const ND::TGeometrySummaryModule::TDetectorBoundingBox& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGeometrySummaryModule::TTPCMicroMegasVolumes */
static int G__nd280ProjectDict_809_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TTPCMicroMegasVolumes* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGeometrySummaryModule::TTPCMicroMegasVolumes[n];
     } else {
       p = new((void*) gvp) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGeometrySummaryModule::TTPCMicroMegasVolumes;
     } else {
       p = new((void*) gvp) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_809_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TTPCMicroMegasVolumes* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGeometrySummaryModule::TTPCMicroMegasVolumes(*(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes(*(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_809_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_809_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_809_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_809_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_809_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_809_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_809_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_809_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_809_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGeometrySummaryModule::TTPCMicroMegasVolumes G__TNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes;
static int G__nd280ProjectDict_809_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) (soff+(sizeof(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes)*i)))->~G__TNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) (soff))->~G__TNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_809_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGeometrySummaryModule::TTPCMicroMegasVolumes* dest = (ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) G__getstructoffset();
   *dest = *(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*) libp->para[0].ref;
   const ND::TGeometrySummaryModule::TTPCMicroMegasVolumes& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TGRooTrackerVtxModule */
static int G__nd280ProjectDict_818_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGRooTrackerVtxModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGRooTrackerVtxModule[n];
     } else {
       p = new((void*) gvp) ND::TGRooTrackerVtxModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TGRooTrackerVtxModule;
     } else {
       p = new((void*) gvp) ND::TGRooTrackerVtxModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_818_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGRooTrackerVtxModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TGRooTrackerVtxModule(*(ND::TGRooTrackerVtxModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TGRooTrackerVtxModule(*(ND::TGRooTrackerVtxModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_818_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TGRooTrackerVtxModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_818_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGRooTrackerVtxModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_818_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TGRooTrackerVtxModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_818_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TGRooTrackerVtxModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_818_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TGRooTrackerVtxModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_818_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGRooTrackerVtxModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_818_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGRooTrackerVtxModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_818_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TGRooTrackerVtxModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_818_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TGRooTrackerVtxModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TGRooTrackerVtxModule G__TNDcLcLTGRooTrackerVtxModule;
static int G__nd280ProjectDict_818_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TGRooTrackerVtxModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TGRooTrackerVtxModule*) (soff+(sizeof(ND::TGRooTrackerVtxModule)*i)))->~G__TNDcLcLTGRooTrackerVtxModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TGRooTrackerVtxModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TGRooTrackerVtxModule*) (soff))->~G__TNDcLcLTGRooTrackerVtxModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_818_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TGRooTrackerVtxModule* dest = (ND::TGRooTrackerVtxModule*) G__getstructoffset();
   *dest = *(ND::TGRooTrackerVtxModule*) libp->para[0].ref;
   const ND::TGRooTrackerVtxModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TRooTrackerVtxModuleBase */
static int G__nd280ProjectDict_819_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TRooTrackerVtxModuleBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TRooTrackerVtxModuleBase[n];
     } else {
       p = new((void*) gvp) ND::TRooTrackerVtxModuleBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TRooTrackerVtxModuleBase;
     } else {
       p = new((void*) gvp) ND::TRooTrackerVtxModuleBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_819_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TRooTrackerVtxModuleBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TRooTrackerVtxModuleBase(*(ND::TRooTrackerVtxModuleBase*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TRooTrackerVtxModuleBase(*(ND::TRooTrackerVtxModuleBase*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_819_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TRooTrackerVtxModuleBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_819_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TRooTrackerVtxModuleBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_819_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TRooTrackerVtxModuleBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_819_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TRooTrackerVtxModuleBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_819_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TRooTrackerVtxModuleBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_819_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TRooTrackerVtxModuleBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_819_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TRooTrackerVtxModuleBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_819_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TRooTrackerVtxModuleBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_819_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TRooTrackerVtxModuleBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TRooTrackerVtxModuleBase G__TNDcLcLTRooTrackerVtxModuleBase;
static int G__nd280ProjectDict_819_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TRooTrackerVtxModuleBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TRooTrackerVtxModuleBase*) (soff+(sizeof(ND::TRooTrackerVtxModuleBase)*i)))->~G__TNDcLcLTRooTrackerVtxModuleBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TRooTrackerVtxModuleBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TRooTrackerVtxModuleBase*) (soff))->~G__TNDcLcLTRooTrackerVtxModuleBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_819_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TRooTrackerVtxModuleBase* dest = (ND::TRooTrackerVtxModuleBase*) G__getstructoffset();
   *dest = *(ND::TRooTrackerVtxModuleBase*) libp->para[0].ref;
   const ND::TRooTrackerVtxModuleBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ND::TNRooTrackerVtxModule */
static int G__nd280ProjectDict_820_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TNRooTrackerVtxModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TNRooTrackerVtxModule[n];
     } else {
       p = new((void*) gvp) ND::TNRooTrackerVtxModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ND::TNRooTrackerVtxModule;
     } else {
       p = new((void*) gvp) ND::TNRooTrackerVtxModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_820_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TNRooTrackerVtxModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ND::TNRooTrackerVtxModule(*(ND::TNRooTrackerVtxModule*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ND::TNRooTrackerVtxModule(*(ND::TNRooTrackerVtxModule*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_820_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ND::TNRooTrackerVtxModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_820_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TNRooTrackerVtxModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_820_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ND::TNRooTrackerVtxModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_820_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ND::TNRooTrackerVtxModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_820_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ND::TNRooTrackerVtxModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_820_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TNRooTrackerVtxModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_820_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TNRooTrackerVtxModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_820_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ND::TNRooTrackerVtxModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__nd280ProjectDict_820_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ND::TNRooTrackerVtxModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ND::TNRooTrackerVtxModule G__TNDcLcLTNRooTrackerVtxModule;
static int G__nd280ProjectDict_820_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ND::TNRooTrackerVtxModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ND::TNRooTrackerVtxModule*) (soff+(sizeof(ND::TNRooTrackerVtxModule)*i)))->~G__TNDcLcLTNRooTrackerVtxModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ND::TNRooTrackerVtxModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ND::TNRooTrackerVtxModule*) (soff))->~G__TNDcLcLTNRooTrackerVtxModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__nd280ProjectDict_820_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ND::TNRooTrackerVtxModule* dest = (ND::TNRooTrackerVtxModule*) G__getstructoffset();
   *dest = *(ND::TNRooTrackerVtxModule*) libp->para[0].ref;
   const ND::TNRooTrackerVtxModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ND */

/* ND::TND280Event */

/* ND::TDataVector */

/* ND::TData */

/* ND::TDatum */

/* ND::TND280Context */

/* ND::TSHAHashValue */

/* ND::TAlignmentId */

/* ND::TND280Event::Header */

/* ND::TTrueVertex */

/* ND::TTrueParticle */

/* ND::TSubBaseObject */

/* ND::TSubBaseShowerObject */

/* ND::GRooTrackerVtx */

/* ND::JNuBeamFlux */

/* ND::RooTrackerVtxBase */

/* ND::NRooTrackerVtx */

/* ND::ToaAnalysisUtils */

/* ND::TBasicHeaderModule */

/* ND::TAnalysisHeaderModuleBase */

/* ND::TAnalysisModuleBase */

/* ND::TBasicDataQualityModule */

/* ND::TTruthTrajectoriesModule */

/* ND::TAnalysisTruthModuleBase */

/* ND::TTruthTrajectoriesModule::TTruthTrajectory */

/* ND::TTruthVerticesModule */

/* ND::TTruthVerticesModule::TTruthVertex */

/* ND::TP0DReconModule */

/* ND::TAnalysisReconModuleBase */

/* ND::TP0DReconModule::TP0DAlgoRes */

/* ND::TP0DReconModule::TP0DVertex */

/* ND::TP0DReconModule::TP0DParticle */

/* ND::TP0DReconModule::TP0DShower */

/* ND::TP0DReconModule::TP0DTrack */

/* ND::TP0DReconModule::TP0DNode */

/* ND::TP0DReconModule::TP0DHit */

/* ND::TP0DReconModule::TP0DCluster */

/* ND::TP0DECALReconModule */

/* ND::TP0DECALReconModule::TP0DECALReconTrack */

/* ND::TP0DECALReconModule::TP0DECALReconShower */

/* ND::TTrackerECALReconModule */

/* ND::TTrackerECALReconModule::TECALReconObject */

/* ND::TTrackerECALReconModule::TECALReconTrack */

/* ND::TTrackerECALReconModule::TECALReconShower */

/* ND::TTrackerECALReconModule::TECALReconCluster */

/* ND::TTrackerECALReconModule::TECALReconUnmatchedObject */

/* ND::TTrackerECALPi0ReconModule */

/* ND::TGlobalReconModule */

/* ND::TGlobalReconModule::TGlobalVertex */

/* ND::TGlobalReconModule::TVertexConstituent */

/* ND::TGlobalReconModule::TFgdCluster */

/* ND::TGlobalReconModule::TFgdTimeBin */

/* ND::TGlobalReconModule::TOutermostHits */

/* ND::TGlobalReconModule::TGlobalHit */

/* ND::TGlobalReconModule::TGlobalPID */

/* ND::TGlobalReconModule::TTPCObject */

/* ND::TGlobalReconModule::TFGDObject */

/* ND::TGlobalReconModule::TECALObject */

/* ND::TGlobalReconModule::TP0DObject */

/* ND::TGlobalReconModule::TSMRDObject */

/* ND::TGlobalReconModule::TTrackerObject */

/* ND::TGlobalReconModule::TGlobalPIDAlternate */

/* ND::TGlobalReconModule::TTPCOtherObject */

/* ND::TGlobalReconModule::TSMRDHit */

/* ND::TTrackerReconModule */

/* ND::TTrackerReconModule::TTrackerVertex */

/* ND::TTrackerReconModule::TTrackerResult */

/* ND::TTrackerReconModule::TTrueParticle */

/* ND::TTrackerReconModule::TTrackerConstituent */

/* ND::TTrackerReconModule::TTPCTrack */

/* ND::TTrackerReconModule::TFGDTrack */

/* ND::TTrackerReconModule::TTrackerNode */

/* ND::TTrackerReconModule::TTrackOther */

/* ND::TTrackerReconModule::TUnusedHit */

/* ND::TECALTestbeamModule */

/* ND::TSmrdReconModule */

/* ND::TSmrdReconModule::TSmrdReconHit */

/* ND::TSmrdReconModule::TSmrdIsoTrack */

/* ND::TLowLevelInfoModule */

/* ND::TLowLevelInfoModule::TLowLevelTFBDigit */

/* ND::TLowLevelInfoModule::TLowLevelHit */

/* ND::TFgdOnlyModule */

/* ND::TFgdOnlyModule::TFgd2DIsoTrack */

/* ND::TFgdOnlyModule::TFgd3DIsoTrack */

/* ND::TFgdOnlyModule::TFgd3DShowerPID */

/* ND::TFgdOnlyModule::TFgd3DShowerHyp */

/* ND::TFgdOnlyModule::TFgd2DCluster */

/* ND::TBeamSummaryDataModule */

/* ND::TBeamSummaryDataModule::TBeamSummaryData */

/* ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData */

/* ND::TReconPerformanceEvalModule */

/* ND::TReconPerformanceEvalModule::TGlobalReconObject */

/* ND::TReconPerformanceEvalModule::TGlobalTruthInfo */

/* ND::TExample2010aAnalysis1Module */

/* ND::TGeometrySummaryModule */

/* ND::TGeometrySummaryModule::TDetectorBoundingBox */

/* ND::TGeometrySummaryModule::TTPCMicroMegasVolumes */

/* ND::TGRooTrackerVtxModule */

/* ND::TRooTrackerVtxModuleBase */

/* ND::TNRooTrackerVtxModule */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncnd280ProjectDict {
 public:
  G__Sizep2memfuncnd280ProjectDict(): p(&G__Sizep2memfuncnd280ProjectDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncnd280ProjectDict::*p)();
};

size_t G__get_sizep2memfuncnd280ProjectDict()
{
  G__Sizep2memfuncnd280ProjectDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancend280ProjectDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event))) {
     ND::TND280Event *G__Lderived;
     G__Lderived=(ND::TND280Event*)0x1000;
     {
       ND::TDataVector *G__Lpbase=(ND::TDataVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TData *G__Lpbase=(ND::TData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       ND::TDatum *G__Lpbase=(ND::TDatum*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector))) {
     ND::TDataVector *G__Lderived;
     G__Lderived=(ND::TDataVector*)0x1000;
     {
       ND::TData *G__Lpbase=(ND::TData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TDatum *G__Lpbase=(ND::TDatum*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData))) {
     ND::TData *G__Lderived;
     G__Lderived=(ND::TData*)0x1000;
     {
       ND::TDatum *G__Lpbase=(ND::TDatum*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum))) {
     ND::TDatum *G__Lderived;
     G__Lderived=(ND::TDatum*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAlignmentId))) {
     ND::TAlignmentId *G__Lderived;
     G__Lderived=(ND::TAlignmentId*)0x1000;
     {
       ND::TSHAHashValue *G__Lpbase=(ND::TSHAHashValue*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAlignmentId),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSHAHashValue),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex))) {
     ND::TTrueVertex *G__Lderived;
     G__Lderived=(ND::TTrueVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle))) {
     ND::TTrueParticle *G__Lderived;
     G__Lderived=(ND::TTrueParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject))) {
     ND::TSubBaseObject *G__Lderived;
     G__Lderived=(ND::TSubBaseObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject))) {
     ND::TSubBaseShowerObject *G__Lderived;
     G__Lderived=(ND::TSubBaseShowerObject*)0x1000;
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx))) {
     ND::GRooTrackerVtx *G__Lderived;
     G__Lderived=(ND::GRooTrackerVtx*)0x1000;
     {
       ND::JNuBeamFlux *G__Lpbase=(ND::JNuBeamFlux*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::RooTrackerVtxBase *G__Lpbase=(ND::RooTrackerVtxBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux))) {
     ND::JNuBeamFlux *G__Lderived;
     G__Lderived=(ND::JNuBeamFlux*)0x1000;
     {
       ND::RooTrackerVtxBase *G__Lpbase=(ND::RooTrackerVtxBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase))) {
     ND::RooTrackerVtxBase *G__Lderived;
     G__Lderived=(ND::RooTrackerVtxBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx))) {
     ND::NRooTrackerVtx *G__Lderived;
     G__Lderived=(ND::NRooTrackerVtx*)0x1000;
     {
       ND::JNuBeamFlux *G__Lpbase=(ND::JNuBeamFlux*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::RooTrackerVtxBase *G__Lpbase=(ND::RooTrackerVtxBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils))) {
     ND::ToaAnalysisUtils *G__Lderived;
     G__Lderived=(ND::ToaAnalysisUtils*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule))) {
     ND::TBasicHeaderModule *G__Lderived;
     G__Lderived=(ND::TBasicHeaderModule*)0x1000;
     {
       ND::TAnalysisHeaderModuleBase *G__Lpbase=(ND::TAnalysisHeaderModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase))) {
     ND::TAnalysisHeaderModuleBase *G__Lderived;
     G__Lderived=(ND::TAnalysisHeaderModuleBase*)0x1000;
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase))) {
     ND::TAnalysisModuleBase *G__Lderived;
     G__Lderived=(ND::TAnalysisModuleBase*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule))) {
     ND::TBasicDataQualityModule *G__Lderived;
     G__Lderived=(ND::TBasicDataQualityModule*)0x1000;
     {
       ND::TAnalysisHeaderModuleBase *G__Lpbase=(ND::TAnalysisHeaderModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule))) {
     ND::TTruthTrajectoriesModule *G__Lderived;
     G__Lderived=(ND::TTruthTrajectoriesModule*)0x1000;
     {
       ND::TAnalysisTruthModuleBase *G__Lpbase=(ND::TAnalysisTruthModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase))) {
     ND::TAnalysisTruthModuleBase *G__Lderived;
     G__Lderived=(ND::TAnalysisTruthModuleBase*)0x1000;
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory))) {
     ND::TTruthTrajectoriesModule::TTruthTrajectory *G__Lderived;
     G__Lderived=(ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule))) {
     ND::TTruthVerticesModule *G__Lderived;
     G__Lderived=(ND::TTruthVerticesModule*)0x1000;
     {
       ND::TAnalysisTruthModuleBase *G__Lpbase=(ND::TAnalysisTruthModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex))) {
     ND::TTruthVerticesModule::TTruthVertex *G__Lderived;
     G__Lderived=(ND::TTruthVerticesModule::TTruthVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule))) {
     ND::TP0DReconModule *G__Lderived;
     G__Lderived=(ND::TP0DReconModule*)0x1000;
     {
       ND::TAnalysisReconModuleBase *G__Lpbase=(ND::TAnalysisReconModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase))) {
     ND::TAnalysisReconModuleBase *G__Lderived;
     G__Lderived=(ND::TAnalysisReconModuleBase*)0x1000;
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes))) {
     ND::TP0DReconModule::TP0DAlgoRes *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DAlgoRes*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex))) {
     ND::TP0DReconModule::TP0DVertex *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle))) {
     ND::TP0DReconModule::TP0DParticle *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower))) {
     ND::TP0DReconModule::TP0DShower *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DShower*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack))) {
     ND::TP0DReconModule::TP0DTrack *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode))) {
     ND::TP0DReconModule::TP0DNode *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DNode*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit))) {
     ND::TP0DReconModule::TP0DHit *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster))) {
     ND::TP0DReconModule::TP0DCluster *G__Lderived;
     G__Lderived=(ND::TP0DReconModule::TP0DCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule))) {
     ND::TP0DECALReconModule *G__Lderived;
     G__Lderived=(ND::TP0DECALReconModule*)0x1000;
     {
       ND::TAnalysisReconModuleBase *G__Lpbase=(ND::TAnalysisReconModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack))) {
     ND::TP0DECALReconModule::TP0DECALReconTrack *G__Lderived;
     G__Lderived=(ND::TP0DECALReconModule::TP0DECALReconTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower))) {
     ND::TP0DECALReconModule::TP0DECALReconShower *G__Lderived;
     G__Lderived=(ND::TP0DECALReconModule::TP0DECALReconShower*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule))) {
     ND::TTrackerECALReconModule *G__Lderived;
     G__Lderived=(ND::TTrackerECALReconModule*)0x1000;
     {
       ND::TAnalysisReconModuleBase *G__Lpbase=(ND::TAnalysisReconModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject))) {
     ND::TTrackerECALReconModule::TECALReconObject *G__Lderived;
     G__Lderived=(ND::TTrackerECALReconModule::TECALReconObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack))) {
     ND::TTrackerECALReconModule::TECALReconTrack *G__Lderived;
     G__Lderived=(ND::TTrackerECALReconModule::TECALReconTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower))) {
     ND::TTrackerECALReconModule::TECALReconShower *G__Lderived;
     G__Lderived=(ND::TTrackerECALReconModule::TECALReconShower*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster))) {
     ND::TTrackerECALReconModule::TECALReconCluster *G__Lderived;
     G__Lderived=(ND::TTrackerECALReconModule::TECALReconCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject))) {
     ND::TTrackerECALReconModule::TECALReconUnmatchedObject *G__Lderived;
     G__Lderived=(ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule))) {
     ND::TTrackerECALPi0ReconModule *G__Lderived;
     G__Lderived=(ND::TTrackerECALPi0ReconModule*)0x1000;
     {
       ND::TAnalysisReconModuleBase *G__Lpbase=(ND::TAnalysisReconModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule))) {
     ND::TGlobalReconModule *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule*)0x1000;
     {
       ND::TAnalysisReconModuleBase *G__Lpbase=(ND::TAnalysisReconModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex))) {
     ND::TGlobalReconModule::TGlobalVertex *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TGlobalVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent))) {
     ND::TGlobalReconModule::TVertexConstituent *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TVertexConstituent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster))) {
     ND::TGlobalReconModule::TFgdCluster *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TFgdCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin))) {
     ND::TGlobalReconModule::TFgdTimeBin *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TFgdTimeBin*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits))) {
     ND::TGlobalReconModule::TOutermostHits *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TOutermostHits*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit))) {
     ND::TGlobalReconModule::TGlobalHit *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TGlobalHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID))) {
     ND::TGlobalReconModule::TGlobalPID *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TGlobalPID*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject))) {
     ND::TGlobalReconModule::TTPCObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TTPCObject*)0x1000;
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject))) {
     ND::TGlobalReconModule::TFGDObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TFGDObject*)0x1000;
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject))) {
     ND::TGlobalReconModule::TECALObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TECALObject*)0x1000;
     {
       ND::TSubBaseShowerObject *G__Lpbase=(ND::TSubBaseShowerObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject))) {
     ND::TGlobalReconModule::TP0DObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TP0DObject*)0x1000;
     {
       ND::TSubBaseShowerObject *G__Lpbase=(ND::TSubBaseShowerObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject))) {
     ND::TGlobalReconModule::TSMRDObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TSMRDObject*)0x1000;
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject))) {
     ND::TGlobalReconModule::TTrackerObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TTrackerObject*)0x1000;
     {
       ND::TSubBaseObject *G__Lpbase=(ND::TSubBaseObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate))) {
     ND::TGlobalReconModule::TGlobalPIDAlternate *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TGlobalPIDAlternate*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject))) {
     ND::TGlobalReconModule::TTPCOtherObject *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TTPCOtherObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit))) {
     ND::TGlobalReconModule::TSMRDHit *G__Lderived;
     G__Lderived=(ND::TGlobalReconModule::TSMRDHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule))) {
     ND::TTrackerReconModule *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule*)0x1000;
     {
       ND::TAnalysisReconModuleBase *G__Lpbase=(ND::TAnalysisReconModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex))) {
     ND::TTrackerReconModule::TTrackerVertex *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrackerVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult))) {
     ND::TTrackerReconModule::TTrackerResult *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrackerResult*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle))) {
     ND::TTrackerReconModule::TTrueParticle *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrueParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent))) {
     ND::TTrackerReconModule::TTrackerConstituent *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrackerConstituent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack))) {
     ND::TTrackerReconModule::TTPCTrack *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTPCTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack))) {
     ND::TTrackerReconModule::TFGDTrack *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TFGDTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode))) {
     ND::TTrackerReconModule::TTrackerNode *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrackerNode*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther))) {
     ND::TTrackerReconModule::TTrackOther *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TTrackOther*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit))) {
     ND::TTrackerReconModule::TUnusedHit *G__Lderived;
     G__Lderived=(ND::TTrackerReconModule::TUnusedHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule))) {
     ND::TECALTestbeamModule *G__Lderived;
     G__Lderived=(ND::TECALTestbeamModule*)0x1000;
     {
       ND::TAnalysisReconModuleBase *G__Lpbase=(ND::TAnalysisReconModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule))) {
     ND::TSmrdReconModule *G__Lderived;
     G__Lderived=(ND::TSmrdReconModule*)0x1000;
     {
       ND::TAnalysisReconModuleBase *G__Lpbase=(ND::TAnalysisReconModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit))) {
     ND::TSmrdReconModule::TSmrdReconHit *G__Lderived;
     G__Lderived=(ND::TSmrdReconModule::TSmrdReconHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack))) {
     ND::TSmrdReconModule::TSmrdIsoTrack *G__Lderived;
     G__Lderived=(ND::TSmrdReconModule::TSmrdIsoTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule))) {
     ND::TLowLevelInfoModule *G__Lderived;
     G__Lderived=(ND::TLowLevelInfoModule*)0x1000;
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit))) {
     ND::TLowLevelInfoModule::TLowLevelTFBDigit *G__Lderived;
     G__Lderived=(ND::TLowLevelInfoModule::TLowLevelTFBDigit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit))) {
     ND::TLowLevelInfoModule::TLowLevelHit *G__Lderived;
     G__Lderived=(ND::TLowLevelInfoModule::TLowLevelHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule))) {
     ND::TFgdOnlyModule *G__Lderived;
     G__Lderived=(ND::TFgdOnlyModule*)0x1000;
     {
       ND::TAnalysisReconModuleBase *G__Lpbase=(ND::TAnalysisReconModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack))) {
     ND::TFgdOnlyModule::TFgd2DIsoTrack *G__Lderived;
     G__Lderived=(ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack))) {
     ND::TFgdOnlyModule::TFgd3DIsoTrack *G__Lderived;
     G__Lderived=(ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID))) {
     ND::TFgdOnlyModule::TFgd3DShowerPID *G__Lderived;
     G__Lderived=(ND::TFgdOnlyModule::TFgd3DShowerPID*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp))) {
     ND::TFgdOnlyModule::TFgd3DShowerHyp *G__Lderived;
     G__Lderived=(ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster))) {
     ND::TFgdOnlyModule::TFgd2DCluster *G__Lderived;
     G__Lderived=(ND::TFgdOnlyModule::TFgd2DCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule))) {
     ND::TBeamSummaryDataModule *G__Lderived;
     G__Lderived=(ND::TBeamSummaryDataModule*)0x1000;
     {
       ND::TAnalysisHeaderModuleBase *G__Lpbase=(ND::TAnalysisHeaderModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData))) {
     ND::TBeamSummaryDataModule::TBeamSummaryData *G__Lderived;
     G__Lderived=(ND::TBeamSummaryDataModule::TBeamSummaryData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData))) {
     ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData *G__Lderived;
     G__Lderived=(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule))) {
     ND::TReconPerformanceEvalModule *G__Lderived;
     G__Lderived=(ND::TReconPerformanceEvalModule*)0x1000;
     {
       ND::TAnalysisReconModuleBase *G__Lpbase=(ND::TAnalysisReconModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject))) {
     ND::TReconPerformanceEvalModule::TGlobalReconObject *G__Lderived;
     G__Lderived=(ND::TReconPerformanceEvalModule::TGlobalReconObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo))) {
     ND::TReconPerformanceEvalModule::TGlobalTruthInfo *G__Lderived;
     G__Lderived=(ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module))) {
     ND::TExample2010aAnalysis1Module *G__Lderived;
     G__Lderived=(ND::TExample2010aAnalysis1Module*)0x1000;
     {
       ND::TAnalysisReconModuleBase *G__Lpbase=(ND::TAnalysisReconModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule))) {
     ND::TGeometrySummaryModule *G__Lderived;
     G__Lderived=(ND::TGeometrySummaryModule*)0x1000;
     {
       ND::TAnalysisHeaderModuleBase *G__Lpbase=(ND::TAnalysisHeaderModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox))) {
     ND::TGeometrySummaryModule::TDetectorBoundingBox *G__Lderived;
     G__Lderived=(ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes))) {
     ND::TGeometrySummaryModule::TTPCMicroMegasVolumes *G__Lderived;
     G__Lderived=(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule))) {
     ND::TGRooTrackerVtxModule *G__Lderived;
     G__Lderived=(ND::TGRooTrackerVtxModule*)0x1000;
     {
       ND::TRooTrackerVtxModuleBase *G__Lpbase=(ND::TRooTrackerVtxModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisTruthModuleBase *G__Lpbase=(ND::TAnalysisTruthModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase))) {
     ND::TRooTrackerVtxModuleBase *G__Lderived;
     G__Lderived=(ND::TRooTrackerVtxModuleBase*)0x1000;
     {
       ND::TAnalysisTruthModuleBase *G__Lpbase=(ND::TAnalysisTruthModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule))) {
     ND::TNRooTrackerVtxModule *G__Lderived;
     G__Lderived=(ND::TNRooTrackerVtxModule*)0x1000;
     {
       ND::TRooTrackerVtxModuleBase *G__Lpbase=(ND::TRooTrackerVtxModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ND::TAnalysisTruthModuleBase *G__Lpbase=(ND::TAnalysisTruthModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       ND::TAnalysisModuleBase *G__Lpbase=(ND::TAnalysisModuleBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule),G__get_linked_tagnum(&G__nd280ProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablend280ProjectDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ND::TDatum*>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TLorentzVector>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector3>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float> >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<short> >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<short,allocator<short> > >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TPRegexp>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETPRegexpcOallocatorlETPRegexpgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETPRegexpcOallocatorlETPRegexpgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETPRegexpcOallocatorlETPRegexpgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETPRegexpcOallocatorlETPRegexpgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETPRegexpcOallocatorlETPRegexpgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,short>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEunsignedsPintcOshortcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,short>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEunsignedsPintcOshortcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,short,less<unsigned int> >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEunsignedsPintcOshortcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector3*>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVector3mUcOallocatorlETVector3mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVector3mUcOallocatorlETVector3mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,int>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<std::string,int> >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,int> >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::pair<int,const TGeoNode*> >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<int,const TGeoNode*> >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<int,const TGeoNode*>,less<int> >",117,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ND */
static void G__setup_memvarND(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_ND));
   {
   }
   G__tag_memvar_reset();
}


   /* ND::TND280Event */
static void G__setup_memvarNDcLcLTND280Event(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event));
   { ND::TND280Event *p; p=(ND::TND280Event*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fContext)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Context),-1,-1,1,"fContext=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fGeometryHash)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSHAHashValue),-1,-1,1,"fGeometryHash=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fAlignmentId)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAlignmentId),-1,-1,1,"fAlignmentId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHeader)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280EventcLcLHeader),-1,-1,1,"fHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TDataVector */
static void G__setup_memvarNDcLcLTDataVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector));
   { ND::TDataVector *p; p=(ND::TDataVector*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fVector)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR),G__defined_typename("vector<ND::TDatum*>"),-1,1,"fVector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TData */
static void G__setup_memvarNDcLcLTData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData));
   { ND::TData *p; p=(ND::TData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TDatum */
static void G__setup_memvarNDcLcLTDatum(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum));
   { ND::TDatum *p; p=(ND::TDatum*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fParent)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum),-1,-1,1,"fParent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TND280Context */
static void G__setup_memvarNDcLcLTND280Context(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Context));
   { ND::TND280Context *p; p=(ND::TND280Context*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280ContextcLcLTime),-1,-2,1,G__FastAllocString(2048).Format("kDefault_Time=%lldLL",(long long)ND::TND280Context::kDefault_Time).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPartition)-(long)(p)),105,0,0,-1,-1,-1,1,"fPartition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRun)-(long)(p)),105,0,0,-1,-1,-1,1,"fRun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSubRun)-(long)(p)),105,0,0,-1,-1,-1,1,"fSubRun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEvent)-(long)(p)),105,0,0,-1,-1,-1,1,"fEvent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSpill)-(long)(p)),105,0,0,-1,-1,-1,1,"fSpill=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeStamp)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fTimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TSHAHashValue */
static void G__setup_memvarNDcLcLTSHAHashValue(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSHAHashValue));
   { ND::TSHAHashValue *p; p=(ND::TSHAHashValue*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fHash)-(long)(p)),104,0,0,-1,-1,-1,1,"fHash[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TAlignmentId */
static void G__setup_memvarNDcLcLTAlignmentId(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAlignmentId));
   { ND::TAlignmentId *p; p=(ND::TAlignmentId*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fDocString)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"fDocString=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TND280Event::Header */
static void G__setup_memvarNDcLcLTND280EventcLcLHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280EventcLcLHeader));
   { ND::TND280Event::Header *p; p=(ND::TND280Event::Header*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fRecordType)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fRecordType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeStamp)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fTimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRunType)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fRunType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fErrorCode)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fErrorCode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTriggerWord)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"fTriggerWord=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMCMSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fMCMSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMCMSubSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fMCMSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMCMTimeSinceBusy)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fMCMTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fP0DSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fP0DSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fP0DSubSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fP0DSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fP0DTimeSinceBusy)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fP0DTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTPCSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fTPCSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTPCSubSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fTPCSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTPCTimeSinceBusy)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fTPCTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFGDSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fFGDSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFGDSubSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fFGDSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFGDTimeSinceBusy)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fFGDTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fECalSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fECalSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fECalSubSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fECalSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fECalTimeSinceBusy)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fECalTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSMRDSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fSMRDSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSMRDSubSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fSMRDSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSMRDTimeSinceBusy)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fSMRDTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fINGRIDSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fINGRIDSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fINGRIDSubSecond)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fINGRIDSubSecond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fINGRIDTimeSinceBusy)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fINGRIDTimeSinceBusy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCTMTriggerPattern)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"fCTMTriggerPattern[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFGDCTMTriggerPattern)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"fFGDCTMTriggerPattern[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrueVertex */
static void G__setup_memvarNDcLcLTTrueVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex));
   { ND::TTrueVertex *p; p=(ND::TTrueVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pur)-(long)(p)),100,0,0,-1,-1,-1,1,"Pur=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eff)-(long)(p)),100,0,0,-1,-1,-1,1,"Eff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrueParticle */
static void G__setup_memvarNDcLcLTTrueParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle));
   { ND::TTrueParticle *p; p=(ND::TTrueParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ID)-(long)(p)),105,0,0,-1,-1,-1,1,"ID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pur)-(long)(p)),100,0,0,-1,-1,-1,1,"Pur=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eff)-(long)(p)),100,0,0,-1,-1,-1,1,"Eff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex),-1,-1,1,"Vertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TSubBaseObject */
static void G__setup_memvarNDcLcLTSubBaseObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject));
   { ND::TSubBaseObject *p; p=(ND::TSubBaseObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),107,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Detector)-(long)(p)),105,0,0,-1,-1,-1,1,"Detector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"NNodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"NConstituents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),100,0,0,-1,-1,-1,1,"Length=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontPositionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPositionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"FrontDirection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"BackDirection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"FrontDirectionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"BackDirectionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentumError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentumError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueParticle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle),-1,-1,1,"TrueParticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TSubBaseShowerObject */
static void G__setup_memvarNDcLcLTSubBaseShowerObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject));
   { ND::TSubBaseShowerObject *p; p=(ND::TSubBaseShowerObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Cone)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Cone=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::GRooTrackerVtx */
static void G__setup_memvarNDcLcLGRooTrackerVtx(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx));
   { ND::GRooTrackerVtx *p; p=(ND::GRooTrackerVtx*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->EvtCode)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TObjString),-1,-1,1,"EvtCode=",0,"generator-specific string with 'event code'");
   G__memvar_setup((void*)((long)(&p->EvtNum)-(long)(p)),105,0,0,-1,-1,-1,1,"EvtNum=",0,"event num.");
   G__memvar_setup((void*)((long)(&p->EvtXSec)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtXSec=",0,"cross section for selected event (1E-38 cm2)");
   G__memvar_setup((void*)((long)(&p->EvtDXSec)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtDXSec=",0,"cross section for selected event kinematics (1E-38 cm2 /{K^n})");
   G__memvar_setup((void*)((long)(&p->EvtWght)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtWght=",0,"weight for that event");
   G__memvar_setup((void*)((long)(&p->EvtProb)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtProb=",0,"probability for that event (given cross section, path lengths, etc)");
   G__memvar_setup((void*)((long)(&p->EvtVtx)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtVtx[4]=",0,"event vertex position in detector coord syst (SI)");
   G__memvar_setup((void*)((long)(&p->StdHepN)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepN=",0,"number of particles in particle array ");
   G__memvar_setup((void*)((long)(&p->StdHepPdg)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepPdg[100]=",0,"pdg codes (& generator specific codes for pseudoparticles)");
   G__memvar_setup((void*)((long)(&p->StdHepRescat)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepRescat[100]=",0,"generator-specific status code");
   G__memvar_setup((void*)((long)(&p->StdHepStatus)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepStatus[100]=",0,"generator-specific status code");
   G__memvar_setup((void*)((long)(&p->StdHepX4)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepX4[100][4]=",0,"4-x (x, y, z, t) of particle in hit nucleus frame (fm)");
   G__memvar_setup((void*)((long)(&p->StdHepP4)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepP4[100][4]=",0,"4-p (px,py,pz,E) of particle in LAB frame (GeV)");
   G__memvar_setup((void*)((long)(&p->StdHepPolz)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepPolz[100][3]=",0,"polarization vector");
   G__memvar_setup((void*)((long)(&p->StdHepFd)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepFd[100]=",0,"first daughter");
   G__memvar_setup((void*)((long)(&p->StdHepLd)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepLd[100]=",0,"last  daughter ");
   G__memvar_setup((void*)((long)(&p->StdHepFm)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepFm[100]=",0,"first mother");
   G__memvar_setup((void*)((long)(&p->StdHepLm)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepLm[100]=",0,"last  mother");
   G__memvar_setup((void*)((long)(&p->G2NeutEvtCode)-(long)(p)),105,0,0,-1,-1,-1,1,"G2NeutEvtCode=",0,"NEUT-like reaction code for the GENIE event   ");
   G__memvar_setup((void*)((long)(&p->GeomPath)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TObjString),-1,-1,1,"GeomPath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TObjString),-1,-1,1,"GeneratorName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigFileName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TObjString),-1,-1,1,"OrigFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigTreeName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TObjString),-1,-1,1,"OrigTreeName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigEvtNum)-(long)(p)),105,0,0,-1,-1,-1,1,"OrigEvtNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigTreeEntries)-(long)(p)),105,0,0,-1,-1,-1,1,"OrigTreeEntries=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigTreePOT)-(long)(p)),100,0,0,-1,-1,-1,1,"OrigTreePOT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TimeInSpill)-(long)(p)),100,0,0,-1,-1,-1,1,"TimeInSpill=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TruthVertexID)-(long)(p)),105,0,0,-1,-1,-1,1,"TruthVertexID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::JNuBeamFlux */
static void G__setup_memvarNDcLcLJNuBeamFlux(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux));
   { ND::JNuBeamFlux *p; p=(ND::JNuBeamFlux*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->NuFluxEntry)-(long)(p)),108,0,0,-1,-1,-1,1,"NuFluxEntry=",0,"corresponding entry in orig flux file");
   G__memvar_setup((void*)((long)(&p->NuFileName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TObjString),-1,-1,1,"NuFileName=",0,"orig flux file name");
   G__memvar_setup((void*)((long)(&p->NuParentPdg)-(long)(p)),105,0,0,-1,-1,-1,1,"NuParentPdg=",0,"parent hadron pdg code");
   G__memvar_setup((void*)((long)(&p->NuParentDecMode)-(long)(p)),105,0,0,-1,-1,-1,1,"NuParentDecMode=",0,"parent hadron decay mode");
   G__memvar_setup((void*)((long)(&p->NuParentDecP4)-(long)(p)),100,0,0,-1,-1,-1,1,"NuParentDecP4[4]=",0,"parent hadron 4-momentum at decay");
   G__memvar_setup((void*)((long)(&p->NuParentDecX4)-(long)(p)),100,0,0,-1,-1,-1,1,"NuParentDecX4[4]=",0,"parent hadron 4-position at decay ");
   G__memvar_setup((void*)((long)(&p->NuCospibm)-(long)(p)),102,0,0,-1,-1,-1,1,"NuCospibm=",0,"parent hadron cos(theta) relative to beam at decay");
   G__memvar_setup((void*)((long)(&p->NuNorm)-(long)(p)),102,0,0,-1,-1,-1,1,"NuNorm=",0,"Normalization weight ");
   G__memvar_setup((void*)((long)(&p->NuParentProP4)-(long)(p)),100,0,0,-1,-1,-1,1,"NuParentProP4[4]=",0,"parent hadron 4-momentum at production ");
   G__memvar_setup((void*)((long)(&p->NuParentProX4)-(long)(p)),100,0,0,-1,-1,-1,1,"NuParentProX4[4]=",0,"parent hadron 4-position at production  ");
   G__memvar_setup((void*)((long)(&p->NuCospi0bm)-(long)(p)),102,0,0,-1,-1,-1,1,"NuCospi0bm=",0,"parent hadron cos(theta) relative to beam at production");
   G__memvar_setup((void*)((long)(&p->NuRnu)-(long)(p)),102,0,0,-1,-1,-1,1,"NuRnu=",0,"neutrino r position at ND5/6 plane ");
   G__memvar_setup((void*)((long)(&p->NuXnu)-(long)(p)),102,0,0,-1,-1,-1,1,"NuXnu[2]=",0,"neutrino (x,y) position at ND5/6 plane ");
   G__memvar_setup((void*)((long)(&p->NuIdfd)-(long)(p)),105,0,0,-1,-1,-1,1,"NuIdfd=",0,"Detector ID");
   G__memvar_setup((void*)((long)(&p->NuGipart)-(long)(p)),105,0,0,-1,-1,-1,1,"NuGipart=",0,"primary particle ID  ");
   G__memvar_setup((void*)((long)(&p->NuGpos0)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGpos0[3]=",0,"primary particle starting point ");
   G__memvar_setup((void*)((long)(&p->NuGvec0)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGvec0[3]=",0,"primary particle direction at starting point ");
   G__memvar_setup((void*)((long)(&p->NuGamom0)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGamom0=",0,"momentum of the primary particle at the starting point ");
   G__memvar_setup((void*)((long)(&p->NuNg)-(long)(p)),105,0,0,-1,-1,-1,1,"NuNg=",0,"Number of interaction steps ");
   G__memvar_setup((void*)((long)(&p->NuGp)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGp[12][3]=",0,"Momentum of ancestor particle ");
   G__memvar_setup((void*)((long)(&p->NuGcosbm)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGcosbm[12]=",0,"Ancestor particle cos(theta) relative to beam");
   G__memvar_setup((void*)((long)(&p->NuGv)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGv[12][3]=",0,"Position of ancestor particle ");
   G__memvar_setup((void*)((long)(&p->NuGpid)-(long)(p)),105,0,0,-1,-1,-1,1,"NuGpid[12]=",0,"PDG ancestor particle ID ");
   G__memvar_setup((void*)((long)(&p->NuGmec)-(long)(p)),105,0,0,-1,-1,-1,1,"NuGmec[12]=",0,"particle production mechanism of ancestor particle");
   G__memvar_setup((void*)((long)(&p->NuEnusk)-(long)(p)),102,0,0,-1,-1,-1,1,"NuEnusk=",0,"Neutrino Energy at SK ");
   G__memvar_setup((void*)((long)(&p->NuNormsk)-(long)(p)),102,0,0,-1,-1,-1,1,"NuNormsk=",0,"Normalization weight at SK ");
   G__memvar_setup((void*)((long)(&p->NuAnorm)-(long)(p)),102,0,0,-1,-1,-1,1,"NuAnorm=",0,"ND Acceptance Weight ");
   G__memvar_setup((void*)((long)(&p->NuGmat)-(long)(p)),105,0,0,-1,-1,-1,1,"NuGmat[12]=",0,"material in which the particle originates");
   G__memvar_setup((void*)((long)(&p->NuGdistc)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGdistc[12]=",0,"distance traveled through carbon");
   G__memvar_setup((void*)((long)(&p->NuGdistal)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGdistal[12]=",0,"distance traveled through aluminum");
   G__memvar_setup((void*)((long)(&p->NuGdistti)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGdistti[12]=",0,"distance traveled through titanium");
   G__memvar_setup((void*)((long)(&p->NuGdistfe)-(long)(p)),102,0,0,-1,-1,-1,1,"NuGdistfe[12]=",0,"distance traveled through iron");
   G__memvar_setup((void*)((long)(&p->NuVersion)-(long)(p)),102,0,0,-1,-1,-1,1,"NuVersion=",0,"jnubeam flux version ");
   G__memvar_setup((void*)((long)(&p->NuTuneid)-(long)(p)),105,0,0,-1,-1,-1,1,"NuTuneid=",0,"beam tune ID # ");
   G__memvar_setup((void*)((long)(&p->NuNtrig)-(long)(p)),105,0,0,-1,-1,-1,1,"NuNtrig=",0,"Number of triggers");
   G__memvar_setup((void*)((long)(&p->NuPint)-(long)(p)),105,0,0,-1,-1,-1,1,"NuPint=",0,"Interaction model ID ");
   G__memvar_setup((void*)((long)(&p->NuBpos)-(long)(p)),102,0,0,-1,-1,-1,1,"NuBpos[2]=",0,"Beam center position ");
   G__memvar_setup((void*)((long)(&p->NuBtilt)-(long)(p)),102,0,0,-1,-1,-1,1,"NuBtilt[2]=",0,"Beam angle  ");
   G__memvar_setup((void*)((long)(&p->NuBrms)-(long)(p)),102,0,0,-1,-1,-1,1,"NuBrms[2]=",0,"Beam RMS width ");
   G__memvar_setup((void*)((long)(&p->NuEmit)-(long)(p)),102,0,0,-1,-1,-1,1,"NuEmit[2]=",0,"Beam Emittance ");
   G__memvar_setup((void*)((long)(&p->NuAlpha)-(long)(p)),102,0,0,-1,-1,-1,1,"NuAlpha[2]=",0,"Beam Alpha ");
   G__memvar_setup((void*)((long)(&p->NuHcur)-(long)(p)),102,0,0,-1,-1,-1,1,"NuHcur[3]=",0,"Horn currents ");
   G__memvar_setup((void*)((long)(&p->NuRand)-(long)(p)),105,0,0,-1,-1,-1,1,"NuRand=",0,"Random seed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::RooTrackerVtxBase */
static void G__setup_memvarNDcLcLRooTrackerVtxBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase));
   { ND::RooTrackerVtxBase *p; p=(ND::RooTrackerVtxBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::NRooTrackerVtx */
static void G__setup_memvarNDcLcLNRooTrackerVtx(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx));
   { ND::NRooTrackerVtx *p; p=(ND::NRooTrackerVtx*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->EvtCode)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TObjString),-1,-1,1,"EvtCode=",0,"generator-specific string with 'event code'");
   G__memvar_setup((void*)((long)(&p->EvtNum)-(long)(p)),105,0,0,-1,-1,-1,1,"EvtNum=",0,"event num.");
   G__memvar_setup((void*)((long)(&p->EvtXSec)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtXSec=",0,"cross section for selected event (1E-38 cm2)");
   G__memvar_setup((void*)((long)(&p->EvtDXSec)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtDXSec=",0,"cross section for selected event kinematics (1E-38 cm2 /{K^n})");
   G__memvar_setup((void*)((long)(&p->EvtWght)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtWght=",0,"weight for that event");
   G__memvar_setup((void*)((long)(&p->EvtProb)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtProb=",0,"probability for that event (given cross section, path lengths, etc)");
   G__memvar_setup((void*)((long)(&p->EvtVtx)-(long)(p)),100,0,0,-1,-1,-1,1,"EvtVtx[4]=",0,"event vertex position in detector coord syst (SI)");
   G__memvar_setup((void*)((long)(&p->StdHepN)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepN=",0,"number of particles in particle array ");
   G__memvar_setup((void*)((long)(&p->StdHepPdg)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepPdg[100]=",0,"pdg codes (& generator specific codes for pseudoparticles)");
   G__memvar_setup((void*)((long)(&p->StdHepStatus)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepStatus[100]=",0,"generator-specific status code");
   G__memvar_setup((void*)((long)(&p->StdHepX4)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepX4[100][4]=",0,"4-x (x, y, z, t) of particle in hit nucleus frame (fm)");
   G__memvar_setup((void*)((long)(&p->StdHepP4)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepP4[100][4]=",0,"4-p (px,py,pz,E) of particle in LAB frame (GeV)");
   G__memvar_setup((void*)((long)(&p->StdHepPolz)-(long)(p)),100,0,0,-1,-1,-1,1,"StdHepPolz[100][3]=",0,"polarization vector");
   G__memvar_setup((void*)((long)(&p->StdHepFd)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepFd[100]=",0,"first daughter");
   G__memvar_setup((void*)((long)(&p->StdHepLd)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepLd[100]=",0,"last  daughter ");
   G__memvar_setup((void*)((long)(&p->StdHepFm)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepFm[100]=",0,"first mother");
   G__memvar_setup((void*)((long)(&p->StdHepLm)-(long)(p)),105,0,0,-1,-1,-1,1,"StdHepLm[100]=",0,"last  mother");
   G__memvar_setup((void*)((long)(&p->NEnvc)-(long)(p)),105,0,0,-1,-1,-1,1,"NEnvc=",0,"Number of particles ");
   G__memvar_setup((void*)((long)(&p->NEipvc)-(long)(p)),105,0,0,-1,-1,-1,1,"NEipvc[100]=",0,"PDG particle code");
   G__memvar_setup((void*)((long)(&p->NEpvc)-(long)(p)),102,0,0,-1,-1,-1,1,"NEpvc[100][3]=",0,"3-momentum (MeV/c)");
   G__memvar_setup((void*)((long)(&p->NEiorgvc)-(long)(p)),105,0,0,-1,-1,-1,1,"NEiorgvc[100]=",0,"Index of parent (Fortran convention: starting at 1)");
   G__memvar_setup((void*)((long)(&p->NEiflgvc)-(long)(p)),105,0,0,-1,-1,-1,1,"NEiflgvc[100]=",0,"Flag of final state:   ");
   G__memvar_setup((void*)((long)(&p->NEicrnvc)-(long)(p)),105,0,0,-1,-1,-1,1,"NEicrnvc[100]=",0,"Escaped nucleus (1) or not (0)");
   G__memvar_setup((void*)((long)(&p->NEcrsx)-(long)(p)),102,0,0,-1,-1,-1,1,"NEcrsx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NEcrsy)-(long)(p)),102,0,0,-1,-1,-1,1,"NEcrsy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NEcrsz)-(long)(p)),102,0,0,-1,-1,-1,1,"NEcrsz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NEcrsphi)-(long)(p)),102,0,0,-1,-1,-1,1,"NEcrsphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NEnvert)-(long)(p)),105,0,0,-1,-1,-1,1,"NEnvert=",0,"Number of vertices (including production and exit points)");
   G__memvar_setup((void*)((long)(&p->NEposvert)-(long)(p)),102,0,0,-1,-1,-1,1,"NEposvert[100][3]=",0,"Position of vertex within nucleus (fm)");
   G__memvar_setup((void*)((long)(&p->NEiflgvert)-(long)(p)),105,0,0,-1,-1,-1,1,"NEiflgvert[100]=",0,"Interaction type ");
   G__memvar_setup((void*)((long)(&p->NEnvcvert)-(long)(p)),105,0,0,-1,-1,-1,1,"NEnvcvert=",0,"Number of intermediate particles (including initial and final)");
   G__memvar_setup((void*)((long)(&p->NEdirvert)-(long)(p)),102,0,0,-1,-1,-1,1,"NEdirvert[300][3]=",0,"Direction of particle");
   G__memvar_setup((void*)((long)(&p->NEabspvert)-(long)(p)),102,0,0,-1,-1,-1,1,"NEabspvert[300]=",0,"Absolute momentum in the lab frame (MeV/c)");
   G__memvar_setup((void*)((long)(&p->NEabstpvert)-(long)(p)),102,0,0,-1,-1,-1,1,"NEabstpvert[300]=",0,"Absolute momentum in the nucleon rest frame (MeV/c)");
   G__memvar_setup((void*)((long)(&p->NEipvert)-(long)(p)),105,0,0,-1,-1,-1,1,"NEipvert[300]=",0,"PDG particle code");
   G__memvar_setup((void*)((long)(&p->NEiverti)-(long)(p)),105,0,0,-1,-1,-1,1,"NEiverti[300]=",0,"Index of initial vertex (pointing to nvert array above)");
   G__memvar_setup((void*)((long)(&p->NEivertf)-(long)(p)),105,0,0,-1,-1,-1,1,"NEivertf[300]=",0,"Index of final vertex (pointing to nvert array above)");
   G__memvar_setup((void*)((long)(&p->GeomPath)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TObjString),-1,-1,1,"GeomPath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeneratorName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TObjString),-1,-1,1,"GeneratorName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigFileName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TObjString),-1,-1,1,"OrigFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigTreeName)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TObjString),-1,-1,1,"OrigTreeName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigEvtNum)-(long)(p)),105,0,0,-1,-1,-1,1,"OrigEvtNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigTreeEntries)-(long)(p)),105,0,0,-1,-1,-1,1,"OrigTreeEntries=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OrigTreePOT)-(long)(p)),100,0,0,-1,-1,-1,1,"OrigTreePOT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TimeInSpill)-(long)(p)),100,0,0,-1,-1,-1,1,"TimeInSpill=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TruthVertexID)-(long)(p)),105,0,0,-1,-1,-1,1,"TruthVertexID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::ToaAnalysisUtils */
static void G__setup_memvarNDcLcLToaAnalysisUtils(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils));
   { ND::ToaAnalysisUtils *p; p=(ND::ToaAnalysisUtils*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtilscLcLEParticleCategory),-1,-2,1,G__FastAllocString(2048).Format("kDefault_EParticleCategory=%lldLL",(long long)ND::ToaAnalysisUtils::kDefault_EParticleCategory).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtilscLcLESubdetector),-1,-2,1,G__FastAllocString(2048).Format("kDefault_ESubdetector=%lldLL",(long long)ND::ToaAnalysisUtils::kDefault_ESubdetector).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TBasicHeaderModule */
static void G__setup_memvarNDcLcLTBasicHeaderModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule));
   { ND::TBasicHeaderModule *p; p=(ND::TBasicHeaderModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fSoftwareVersion)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"fSoftwareVersion[50]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSoftware)-(long)(p)),103,0,0,-1,-1,-1,1,"fSoftware=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TAnalysisHeaderModuleBase */
static void G__setup_memvarNDcLcLTAnalysisHeaderModuleBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase));
   { ND::TAnalysisHeaderModuleBase *p; p=(ND::TAnalysisHeaderModuleBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TAnalysisModuleBase */
static void G__setup_memvarNDcLcLTAnalysisModuleBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase));
   { ND::TAnalysisModuleBase *p; p=(ND::TAnalysisModuleBase*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fIsEnabled)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsEnabled=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIsUsedForPreselection)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsUsedForPreselection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fOutputTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TTree),-1,-1,1,"fOutputTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fBufferSize)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fBufferSize=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSplitLevel)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fSplitLevel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDescription)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"fDescription=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCVSTagName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"fCVSTagName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCVSID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"fCVSID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fRunID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fRunID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSubrunID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fSubrunID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEventID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fEventID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPreselected)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPreselected=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fInputDirectory)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"fInputDirectory=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TBasicDataQualityModule */
static void G__setup_memvarNDcLcLTBasicDataQualityModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule));
   { ND::TBasicDataQualityModule *p; p=(ND::TBasicDataQualityModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTruthTrajectoriesModule */
static void G__setup_memvarNDcLcLTTruthTrajectoriesModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule));
   { ND::TTruthTrajectoriesModule *p; p=(ND::TTruthTrajectoriesModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fMaxNTrajectories)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fMaxNTrajectories=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMinLength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMinLength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSaveOnlyP0DTrackerECALTrajectories)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fSaveOnlyP0DTrackerECALTrajectories=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSaveParentChain)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fSaveParentChain=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSaveList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<int>"),-1,1,"fSaveList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTraj)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTraj=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTrajLepton)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTrajLepton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTrajBaryon)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTrajBaryon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTrajMeson)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTrajMeson=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTrajPhoton)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTrajPhoton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTrajOtherCharged)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTrajOtherCharged=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTrajOtherNeutral)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTrajOtherNeutral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTrajOther)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTrajOther=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTrajectories)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fTrajectories=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TAnalysisTruthModuleBase */
static void G__setup_memvarNDcLcLTAnalysisTruthModuleBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase));
   { ND::TAnalysisTruthModuleBase *p; p=(ND::TAnalysisTruthModuleBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTruthTrajectoriesModule::TTruthTrajectory */
static void G__setup_memvarNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory));
   { ND::TTruthTrajectoriesModule::TTruthTrajectory *p; p=(ND::TTruthTrajectoriesModule::TTruthTrajectory*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDG)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PDG=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"Name=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Category)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Category=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->InitMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"InitMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->InitPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"InitPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FinalPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FinalPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParentID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ParentID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PrimaryID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PrimaryID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mass)-(long)(p)),100,0,0,-1,-1,-1,1,"Mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),105,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TraceSubdetectors)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"TraceSubdetectors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TraceInActive)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,1,"TraceInActive=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TraceEntrancePosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,1,"TraceEntrancePosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TraceExitPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,1,"TraceExitPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TraceEntranceMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,1,"TraceEntranceMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TraceExitMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,1,"TraceExitMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->InitSubdetector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"InitSubdetector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FinalSubdetector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"FinalSubdetector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EnteredSubdetector)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"EnteredSubdetector[13]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ExitedSubdetector)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"ExitedSubdetector[13]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EntrancePosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"EntrancePosition[13]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ExitPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"ExitPosition[13]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EntranceMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"EntranceMomentum[13]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ExitMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"ExitMomentum[13]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTruthVerticesModule */
static void G__setup_memvarNDcLcLTTruthVerticesModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule));
   { ND::TTruthVerticesModule *p; p=(ND::TTruthVerticesModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fMaxNVertices)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fMaxNVertices=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxFGD1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxFGD1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxFGD2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxFGD2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxP0D)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxP0D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxDsECal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxDsECal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxBrlECal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxBrlECal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxP0DECal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxP0DECal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxTPC1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxTPC1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxTPC2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxTPC2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxTPC3)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxTPC3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxSMRD)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxSMRD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxRestOfOffAxis)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxRestOfOffAxis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxINGRID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxINGRID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNVtxOther)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVtxOther=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVertices)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fVertices=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTruthVerticesModule::TTruthVertex */
static void G__setup_memvarNDcLcLTTruthVerticesModulecLcLTTruthVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex));
   { ND::TTruthVerticesModule::TTruthVertex *p; p=(ND::TTruthVerticesModule::TTruthVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Generator)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"Generator=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ReactionCode)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"ReactionCode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Subdetector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Subdetector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Fiducial)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Fiducial=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NPrimaryTraj)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NPrimaryTraj=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"PrimaryTrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NeutrinoPDG)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NeutrinoPDG=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NeutrinoMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"NeutrinoMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TargetPDG)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TargetPDG=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TargetMomentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"TargetMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule */
static void G__setup_memvarNDcLcLTP0DReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule));
   { ND::TP0DReconModule *p; p=(ND::TP0DReconModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fRejectAlgoResultList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETPRegexpcOallocatorlETPRegexpgRsPgR),G__defined_typename("vector<TPRegexp>"),-1,1,"fRejectAlgoResultList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTempHitMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEunsignedsPintcOshortcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOshortgRsPgRsPgR),G__defined_typename("map<UInt_t,short>"),-1,1,"fTempHitMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TAnalysisReconModuleBase */
static void G__setup_memvarNDcLcLTAnalysisReconModuleBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase));
   { ND::TAnalysisReconModuleBase *p; p=(ND::TAnalysisReconModuleBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DAlgoRes */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DAlgoRes(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes));
   { ND::TP0DReconModule::TP0DAlgoRes *p; p=(ND::TP0DReconModule::TP0DAlgoRes*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FullName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"FullName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AlgoResults)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"AlgoResults=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Parent)-(long)(p)),115,0,0,-1,-1,-1,1,"Parent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UsedHitCluster)-(long)(p)),115,0,0,-1,-1,-1,1,"UsedHitCluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UnusedHitCluster)-(long)(p)),115,0,0,-1,-1,-1,1,"UnusedHitCluster=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DVertex */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex));
   { ND::TP0DReconModule::TP0DVertex *p; p=(ND::TP0DReconModule::TP0DVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),102,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Fiducial)-(long)(p)),102,0,0,-1,-1,-1,1,"Fiducial=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DParticle */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle));
   { ND::TP0DReconModule::TP0DParticle *p; p=(ND::TP0DReconModule::TP0DParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),102,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SideDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"SideDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EndDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EndDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DirVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),102,0,0,-1,-1,-1,1,"Momentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),102,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->realPIDNames)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"realPIDNames=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->realPIDValues)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<vector<float> >"),-1,1,"realPIDValues=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->integerPIDNames)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"integerPIDNames=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->integerPIDValues)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),G__defined_typename("vector<vector<short> >"),-1,1,"integerPIDValues=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"PID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_weight)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"PID_weight=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DShower */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DShower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower));
   { ND::TP0DReconModule::TP0DShower *p; p=(ND::TP0DReconModule::TP0DShower*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),102,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SideDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"SideDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EndDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EndDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DirVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cone)-(long)(p)),102,0,0,-1,-1,-1,1,"Cone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),102,0,0,-1,-1,-1,1,"Width=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),102,0,0,-1,-1,-1,1,"Length=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DTrack */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack));
   { ND::TP0DReconModule::TP0DTrack *p; p=(ND::TP0DReconModule::TP0DTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),102,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SideDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"SideDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EndDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EndDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DirVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),102,0,0,-1,-1,-1,1,"Length=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DNode */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DNode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode));
   { ND::TP0DReconModule::TP0DNode *p; p=(ND::TP0DReconModule::TP0DNode*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DirVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirVariance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DHit */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit));
   { ND::TP0DReconModule::TP0DHit *p; p=(ND::TP0DReconModule::TP0DHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->GeomID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"GeomID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ChanID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"ChanID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),102,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),102,0,0,-1,-1,-1,1,"Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DReconModule::TP0DCluster */
static void G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster));
   { ND::TP0DReconModule::TP0DCluster *p; p=(ND::TP0DReconModule::TP0DCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cycle)-(long)(p)),115,0,0,-1,-1,-1,1,"Cycle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vertices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Vertices=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Particles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Tracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Showers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Showers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Clusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Clusters=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Nodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_PrimaryTrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_PrimaryTrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_TrajIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Truth_TrajIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_HitCount)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"Truth_HitCount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth_ChargeShare)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"Truth_ChargeShare=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NFiducialHits)-(long)(p)),115,0,0,-1,-1,-1,1,"NFiducialHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),102,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PosVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ValidDimensions)-(long)(p)),115,0,0,-1,-1,-1,1,"ValidDimensions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Moments)-(long)(p)),102,0,0,-1,-1,-1,1,"Moments[9]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DECALReconModule */
static void G__setup_memvarNDcLcLTP0DECALReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule));
   { ND::TP0DECALReconModule *p; p=(ND::TP0DECALReconModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DECALReconModule::TP0DECALReconTrack */
static void G__setup_memvarNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack));
   { ND::TP0DECALReconModule::TP0DECALReconTrack *p; p=(ND::TP0DECALReconModule::TP0DECALReconTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Curvature)-(long)(p)),100,0,0,-1,-1,-1,1,"Curvature=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Width=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AMR)-(long)(p)),100,0,0,-1,-1,-1,1,"AMR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CWTrackWidth)-(long)(p)),100,0,0,-1,-1,-1,1,"CWTrackWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Max_Ratio)-(long)(p)),100,0,0,-1,-1,-1,1,"Max_Ratio=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NormChargeSD)-(long)(p)),100,0,0,-1,-1,-1,1,"NormChargeSD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PathChargeRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PathChargeRatio=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrShval)-(long)(p)),100,0,0,-1,-1,-1,1,"TrShval=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BenCWPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"BenCWPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StackNo)-(long)(p)),105,0,0,-1,-1,-1,1,"StackNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TP0DECALReconModule::TP0DECALReconShower */
static void G__setup_memvarNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower));
   { ND::TP0DECALReconModule::TP0DECALReconShower *p; p=(ND::TP0DECALReconModule::TP0DECALReconShower*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ConeAngle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"ConeAngle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AMR)-(long)(p)),100,0,0,-1,-1,-1,1,"AMR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CWTrackWidth)-(long)(p)),100,0,0,-1,-1,-1,1,"CWTrackWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Max_Ratio)-(long)(p)),100,0,0,-1,-1,-1,1,"Max_Ratio=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NormChargeSD)-(long)(p)),100,0,0,-1,-1,-1,1,"NormChargeSD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PathChargeRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PathChargeRatio=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrShval)-(long)(p)),100,0,0,-1,-1,-1,1,"TrShval=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BenCWPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"BenCWPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StackNo)-(long)(p)),105,0,0,-1,-1,-1,1,"StackNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule */
static void G__setup_memvarNDcLcLTTrackerECALReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule));
   { ND::TTrackerECALReconModule *p; p=(ND::TTrackerECALReconModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNUnmatchedObjects)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNUnmatchedObjects=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIsMC)-(long)(p)),103,0,0,-1,-1,-1,1,"fIsMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fUnmatchedObjects)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fUnmatchedObjects=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule::TECALReconObject */
static void G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject));
   { ND::TTrackerECALReconModule::TECALReconObject *p; p=(ND::TTrackerECALReconModule::TECALReconObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Track)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack),-1,-1,1,"Track=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Shower)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower),-1,-1,1,"Shower=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cluster)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster),-1,-1,1,"Cluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G4ID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"G4ID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G4ID_Primary)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"G4ID_Primary=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Completeness_Primary)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Completeness_Primary=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cleanliness_Primary)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Cleanliness_Primary=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G4ID_Recursive)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"G4ID_Recursive=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Completeness_Recursive)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Completeness_Recursive=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cleanliness_Recursive)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Cleanliness_Recursive=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G4ID_Single)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"G4ID_Single=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Completeness_Single)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Completeness_Single=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cleanliness_Single)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Cleanliness_Single=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsTrackLike)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"IsTrackLike=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsShowerLike)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"IsShowerLike=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TimeBunch)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TimeBunch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NHits=",0,"/ Number of hits in this object.");
   G__memvar_setup((void*)((long)(&p->NIsXHits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NIsXHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NIsYHits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NIsYHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NIsZHits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NIsZHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NLayersHit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NLayersHit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxPerpBarHit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"maxPerpBarHit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxParaBarHit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"maxParaBarHit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->minBarHit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"minBarHit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mostUpStreamLayerHit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mostUpStreamLayerHit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mostDownStreamLayerHit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mostDownStreamLayerHit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TotalHitCharge)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"TotalHitCharge=",0,"/ Sum of charges of the consitituent hits in reconstructed object.");
   G__memvar_setup((void*)((long)(&p->AverageHitTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"AverageHitTime=",0,"/ Average time of hits in reconstructed object.");
   G__memvar_setup((void*)((long)(&p->Module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"Module=",0,"/ Name of ECAL module in which object was reconstructed.");
   G__memvar_setup((void*)((long)(&p->ObjectLength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ObjectLength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_AMR)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_AMR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_Circularity)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Circularity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_CircularityView0)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_CircularityView0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_CircularityView1)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_CircularityView1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_Angle)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Angle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_Max_Ratio)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Max_Ratio=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_ShowerAngle)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_ShowerAngle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_Asymmetry)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Asymmetry=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_MeanPosition)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_MeanPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_Qskew)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Qskew=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_ShowerWidth)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_ShowerWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_EMLikelihood)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_EMLikelihood=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_TrShval)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_TrShval=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_EMHadVal)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_EMHadVal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_TruncatedMaxRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_TruncatedMaxRatio=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_TransverseChargeRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_TransverseChargeRatio=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_NormalizedMipChi2)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_NormalizedMipChi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_NormalizedMipChi2AllLayers)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_NormalizedMipChi2AllLayers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_FrontBackRatio)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_FrontBackRatio=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_FrontBackRatioNumerator)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_FrontBackRatioNumerator=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_FrontBackRatioDenominator)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_FrontBackRatioDenominator=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Containment)-(long)(p)),100,0,0,-1,-1,-1,1,"Containment=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AverageZPosition)-(long)(p)),100,0,0,-1,-1,-1,1,"AverageZPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Result)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Result=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Uncertainty)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Uncertainty=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Likelihood_energyGrad)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Likelihood_energyGrad=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Likelihood_energy_qsumGrad)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Likelihood_energy_qsumGrad=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Likelihood_qsum_like)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Likelihood_qsum_like=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Para_QSum)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Para_QSum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Para_QMean)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Para_QMean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Para_QRMS)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Para_QRMS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Para_QSkew)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Para_QSkew=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergyFit_Para_QMax)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyFit_Para_QMax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_NDelayedCluster)-(long)(p)),100,0,0,-1,-1,-1,1,"MElectronTag_NDelayedCluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_NDelayedHits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_NDelayedHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_DeltaX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_DeltaX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_DeltaY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_DeltaY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_DeltaZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_DeltaZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_DeltaT)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_DeltaT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_EDep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_EDep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_TrackEnd)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_TrackEnd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Thrust)-(long)(p)),100,0,0,-1,-1,-1,1,"Thrust=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ThrustOrigin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"ThrustOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ThrustAxis)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"ThrustAxis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFNNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"KFNNodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFMultiTracksTPC)-(long)(p)),105,0,0,-1,-1,-1,1,"KFMultiTracksTPC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFMultiTracksECAL)-(long)(p)),105,0,0,-1,-1,-1,1,"KFMultiTracksECAL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFNDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"KFNDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFQuality)-(long)(p)),100,0,0,-1,-1,-1,1,"KFQuality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFParameter)-(long)(p)),100,0,0,-1,-1,-1,1,"KFParameter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFParameterNodes)-(long)(p)),100,0,0,-1,-1,-1,1,"KFParameterNodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFHitQuality)-(long)(p)),100,0,0,-1,-1,-1,1,"KFHitQuality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFIsMatched)-(long)(p)),103,0,0,-1,-1,-1,1,"KFIsMatched=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MatchingLikelihood)-(long)(p)),100,0,0,-1,-1,-1,1,"MatchingLikelihood=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FirstLayer)-(long)(p)),105,0,0,-1,-1,-1,1,"FirstLayer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LastLayer)-(long)(p)),105,0,0,-1,-1,-1,1,"LastLayer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHitsAtLayersWithManyHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHitsAtLayersWithManyHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NLayersOneHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NLayersOneHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NLayersTwoHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NLayersTwoHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NLayersThreeHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NLayersThreeHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NLayersFourHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NLayersFourHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NLayersFiveHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NLayersFiveHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NLayersSixHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NLayersSixHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NLayersSevenHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NLayersSevenHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FirstLayerManyHits)-(long)(p)),105,0,0,-1,-1,-1,1,"FirstLayerManyHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SecondLayerManyHits)-(long)(p)),105,0,0,-1,-1,-1,1,"SecondLayerManyHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ThirdLayerManyHits)-(long)(p)),105,0,0,-1,-1,-1,1,"ThirdLayerManyHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LastLayerManyHits)-(long)(p)),105,0,0,-1,-1,-1,1,"LastLayerManyHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxHitsInALayer)-(long)(p)),105,0,0,-1,-1,-1,1,"MaxHitsInALayer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxHitChargeLayer)-(long)(p)),105,0,0,-1,-1,-1,1,"MaxHitChargeLayer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pointing)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Pointing=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule::TECALReconTrack */
static void G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack));
   { ND::TTrackerECALReconModule::TECALReconTrack *p; p=(ND::TTrackerECALReconModule::TECALReconTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Curvature)-(long)(p)),100,0,0,-1,-1,-1,1,"Curvature=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PositionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Width=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule::TECALReconShower */
static void G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconShower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower));
   { ND::TTrackerECALReconModule::TECALReconShower *p; p=(ND::TTrackerECALReconModule::TECALReconShower*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ConeAngle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"ConeAngle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PositionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule::TECALReconCluster */
static void G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster));
   { ND::TTrackerECALReconModule::TECALReconCluster *p; p=(ND::TTrackerECALReconModule::TECALReconCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PositionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALReconModule::TECALReconUnmatchedObject */
static void G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject));
   { ND::TTrackerECALReconModule::TECALReconUnmatchedObject *p; p=(ND::TTrackerECALReconModule::TECALReconUnmatchedObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->View)-(long)(p)),105,0,0,-1,-1,-1,1,"View=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TotalHitCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"TotalHitCharge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AverageHitTime)-(long)(p)),100,0,0,-1,-1,-1,1,"AverageHitTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"FrontPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"BackPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mostUpStreamLayerHit)-(long)(p)),105,0,0,-1,-1,-1,1,"mostUpStreamLayerHit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mostDownStreamLayerHit)-(long)(p)),105,0,0,-1,-1,-1,1,"mostDownStreamLayerHit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G4ID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"G4ID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G4ID_Primary)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"G4ID_Primary=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G4ID_Recursive)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"G4ID_Recursive=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->G4ID_Single)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"G4ID_Single=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerECALPi0ReconModule */
static void G__setup_memvarNDcLcLTTrackerECALPi0ReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule));
   { ND::TTrackerECALPi0ReconModule *p; p=(ND::TTrackerECALPi0ReconModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule */
static void G__setup_memvarNDcLcLTGlobalReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule));
   { ND::TGlobalReconModule *p; p=(ND::TGlobalReconModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fRecPackInitialized)-(long)(p)),103,0,0,-1,-1,-1,1,"fRecPackInitialized=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fALLMODULES)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"fALLMODULES=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPassedDetector)-(long)(p)),103,0,0,-1,-1,-1,1,"fPassedDetector[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTestTPCInfo)-(long)(p)),103,0,0,-1,-1,-1,1,"fTestTPCInfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTPCPIDs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTPCPIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTPCPIDs)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fTPCPIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNSMRDBottomUnused)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNSMRDBottomUnused=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNSMRDLeftUnused)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNSMRDLeftUnused=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNSMRDRightUnused)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNSMRDRightUnused=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fP0DOutermostHits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits),-1,-1,1,"fP0DOutermostHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TGlobalVertex */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex));
   { ND::TGlobalReconModule::TGlobalVertex *p; p=(ND::TGlobalReconModule::TGlobalVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->PrimaryIndex)-(long)(p)),105,0,0,-1,-1,-1,1,"PrimaryIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Variance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NTrueVertices)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NTrueVertices=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueVertices)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"TrueVertices=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NConstituents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Constituents)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"Constituents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackTrueVertexObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex),-1,-1,1,"hackTrueVertexObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackVertexConstituentObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent),-1,-1,1,"hackVertexConstituentObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TVertexConstituent */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTVertexConstituent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent));
   { ND::TGlobalReconModule::TVertexConstituent *p; p=(ND::TGlobalReconModule::TVertexConstituent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),105,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Momentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID)-(long)(p)),105,0,0,-1,-1,-1,1,"PID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TFgdCluster */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTFgdCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster));
   { ND::TGlobalReconModule::TFgdCluster *p; p=(ND::TGlobalReconModule::TFgdCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->TotalCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"TotalCharge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TimeDisp)-(long)(p)),100,0,0,-1,-1,-1,1,"TimeDisp=",0,"time dispersion of the cluster                          ");
   G__memvar_setup((void*)((long)(&p->SpatialDisp)-(long)(p)),100,0,0,-1,-1,-1,1,"SpatialDisp=",0,"spatial dispersion of the cluster (distance between the two most far hits in the cluster)");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"number of hits in the cluster                         ");
   G__memvar_setup((void*)((long)(&p->PosRMS)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PosRMS=",0,"rms of the cluster position and time          ");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Variance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TFgdTimeBin */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTFgdTimeBin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin));
   { ND::TGlobalReconModule::TFgdTimeBin *p; p=(ND::TGlobalReconModule::TFgdTimeBin*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->minTime)-(long)(p)),100,0,0,-1,-1,-1,1,"minTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxTime)-(long)(p)),100,0,0,-1,-1,-1,1,"maxTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nHits)-(long)(p)),105,0,0,-1,-1,-1,1,"nHits[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rawChargeSum)-(long)(p)),100,0,0,-1,-1,-1,1,"rawChargeSum[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargePerLayer)-(long)(p)),102,0,0,-1,-1,-1,1,"chargePerLayer[2][30]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargeWeightedPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"chargeWeightedPos[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FGD1OutermostHits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits),-1,-1,1,"FGD1OutermostHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FGD2OutermostHits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits),-1,-1,1,"FGD2OutermostHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NFGD1Unused)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NFGD1Unused=",0,"Number of hits unused in FGD1   ");
   G__memvar_setup((void*)((long)(&p->FGD1Unused)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"FGD1Unused=",0,"The vector unused hits in FGD1");
   G__memvar_setup((void*)((long)(&p->NFGD2Unused)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NFGD2Unused=",0,"Number of hits unused in FGD2 ");
   G__memvar_setup((void*)((long)(&p->FGD2Unused)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"FGD2Unused=",0,"The vector unused hits in FGD2  ");
   G__memvar_setup((void*)((long)(&p->g4ID)-(long)(p)),105,0,0,-1,-1,-1,1,"g4ID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackFGDUnused)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hackFGDUnused=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TOutermostHits */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTOutermostHits(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits));
   { ND::TGlobalReconModule::TOutermostHits *p; p=(ND::TGlobalReconModule::TOutermostHits*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hitMinX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMinX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitMaxX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMaxX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitMinY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMinY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitMaxY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMaxY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitMinZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMinZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitMaxZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),-1,-1,1,"hitMaxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TGlobalHit */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit));
   { ND::TGlobalReconModule::TGlobalHit *p; p=(ND::TGlobalReconModule::TGlobalHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),100,0,0,-1,-1,-1,1,"Time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PositionError)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"PositionError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Type)-(long)(p)),105,0,0,-1,-1,-1,1,"Type=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TGlobalPID */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalPID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID));
   { ND::TGlobalReconModule::TGlobalPID *p; p=(ND::TGlobalReconModule::TGlobalPID*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BrokenUniqueIDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,1,"BrokenUniqueIDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Detectors)-(long)(p)),107,0,0,-1,-1,-1,1,"Detectors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DetectorUsed)-(long)(p)),103,0,0,-1,-1,-1,1,"DetectorUsed[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),107,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"NNodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"NConstituents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isForward)-(long)(p)),103,0,0,-1,-1,-1,1,"isForward=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SenseOK)-(long)(p)),103,0,0,-1,-1,-1,1,"SenseOK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cone)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Cone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),100,0,0,-1,-1,-1,1,"Width=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),100,0,0,-1,-1,-1,1,"Length=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParticleIds)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"ParticleIds=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PIDWeights)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"PIDWeights=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontPositionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPositionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"FrontDirection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"BackDirection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"FrontDirectionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"BackDirectionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentumError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentumError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PositionAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PositionAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PositionVarAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PositionVarAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DirectionAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirectionAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DirectionVarAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirectionVarAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MomentumAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MomentumErrorAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumErrorAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EntranceOK)-(long)(p)),105,0,0,-1,-1,-1,1,"EntranceOK[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ExitOK)-(long)(p)),105,0,0,-1,-1,-1,1,"ExitOK[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EntrancePosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"EntrancePosition[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ExitPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"ExitPosition[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EntranceDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"EntranceDirection[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ExitDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"ExitDirection[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EntranceMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"EntranceMomentum[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ExitMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"ExitMomentum[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EntrancePositionErr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"EntrancePositionErr[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ExitPositionErr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"ExitPositionErr[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EntranceDirectionErr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"EntranceDirectionErr[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ExitDirectionErr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"ExitDirectionErr[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EntranceMomentumErr)-(long)(p)),100,0,0,-1,-1,-1,1,"EntranceMomentumErr[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ExitMomentumErr)-(long)(p)),100,0,0,-1,-1,-1,1,"ExitMomentumErr[25]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHitsSaved)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NHitsSaved=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HitsSaved)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"HitsSaved=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueParticle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle),-1,-1,1,"TrueParticle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NTRACKERs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NTRACKERs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TRACKER)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"TRACKER=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NTPCs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NTPCs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TPC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"TPC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NFGDs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NFGDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FGD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"FGD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NECALs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NECALs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDsECALs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NDsECALs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NTrECALs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NTrECALs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ECAL)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"ECAL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NP0DECALs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NP0DECALs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->P0DECAL)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"P0DECAL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NP0Ds)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NP0Ds=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->P0D)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"P0D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NSMRDs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NSMRDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SMRD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"SMRD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NAlternates)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NAlternates=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Alternates)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"Alternates=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackTPCObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject),-1,-1,1,"hackTPCObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackFGDObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject),-1,-1,1,"hackFGDObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackECALObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject),-1,-1,1,"hackECALObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackP0DObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject),-1,-1,1,"hackP0DObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackSMRDObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject),-1,-1,1,"hackSMRDObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackTrackerObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject),-1,-1,1,"hackTrackerObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackGlobalPIDAlternate)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate),-1,-1,1,"hackGlobalPIDAlternate=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TTPCObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTTPCObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject));
   { ND::TGlobalReconModule::TTPCObject *p; p=(ND::TGlobalReconModule::TTPCObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NTrun)-(long)(p)),100,0,0,-1,-1,-1,1,"NTrun=",0,"70% of the number of cluster");
   G__memvar_setup((void*)((long)(&p->Ccorr)-(long)(p)),100,0,0,-1,-1,-1,1,"Ccorr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PullEle)-(long)(p)),100,0,0,-1,-1,-1,1,"PullEle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PullMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"PullMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PullPion)-(long)(p)),100,0,0,-1,-1,-1,1,"PullPion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PullKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"PullKaon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PullProton)-(long)(p)),100,0,0,-1,-1,-1,1,"PullProton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dEdxexpEle)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpEle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dEdxexpMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dEdxexpPion)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpPion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dEdxexpKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpKaon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dEdxexpProton)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpProton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SigmaEle)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaEle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SigmaMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SigmaPion)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaPion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SigmaKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaKaon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SigmaProton)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaProton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TFGDObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTFGDObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject));
   { ND::TGlobalReconModule::TFGDObject *p; p=(ND::TGlobalReconModule::TFGDObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->avgtime)-(long)(p)),100,0,0,-1,-1,-1,1,"avgtime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargePerLayer)-(long)(p)),102,0,0,-1,-1,-1,1,"chargePerLayer[30]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargePerLayerAttenCorr)-(long)(p)),102,0,0,-1,-1,-1,1,"chargePerLayerAttenCorr[30]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdContainment)-(long)(p)),105,0,0,-1,-1,-1,1,"fgdContainment=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),100,0,0,-1,-1,-1,1,"E=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),100,0,0,-1,-1,-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_exp_muon)-(long)(p)),100,0,0,-1,-1,-1,1,"E_exp_muon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_exp_pion)-(long)(p)),100,0,0,-1,-1,-1,1,"E_exp_pion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_exp_proton)-(long)(p)),100,0,0,-1,-1,-1,1,"E_exp_proton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigmaE_muon)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaE_muon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigmaE_pion)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaE_pion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigmaE_proton)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaE_proton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PullMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"PullMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PullPion)-(long)(p)),100,0,0,-1,-1,-1,1,"PullPion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PullProton)-(long)(p)),100,0,0,-1,-1,-1,1,"PullProton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PullNotSet)-(long)(p)),100,0,0,-1,-1,-1,1,"PullNotSet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isFgdVA)-(long)(p)),103,0,0,-1,-1,-1,1,"isFgdVA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isFgdVA_flag)-(long)(p)),103,0,0,-1,-1,-1,1,"isFgdVA_flag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_upMinZ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_upMinZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_downMaxZ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_downMaxZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_upCosTheta)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_upCosTheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_downCosTheta)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_downCosTheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_otherUpQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_otherUpQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_otherDownQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_otherDownQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_verQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_verLayQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verLayQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_verNearQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verNearQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_verNextNearQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verNextNearQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_verNextNextNearQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_verNextNextNearQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_totalQ)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_totalQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgdVA_totalCorrE)-(long)(p)),100,0,0,-1,-1,-1,1,"fgdVA_totalCorrE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TECALObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTECALObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject));
   { ND::TGlobalReconModule::TECALObject *p; p=(ND::TGlobalReconModule::TECALObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->TrShVal)-(long)(p)),100,0,0,-1,-1,-1,1,"TrShVal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMHadVal)-(long)(p)),100,0,0,-1,-1,-1,1,"EMHadVal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Width=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AverageHitTime)-(long)(p)),100,0,0,-1,-1,-1,1,"AverageHitTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergy)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergyError)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergyError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFParameter)-(long)(p)),100,0,0,-1,-1,-1,1,"KFParameter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFNNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"KFNNodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFParameterNodes)-(long)(p)),100,0,0,-1,-1,-1,1,"KFParameterNodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFQuality)-(long)(p)),100,0,0,-1,-1,-1,1,"KFQuality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFNDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"KFNDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KFHitQuality)-(long)(p)),100,0,0,-1,-1,-1,1,"KFHitQuality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_NDelayedCluster)-(long)(p)),100,0,0,-1,-1,-1,1,"MElectronTag_NDelayedCluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_NDelayedHits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_NDelayedHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_DeltaX)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_DeltaX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_DeltaY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_DeltaY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_DeltaZ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_DeltaZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_DeltaT)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_DeltaT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_EDep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_EDep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MElectronTag_TrackEnd)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"MElectronTag_TrackEnd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergy_Likelihood_energyGrad)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergy_Likelihood_energyGrad=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergy_Likelihood_energy_qsumGrad)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergy_Likelihood_energy_qsumGrad=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergy_Likelihood_qsum_like)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergy_Likelihood_qsum_like=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergy_Para_QSum)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergy_Para_QSum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergy_Para_QMean)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergy_Para_QMean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergy_Para_QRMS)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergy_Para_QRMS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergy_Para_QSkew)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergy_Para_QSkew=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMEnergy_Para_QMax)-(long)(p)),100,0,0,-1,-1,-1,1,"EMEnergy_Para_QMax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsShowerLike)-(long)(p)),105,0,0,-1,-1,-1,1,"IsShowerLike=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsTrackLike)-(long)(p)),105,0,0,-1,-1,-1,1,"IsTrackLike=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_AMR)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_AMR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_Angle)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Angle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_Max_Ratio)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Max_Ratio=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_ShowerAngle)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_ShowerAngle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_Asymmetry)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_Asymmetry=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_MeanPosition)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_MeanPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_ShowerWidth)-(long)(p)),100,0,0,-1,-1,-1,1,"PID_ShowerWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mostUpStreamLayerHit)-(long)(p)),105,0,0,-1,-1,-1,1,"mostUpStreamLayerHit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mostDownStreamLayerHit)-(long)(p)),105,0,0,-1,-1,-1,1,"mostDownStreamLayerHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TP0DObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTP0DObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject));
   { ND::TGlobalReconModule::TP0DObject *p; p=(ND::TGlobalReconModule::TP0DObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Width)-(long)(p)),100,0,0,-1,-1,-1,1,"Width=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParticleId)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"ParticleId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PIDWeight)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"PIDWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TSMRDObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTSMRDObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject));
   { ND::TGlobalReconModule::TSMRDObject *p; p=(ND::TGlobalReconModule::TSMRDObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->avgtime)-(long)(p)),100,0,0,-1,-1,-1,1,"avgtime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TTrackerObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTTrackerObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject));
   { ND::TGlobalReconModule::TTrackerObject *p; p=(ND::TGlobalReconModule::TTrackerObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TGlobalPIDAlternate */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate));
   { ND::TGlobalReconModule::TGlobalPIDAlternate *p; p=(ND::TGlobalReconModule::TGlobalPIDAlternate*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Detectors)-(long)(p)),107,0,0,-1,-1,-1,1,"Detectors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DetectorUsed)-(long)(p)),103,0,0,-1,-1,-1,1,"DetectorUsed[19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),107,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),100,0,0,-1,-1,-1,1,"Length=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParticleId)-(long)(p)),105,0,0,-1,-1,-1,1,"ParticleId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PIDWeight)-(long)(p)),100,0,0,-1,-1,-1,1,"PIDWeight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontPositionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPositionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"FrontDirection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"BackDirection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"FrontDirectionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"BackDirectionVar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentumError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackMomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentumError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PositionAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PositionAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PositionVarAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PositionVarAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DirectionAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirectionAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DirectionVarAtTrueVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirectionVarAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MomentumAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MomentumErrorAtTrueVertex)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumErrorAtTrueVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TTPCOtherObject */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTTPCOtherObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject));
   { ND::TGlobalReconModule::TTPCOtherObject *p; p=(ND::TGlobalReconModule::TTPCOtherObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Detector)-(long)(p)),105,0,0,-1,-1,-1,1,"Detector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"FrontDirection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"BackDirection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueParticle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle),-1,-1,1,"TrueParticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGlobalReconModule::TSMRDHit */
static void G__setup_memvarNDcLcLTGlobalReconModulecLcLTSMRDHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit));
   { ND::TGlobalReconModule::TSMRDHit *p; p=(ND::TGlobalReconModule::TSMRDHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Wall)-(long)(p)),105,0,0,-1,-1,-1,1,"Wall=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Yoke)-(long)(p)),105,0,0,-1,-1,-1,1,"Yoke=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Layer)-(long)(p)),105,0,0,-1,-1,-1,1,"Layer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tower)-(long)(p)),105,0,0,-1,-1,-1,1,"Tower=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Counter)-(long)(p)),105,0,0,-1,-1,-1,1,"Counter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),100,0,0,-1,-1,-1,1,"Time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PositionError)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"PositionError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Type)-(long)(p)),105,0,0,-1,-1,-1,1,"Type=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule */
static void G__setup_memvarNDcLcLTTrackerReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule));
   { ND::TTrackerReconModule *p; p=(ND::TTrackerReconModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNVertices)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVertices=",0,"< The number of added vertices");
   G__memvar_setup((void*)((long)(&p->fVertices)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fVertices=",0,"< The vector of trackerRecon vertices (none ever?).");
   G__memvar_setup((void*)((long)(&p->fNTracks)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTracks=",0,"< The number of trackerRecon results");
   G__memvar_setup((void*)((long)(&p->fTracks)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fTracks=",0,"< The vector of overall trackerRecon results");
   G__memvar_setup((void*)((long)(&p->fNFGDOther)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNFGDOther=",0,"< The number of FGD tracks with no fit (none ever?).");
   G__memvar_setup((void*)((long)(&p->fFGDOther)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fFGDOther=",0,"< The vector of FGD tracks with no fit");
   G__memvar_setup((void*)((long)(&p->fNTPCOther)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTPCOther=",0,"< The number of TPC tracks with no fit");
   G__memvar_setup((void*)((long)(&p->fTPCOther)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fTPCOther=",0,"< The vector of TPC tracks with no fit");
   G__memvar_setup((void*)((long)(&p->fNTPCIso)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTPCIso=",0,"< The number of isolated TPC tracks with fits (none ever?)");
   G__memvar_setup((void*)((long)(&p->fTPCIso)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fTPCIso=",0,"< The vector of isolated TPC tracks with fits");
   G__memvar_setup((void*)((long)(&p->fNTPCUnused)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTPCUnused=",0,"< The number of unused TPC hits");
   G__memvar_setup((void*)((long)(&p->fTPCUnused)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fTPCUnused=",0,"< The vector of unused TPC hits");
   G__memvar_setup((void*)((long)(&p->fNFGDUnused)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNFGDUnused=",0,"< The number of unused FGD hits");
   G__memvar_setup((void*)((long)(&p->fFGDUnused)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fFGDUnused=",0,"< The vector of unused TPC hits");
   G__memvar_setup((void*)((long)(&p->fNTPCExtrapolation)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNTPCExtrapolation=",0,"< The number of TPC tracks extrapolated into the FGD following Claudio's (2010a) method");
   G__memvar_setup((void*)((long)(&p->fTPCExtrapolation)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fTPCExtrapolation=",0,"< The vector of TPC tracks extrapolated into the FGD following Claudio's (2010a) method");
   G__memvar_setup((void*)((long)(&p->fMaxDrift)-(long)(p)),100,0,0,-1,-1,-1,1,"fMaxDrift=",0,"< TPC maximum drift used for tpc other hits");
   G__memvar_setup((void*)((long)(&p->fCathodeOffset)-(long)(p)),100,0,0,-1,-1,-1,1,"fCathodeOffset=",0,"< TPC cathode offset used for tpc other hits");
   G__memvar_setup((void*)((long)(&p->fDriftVelocity)-(long)(p)),100,0,0,-1,-1,-1,1,"fDriftVelocity=",0,"< TPC drift velocity used for tpc other hits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrackerVertex */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex));
   { ND::TTrackerReconModule::TTrackerVertex *p; p=(ND::TTrackerReconModule::TTrackerVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Variance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrackerResult */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult));
   { ND::TTrackerReconModule::TTrackerResult *p; p=(ND::TTrackerReconModule::TTrackerResult*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"/< The name of the algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Detectors)-(long)(p)),105,0,0,-1,-1,-1,1,"Detectors=",0,"/< Detectors used");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),107,0,0,-1,-1,-1,1,"Status=",0,"/< The status for the fit.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"/< The quality of the fit.(probability(chi2,ndof))");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"/< The number of degrees of freedom.");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"/< The chi2 of the fit.");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"/< The number of hits.");
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NConstituents=",0,"/< The number of constituents (tracks and pids) used to build this track");
   G__memvar_setup((void*)((long)(&p->ConstitIdx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ConstitIdx[2]=",0,"/< Index into Constituents of the constituents used to build this track");
   G__memvar_setup((void*)((long)(&p->NTotalConstituents)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NTotalConstituents=",0,"/< Number of all constituents, and constituents-constituents...");
   G__memvar_setup((void*)((long)(&p->Constituents)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"Constituents=",0,"/< All constituents, and constituents-constituents...");
   G__memvar_setup((void*)((long)(&p->isForward)-(long)(p)),103,0,0,-1,-1,-1,1,"isForward=",0,"/< Sense of object.");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"/< The Charge (+-1)");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"/< The deposited charge for the object (number of pe's)");
   G__memvar_setup((void*)((long)(&p->Length)-(long)(p)),100,0,0,-1,-1,-1,1,"Length=",0,"/< The total length of the object in mm");
   G__memvar_setup((void*)((long)(&p->Likelihoods)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"Likelihoods=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pids)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Pids=",0,"/< the PID that goes with Likelihoods");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"/< track position 4-vector (x,y,z,t) in mm, ns");
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Variance=",0,"/< track position variance 4-vector var(x),var(y),var(z),var(t) in mm^2, ns^2 ");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"/< track direction vector ");
   G__memvar_setup((void*)((long)(&p->DirectionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirectionVariance=",0,"/< track direction variance ");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,"/< track momentum MeV/c");
   G__memvar_setup((void*)((long)(&p->MomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumError=",0,"/< track momentum MeV/c");
   G__memvar_setup((void*)((long)(&p->TrueParticle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle),-1,-1,1,"TrueParticle=",0,"/< information about the true particle associated with this track");
   G__memvar_setup((void*)((long)(&p->NTPCs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NTPCs=",0,"/< Number of TPC tracks used to build this track");
   G__memvar_setup((void*)((long)(&p->TPC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"TPC=",0,"/< Information about the TPC pids/tracks used to build this track");
   G__memvar_setup((void*)((long)(&p->NFGDs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NFGDs=",0,"/< Number of FGD Specific objects");
   G__memvar_setup((void*)((long)(&p->FGD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"FGD=",0,"/< FGD objects associated with track");
   G__memvar_setup((void*)((long)(&p->NNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"NNodes=",0,"/< The number of nodes (fgd hits + tpc tracks)");
   G__memvar_setup((void*)((long)(&p->Nodes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"Nodes=",0,"/< Kinematics of the track at each node in the track fit");
   G__memvar_setup((void*)((long)(&p->hackConstituentsObject)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent),-1,-1,1,"hackConstituentsObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackTPCTrack)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack),-1,-1,1,"hackTPCTrack=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackFGDTrack)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack),-1,-1,1,"hackFGDTrack=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackNodes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode),-1,-1,1,"hackNodes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrueParticle */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrueParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle));
   { ND::TTrackerReconModule::TTrueParticle *p; p=(ND::TTrackerReconModule::TTrueParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ID)-(long)(p)),105,0,0,-1,-1,-1,1,"ID=",0,"/< Trajectoy  Id");
   G__memvar_setup((void*)((long)(&p->Pur)-(long)(p)),100,0,0,-1,-1,-1,1,"Pur=",0,"/< The purity for matching");
   G__memvar_setup((void*)((long)(&p->Eff)-(long)(p)),100,0,0,-1,-1,-1,1,"Eff=",0,"/< The efficiency for matching");
   G__memvar_setup((void*)((long)(&p->Vertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex),-1,-1,1,"Vertex=",0,"/< True vertex associated to this TrueParticle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrackerConstituent */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerConstituent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent));
   { ND::TTrackerReconModule::TTrackerConstituent *p; p=(ND::TTrackerReconModule::TTrackerConstituent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"/< algorithm that created this object.");
   G__memvar_setup((void*)((long)(&p->Detectors)-(long)(p)),105,0,0,-1,-1,-1,1,"Detectors=",0,"/< Detectors used");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),107,0,0,-1,-1,-1,1,"Status=",0,"/< The status for the fit.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"/< The quality of the fit.(probability)");
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"/< The number of degrees of freedom.");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"/< The chi2 of the fit.");
   G__memvar_setup((void*)((long)(&p->NNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"NNodes=",0,"/< The number of nodes");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"/< The number of hits.");
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NConstituents=",0,"/< The number of constituents this constituent is made of");
   G__memvar_setup((void*)((long)(&p->ConstitIdx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ConstitIdx[2]=",0,"/< Index into Constituents in TTrackerResult::Constituents of this constituent's constituents");
   G__memvar_setup((void*)((long)(&p->isForward)-(long)(p)),103,0,0,-1,-1,-1,1,"isForward=",0,"/< Sense of track");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"/< The Charge of this constituent (+-1)");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"/< The deposited charge for the constituent object (number of pe's).");
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,"/< The 4-vector position at the front of the track (x,y,z,t) in mm, ns ");
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,"/< The 4-vector position of the back of the track (x,y,z,t) in mm, ns ");
   G__memvar_setup((void*)((long)(&p->FrontVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontVariance=",0,"/< The 4-vector position variance at the front of the track (var(x),var(y),var(z),var(t)) in mm^2, ns^2 ");
   G__memvar_setup((void*)((long)(&p->BackVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackVariance=",0,"/< The 4-vector position variance at the back of the track (var(x),var(y),var(z),var(t)) in mm^2, ns^2 ");
   G__memvar_setup((void*)((long)(&p->FrontDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"FrontDirection=",0,"/< The direction vector at the front of the track ");
   G__memvar_setup((void*)((long)(&p->BackDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"BackDirection=",0,"/< The direction vector at the back of the track");
   G__memvar_setup((void*)((long)(&p->FrontMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"FrontMomentum=",0,"/< the momentum at the front of the track in MeV/c ");
   G__memvar_setup((void*)((long)(&p->BackMomentum)-(long)(p)),100,0,0,-1,-1,-1,1,"BackMomentum=",0,"/< the momentum at the back of the track iin MeV/c");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"/< position 4-vector (x,y,z,t) in mm, ns");
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Variance=",0,"/< position variance 4-vector  (var(x),var(y),var(z),var(t)) in mm^2, ns^2");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"/< direction vector ");
   G__memvar_setup((void*)((long)(&p->DirectionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirectionVariance=",0,"/< direction variance vector");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,"/< momentum MeV/c");
   G__memvar_setup((void*)((long)(&p->MomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumError=",0,"/< uncertainty in momentum MeV/c");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTPCTrack */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTPCTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack));
   { ND::TTrackerReconModule::TTPCTrack *p; p=(ND::TTrackerReconModule::TTPCTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Detector)-(long)(p)),105,0,0,-1,-1,-1,1,"Detector=",0,"/< TPC number 1, 2 or 3");
   G__memvar_setup((void*)((long)(&p->Ndof)-(long)(p)),105,0,0,-1,-1,-1,1,"Ndof=",0,"/< Number of degrees of freedom in TPC fit");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"/< TPC chi2 calculated after likelihood fit");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"/< number of clusters used in TPC fit");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,"/< Momentum of the TPC pid in MeV/c");
   G__memvar_setup((void*)((long)(&p->MomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumError=",0,"/< Uncertainty in the Momentum in MeV/c from the TPC pid");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"/< Charge from the TPC pid (+1, or -1)");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"/< Position at which kinematics are reported in mm, ns");
   G__memvar_setup((void*)((long)(&p->PositionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PositionVariance=",0,"/< Variance in Position  in mm^2, ns^2");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"/< TPC pid direction vector in mm");
   G__memvar_setup((void*)((long)(&p->DirectionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirectionVariance=",0,"/< TPC pid variance in vector direction in mm^2   ");
   G__memvar_setup((void*)((long)(&p->NTrun)-(long)(p)),100,0,0,-1,-1,-1,1,"NTrun=",0,"/< 70% of the number of clusters ");
   G__memvar_setup((void*)((long)(&p->Ccorr)-(long)(p)),100,0,0,-1,-1,-1,1,"Ccorr=",0,"/< Corrected truncated mean charge deposit in PID");
   G__memvar_setup((void*)((long)(&p->PullEle)-(long)(p)),100,0,0,-1,-1,-1,1,"PullEle=",0,"/< Pull for TPC pid electron hypothesis");
   G__memvar_setup((void*)((long)(&p->PullMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"PullMuon=",0,"/< Pull for TPC pid muon hypothesis");
   G__memvar_setup((void*)((long)(&p->PullPion)-(long)(p)),100,0,0,-1,-1,-1,1,"PullPion=",0,"/< Pull for TPC pid pion hypothesis");
   G__memvar_setup((void*)((long)(&p->PullKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"PullKaon=",0,"/< Pull for TPC pid kaon hypothesis");
   G__memvar_setup((void*)((long)(&p->PullProton)-(long)(p)),100,0,0,-1,-1,-1,1,"PullProton=",0,"/< Pull for TPC pid proton hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpEle)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpEle=",0,"/< Estimated dE/dx for electron hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpMuon=",0,"/< Estimated dE/dx for muon hypothesis      ");
   G__memvar_setup((void*)((long)(&p->dEdxexpPion)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpPion=",0,"/< Estimated dE/dx for pion hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpKaon=",0,"/< Estimated dE/dx for kaon hypothesis");
   G__memvar_setup((void*)((long)(&p->dEdxexpProton)-(long)(p)),100,0,0,-1,-1,-1,1,"dEdxexpProton=",0,"/< Estimated dE/dx for proton hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaEle)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaEle=",0,"/< Sigma estimated width of TPC pid electron hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaMuon)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaMuon=",0,"/< Sigma estimated width of TPC pid muon hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaPion)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaPion=",0,"/< Sigma estimated width of TPC pid pion hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaKaon=",0,"/< Sigma estimated width of TPC pid kaon hypothesis");
   G__memvar_setup((void*)((long)(&p->SigmaProton)-(long)(p)),100,0,0,-1,-1,-1,1,"SigmaProton=",0,"/< Sigma estimated width of TPC pid proton hypothesis");
   G__memvar_setup((void*)((long)(&p->Sigma0)-(long)(p)),100,0,0,-1,-1,-1,1,"Sigma0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Sigma1)-(long)(p)),100,0,0,-1,-1,-1,1,"Sigma1=",0,"/< TPC track diffusion sigma1 parameter");
   G__memvar_setup((void*)((long)(&p->Sigma2)-(long)(p)),100,0,0,-1,-1,-1,1,"Sigma2=",0,"/< TPC track diffusion sigma2 parameter");
   G__memvar_setup((void*)((long)(&p->MeanDrift)-(long)(p)),100,0,0,-1,-1,-1,1,"MeanDrift=",0,"/< TPC track mean drift value used in diffusion model");
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"NConstituents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrDirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"TrDirection=",0,"/< track direction vector ");
   G__memvar_setup((void*)((long)(&p->TrDirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"TrDirectionVar=",0,"/< variance in track direction vector");
   G__memvar_setup((void*)((long)(&p->TrCurvature)-(long)(p)),100,0,0,-1,-1,-1,1,"TrCurvature=",0,"/< track curvature, units are 1/mm");
   G__memvar_setup((void*)((long)(&p->TrCurvatureVar)-(long)(p)),100,0,0,-1,-1,-1,1,"TrCurvatureVar=",0,"/< variance in track direction vector, units are (1/mm)^2");
   G__memvar_setup((void*)((long)(&p->HasExtrapolation)-(long)(p)),103,0,0,-1,-1,-1,1,"HasExtrapolation=",0,"/< extrapolation method of vertex is calculated or not");
   G__memvar_setup((void*)((long)(&p->ExtrapolatedVertexXX)-(long)(p)),100,0,0,-1,-1,-1,1,"ExtrapolatedVertexXX=",0,"/< for xbar vertex, this is x coordinate in mm");
   G__memvar_setup((void*)((long)(&p->ExtrapolatedVertexZX)-(long)(p)),100,0,0,-1,-1,-1,1,"ExtrapolatedVertexZX=",0,"/< for xbar vertex, this is z coordinate in mm");
   G__memvar_setup((void*)((long)(&p->ExtrapolatedVertexYY)-(long)(p)),100,0,0,-1,-1,-1,1,"ExtrapolatedVertexYY=",0,"/< for ybar vertex, this is y coordinate in mm");
   G__memvar_setup((void*)((long)(&p->ExtrapolatedVertexZY)-(long)(p)),100,0,0,-1,-1,-1,1,"ExtrapolatedVertexZY=",0,"/< for ybar vertex, this is z coordinate in mm");
   G__memvar_setup((void*)((long)(&p->EnteringFGD)-(long)(p)),103,0,0,-1,-1,-1,1,"EnteringFGD=",0,"/< not sure");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TFGDTrack */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTFGDTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack));
   { ND::TTrackerReconModule::TFGDTrack *p; p=(ND::TTrackerReconModule::TFGDTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Detector)-(long)(p)),105,0,0,-1,-1,-1,1,"Detector=",0,"/< FGD number 1 or 2");
   G__memvar_setup((void*)((long)(&p->Ndof)-(long)(p)),105,0,0,-1,-1,-1,1,"Ndof=",0,"/< Number of degrees of freedom in FGD track fit");
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,"/< Chi2 of the FGD track fit");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrackerNode */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerNode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode));
   { ND::TTrackerReconModule::TTrackerNode *p; p=(ND::TTrackerReconModule::TTrackerNode*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"/< The Charge (+-1)");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"/< The Energy Deposit (number of pe's)");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"/< Position 4-vector (at node) x,y,z,t in mm, ns");
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Variance=",0,"/< Position variance 4-vector (at node) var(x),var(y),var(z),var(t) in mm^2, ns^2");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"/< Direction vector (at node) ");
   G__memvar_setup((void*)((long)(&p->DirectionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirectionVariance=",0,"/< Direction variance vector (at node) ");
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,"/< Track Momentum (at node) in MeV/c ");
   G__memvar_setup((void*)((long)(&p->MomentumError)-(long)(p)),100,0,0,-1,-1,-1,1,"MomentumError=",0,"/< Track Momentum uncertainty (at node) in MeV/c");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TTrackOther */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackOther(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther));
   { ND::TTrackerReconModule::TTrackOther *p; p=(ND::TTrackerReconModule::TTrackOther*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Detector)-(long)(p)),105,0,0,-1,-1,-1,1,"Detector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hackHits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit),-1,-1,1,"hackHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TTrackerReconModule::TUnusedHit */
static void G__setup_memvarNDcLcLTTrackerReconModulecLcLTUnusedHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit));
   { ND::TTrackerReconModule::TUnusedHit *p; p=(ND::TTrackerReconModule::TUnusedHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->TotalCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"TotalCharge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Variance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Variance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),100,0,0,-1,-1,-1,1,"Time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TimeUnc)-(long)(p)),100,0,0,-1,-1,-1,1,"TimeUnc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TECALTestbeamModule */
static void G__setup_memvarNDcLcLTECALTestbeamModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule));
   { ND::TECALTestbeamModule *p; p=(ND::TECALTestbeamModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Cerenkov1Lo)-(long)(p)),105,0,0,-1,-1,-1,1,"Cerenkov1Lo[23]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cerenkov2Lo)-(long)(p)),105,0,0,-1,-1,-1,1,"Cerenkov2Lo[23]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cerenkov1Hi)-(long)(p)),105,0,0,-1,-1,-1,1,"Cerenkov1Hi[23]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cerenkov2Hi)-(long)(p)),105,0,0,-1,-1,-1,1,"Cerenkov2Hi[23]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TOF)-(long)(p)),105,0,0,-1,-1,-1,1,"TOF[23]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TriggerWord)-(long)(p)),105,0,0,-1,-1,-1,1,"TriggerWord=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PIDResult)-(long)(p)),105,0,0,-1,-1,-1,1,"PIDResult=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Angle)-(long)(p)),105,0,0,-1,-1,-1,1,"Angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TSmrdReconModule */
static void G__setup_memvarNDcLcLTSmrdReconModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule));
   { ND::TSmrdReconModule *p; p=(ND::TSmrdReconModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TSmrdReconModule::TSmrdReconHit */
static void G__setup_memvarNDcLcLTSmrdReconModulecLcLTSmrdReconHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit));
   { ND::TSmrdReconModule::TSmrdReconHit *p; p=(ND::TSmrdReconModule::TSmrdReconHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PositionUncertainty)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PositionUncertainty=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dZ)-(long)(p)),100,0,0,-1,-1,-1,1,"dZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dT)-(long)(p)),100,0,0,-1,-1,-1,1,"dT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ContribCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"ContribCharge[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Wall)-(long)(p)),105,0,0,-1,-1,-1,1,"Wall=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Yoke)-(long)(p)),105,0,0,-1,-1,-1,1,"Yoke=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Layer)-(long)(p)),105,0,0,-1,-1,-1,1,"Layer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tower)-(long)(p)),105,0,0,-1,-1,-1,1,"Tower=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Counter)-(long)(p)),105,0,0,-1,-1,-1,1,"Counter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RMM)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"RMM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TFB)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"TFB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsInnerMatched)-(long)(p)),103,0,0,-1,-1,-1,1,"IsInnerMatched=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsUsed)-(long)(p)),103,0,0,-1,-1,-1,1,"IsUsed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TSmrdReconModule::TSmrdIsoTrack */
static void G__setup_memvarNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack));
   { ND::TSmrdReconModule::TSmrdIsoTrack *p; p=(ND::TSmrdReconModule::TSmrdIsoTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"UniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FrontPosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"FrontPosVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BackPosVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"BackPosVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DirectionVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirectionVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NNodes)-(long)(p)),105,0,0,-1,-1,-1,1,"NNodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KalmanStatus)-(long)(p)),105,0,0,-1,-1,-1,1,"KalmanStatus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->avgtime)-(long)(p)),100,0,0,-1,-1,-1,1,"avgtime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Range)-(long)(p)),100,0,0,-1,-1,-1,1,"Range=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ThetaAngle)-(long)(p)),100,0,0,-1,-1,-1,1,"ThetaAngle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PhiAngle)-(long)(p)),100,0,0,-1,-1,-1,1,"PhiAngle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueInitPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"TrueInitPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueInitDet)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TrueInitDet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueFinalPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"TrueFinalPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueFinalDet)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TrueFinalDet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueInitMom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"TrueInitMom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueId)-(long)(p)),105,0,0,-1,-1,-1,1,"TrueId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TruePDG)-(long)(p)),105,0,0,-1,-1,-1,1,"TruePDG=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueParentId)-(long)(p)),105,0,0,-1,-1,-1,1,"TrueParentId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueHitPurity)-(long)(p)),100,0,0,-1,-1,-1,1,"TrueHitPurity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrueHitEff)-(long)(p)),100,0,0,-1,-1,-1,1,"TrueHitEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TLowLevelInfoModule */
static void G__setup_memvarNDcLcLTLowLevelInfoModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule));
   { ND::TLowLevelInfoModule *p; p=(ND::TLowLevelInfoModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fLowLevelTFBDigits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fLowLevelTFBDigits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNLowLevelTFBDigits)-(long)(p)),105,0,0,-1,-1,-1,1,"fNLowLevelTFBDigits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fLowLevelHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fLowLevelHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNLowLevelHits)-(long)(p)),105,0,0,-1,-1,-1,1,"fNLowLevelHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TLowLevelInfoModule::TLowLevelTFBDigit */
static void G__setup_memvarNDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit));
   { ND::TLowLevelInfoModule::TLowLevelTFBDigit *p; p=(ND::TLowLevelInfoModule::TLowLevelTFBDigit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Chan)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Chan=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tfb)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Tfb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Rmm)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Rmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Subdet)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Subdet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Side)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Side=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Err)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Err=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tdc)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"Tdc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TdcTrig)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"TdcTrig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TdcRead)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"TdcRead=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Adc_lo)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Adc_lo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Adc_hi)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Adc_hi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TLowLevelInfoModule::TLowLevelHit */
static void G__setup_memvarNDcLcLTLowLevelInfoModulecLcLTLowLevelHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit));
   { ND::TLowLevelInfoModule::TLowLevelHit *p; p=(ND::TLowLevelInfoModule::TLowLevelHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeomId)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"GeomId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PosX)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PosX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PosY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PosY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PosZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"PosZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XLayer)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"XLayer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->YLayer)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"YLayer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Bar)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Bar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->End)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"End=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TimeRead)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TimeRead=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Event)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule */
static void G__setup_memvarNDcLcLTFgdOnlyModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule));
   { ND::TFgdOnlyModule *p; p=(ND::TFgdOnlyModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fN3DShowers)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fN3DShowers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f3DShowers)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"f3DShowers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fN2DClustersXZ)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fN2DClustersXZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f2DClustersXZ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"f2DClustersXZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fN2DClustersYZ)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fN2DClustersYZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f2DClustersYZ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"f2DClustersYZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule::TFgd2DIsoTrack */
static void G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack));
   { ND::TFgdOnlyModule::TFgd2DIsoTrack *p; p=(ND::TFgdOnlyModule::TFgd2DIsoTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Angle)-(long)(p)),100,0,0,-1,-1,-1,1,"Angle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SumCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"SumCharge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Range)-(long)(p)),100,0,0,-1,-1,-1,1,"Range=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Origin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Origin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OriginVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"OriginVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HitPositions)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR),G__defined_typename("vector<TVector3*>"),-1,1,"HitPositions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrajId)-(long)(p)),105,0,0,-1,-1,-1,1,"TrajId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Completeness)-(long)(p)),100,0,0,-1,-1,-1,1,"Completeness=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cleanliness)-(long)(p)),100,0,0,-1,-1,-1,1,"Cleanliness=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule::TFgd3DIsoTrack */
static void G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack));
   { ND::TFgdOnlyModule::TFgd3DIsoTrack *p; p=(ND::TFgdOnlyModule::TFgd3DIsoTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SumCharge)-(long)(p)),100,0,0,-1,-1,-1,1,"SumCharge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Range)-(long)(p)),100,0,0,-1,-1,-1,1,"Range=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Origin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Origin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OriginVariance)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"OriginVariance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muonPull)-(long)(p)),100,0,0,-1,-1,-1,1,"muonPull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pionPull)-(long)(p)),100,0,0,-1,-1,-1,1,"pionPull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonPull)-(long)(p)),100,0,0,-1,-1,-1,1,"protonPull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XZHitPositions)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR),G__defined_typename("vector<TVector3*>"),-1,1,"XZHitPositions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->YZHitPositions)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR),G__defined_typename("vector<TVector3*>"),-1,1,"YZHitPositions=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrajId)-(long)(p)),105,0,0,-1,-1,-1,1,"TrajId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Completeness)-(long)(p)),100,0,0,-1,-1,-1,1,"Completeness=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cleanliness)-(long)(p)),100,0,0,-1,-1,-1,1,"Cleanliness=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule::TFgd3DShowerPID */
static void G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID));
   { ND::TFgdOnlyModule::TFgd3DShowerPID *p; p=(ND::TFgdOnlyModule::TFgd3DShowerPID*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Hyp1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp),-1,-1,1,"Hyp1=",0,"/< Information assuming the particle is forward-going.");
   G__memvar_setup((void*)((long)(&p->Hyp2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp),-1,-1,1,"Hyp2=",0,"/< Information assuming the particle is backward-going.");
   G__memvar_setup((void*)((long)(&p->PCAEigenValues)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"PCAEigenValues=",0,"/< The three PCA eigenvalues.");
   G__memvar_setup((void*)((long)(&p->NumHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NumHits=",0,"/< The number of hits contributing to this cluster.");
   G__memvar_setup((void*)((long)(&p->MatchingLikelihood3D)-(long)(p)),100,0,0,-1,-1,-1,1,"MatchingLikelihood3D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Circularity)-(long)(p)),100,0,0,-1,-1,-1,1,"Circularity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trajectories)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,1,"Trajectories=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"/< The number of degrees of freedom in the reconstruction.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"/< The goodness of fit for the reconstruction.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,"/< The fit status.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule::TFgd3DShowerHyp */
static void G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp));
   { ND::TFgdOnlyModule::TFgd3DShowerHyp *p; p=(ND::TFgdOnlyModule::TFgd3DShowerHyp*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"/< Identified start position of the shower.");
   G__memvar_setup((void*)((long)(&p->PositionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"PositionVar=",0,"/< Variance on the start position of the shower.");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"/< Identified direction of the shower, found using PCA.");
   G__memvar_setup((void*)((long)(&p->DirectionVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"DirectionVar=",0,"/< Variance on the direction of the shower.");
   G__memvar_setup((void*)((long)(&p->ConeAngle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"ConeAngle=",0,"/< Opening angle of the cone describing this shower.");
   G__memvar_setup((void*)((long)(&p->ConeAngleVar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"ConeAngleVar=",0,"/< Variance on the cone opening angle.");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"/< Energy deposited in this shower.");
   G__memvar_setup((void*)((long)(&p->QAvgInThirds)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"QAvgInThirds=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SpreadInThirds)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"SpreadInThirds=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TFgdOnlyModule::TFgd2DCluster */
static void G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster));
   { ND::TFgdOnlyModule::TFgd2DCluster *p; p=(ND::TFgdOnlyModule::TFgd2DCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->AlgorithmName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"AlgorithmName=",0,"/< The name of the algorithm..");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"/< Charge-weighted position of the cluster.");
   G__memvar_setup((void*)((long)(&p->PCADirection)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"PCADirection=",0,"/< Primary PCA eigenvector, associated with the direction of the cluster.");
   G__memvar_setup((void*)((long)(&p->StartPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"StartPosition=",0,"/< Identified \"start\" position of the cluster, from extrapolating along PCADrection.");
   G__memvar_setup((void*)((long)(&p->EndPosition)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"EndPosition=",0,"/< Identified \"end\" position of the cluster, from extrapolating along PCADirection.");
   G__memvar_setup((void*)((long)(&p->Range)-(long)(p)),100,0,0,-1,-1,-1,1,"Range=",0,"/< Range of shower along PCADirection");
   G__memvar_setup((void*)((long)(&p->AvgHitTime)-(long)(p)),100,0,0,-1,-1,-1,1,"AvgHitTime=",0,"/< Average time of hits in the cluster");
   G__memvar_setup((void*)((long)(&p->EDeposit)-(long)(p)),100,0,0,-1,-1,-1,1,"EDeposit=",0,"/< The energy deposited in the cluster.");
   G__memvar_setup((void*)((long)(&p->NumHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NumHits=",0,"/< The number of hits contributing to this cluster.");
   G__memvar_setup((void*)((long)(&p->Trajectories)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,1,"Trajectories=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,"/< The number of degrees of freedom in the reconstruction.");
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,"/< The goodness of fit for the reconstruction.");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,"/< The fit status.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TBeamSummaryDataModule */
static void G__setup_memvarNDcLcLTBeamSummaryDataModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule));
   { ND::TBeamSummaryDataModule *p; p=(ND::TBeamSummaryDataModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TBeamSummaryDataModule::TBeamSummaryData */
static void G__setup_memvarNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData));
   { ND::TBeamSummaryDataModule::TBeamSummaryData *p; p=(ND::TBeamSummaryDataModule::TBeamSummaryData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->BeamRunNumber)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"BeamRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SpillNumber)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"SpillNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GPS1TriggerTime)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"GPS1TriggerTime=",0,"GPS1");
   G__memvar_setup((void*)((long)(&p->GPS1TriggerTimeNanoSecond)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"GPS1TriggerTimeNanoSecond=",0,"GPS1");
   G__memvar_setup((void*)((long)(&p->CT5ProtonsPerSpill)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"CT5ProtonsPerSpill=",0,"CT5");
   G__memvar_setup((void*)((long)(&p->CT5ProtonsPerBunch)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"CT5ProtonsPerBunch[8]=",0,"CT5");
   G__memvar_setup((void*)((long)(&p->CT5BeamBunchTiming)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"CT5BeamBunchTiming[8]=",0,"CT5");
   G__memvar_setup((void*)((long)(&p->CT5BeamBunchFlag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"CT5BeamBunchFlag[8]=",0,"CT5");
   G__memvar_setup((void*)((long)(&p->Horn1CurrentSum)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Horn1CurrentSum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Horn2CurrentSum)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Horn2CurrentSum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Horn3CurrentSum)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Horn3CurrentSum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GoodSpillFlag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"GoodSpillFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BSDVersion)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TString),-1,-1,1,"BSDVersion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OtherData)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData),-1,-1,1,"OtherData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData */
static void G__setup_memvarNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData));
   { ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData *p; p=(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->MidasEvent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"MidasEvent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BeamRunNumber)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"BeamRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SpillNumber)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"SpillNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MRRunNumber)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"MRRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GPSStatus)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"GPSStatus[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TriggerTime)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TriggerTime[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TriggerTimeNanoSecond)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TriggerTimeNanoSecond[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ProtonsPerSpill)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ProtonsPerSpill[5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ProtonsPerBunch)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ProtonsPerBunch[5][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BeamTiming)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"BeamTiming[5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BeamBunchTiming)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"BeamBunchTiming[5][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BeamFlag)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"BeamFlag[5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BeamBunchFlag)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"BeamBunchFlag[5][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HornCurrent)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"HornCurrent[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HornBusBarCurrent)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"HornBusBarCurrent[3][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BeamPositionOnTarget)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"BeamPositionOnTarget[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BeamDirectionOnTarget)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"BeamDirectionOnTarget[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BeamSizeOnTarget)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"BeamSizeOnTarget[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonSiTotalQ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonSiTotalQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonSiPeak)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonSiPeak=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonSiX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonSiX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonSiwX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonSiwX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonSiY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonSiY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonSiwY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonSiwY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonICTotalQ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonICTotalQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonICPeak)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonICPeak=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonICX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonICX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonICwX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonICwX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonICY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonICY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MumonICwY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MumonICwY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OTRLightYield)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"OTRLightYield=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OTRX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"OTRX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OTRwX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"OTRwX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OTRY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"OTRY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OTRwY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"OTRwY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OTRXError)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"OTRXError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OTRwXError)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"OTRwXError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OTRYError)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"OTRYError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OTRwYError)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"OTRwYError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GoodGPSFlag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"GoodGPSFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TriggerFlag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TriggerFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SpillFlag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"SpillFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GoodSpillFlag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"GoodSpillFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TargetEfficiency)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"TargetEfficiency[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RunType)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"RunType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MagSetID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"MagSetID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TReconPerformanceEvalModule */
static void G__setup_memvarNDcLcLTReconPerformanceEvalModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule));
   { ND::TReconPerformanceEvalModule *p; p=(ND::TReconPerformanceEvalModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNGlobalReconObjects)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNGlobalReconObjects=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fGlobalReconObjects)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"fGlobalReconObjects=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHitInfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),G__defined_typename("vector<std::pair<std::string,int> >"),-1,1,"fHitInfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSaveAllGlobalNodes)-(long)(p)),103,0,0,-1,-1,-1,1,"fSaveAllGlobalNodes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TReconPerformanceEvalModule::TGlobalReconObject */
static void G__setup_memvarNDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject));
   { ND::TReconPerformanceEvalModule::TGlobalReconObject *p; p=(ND::TReconPerformanceEvalModule::TGlobalReconObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->SetOK)-(long)(p)),103,0,0,-1,-1,-1,1,"SetOK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NConstituents)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NConstituents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NModuleConstituents)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,int>"),-1,1,"NModuleConstituents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SubdetectorString)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"SubdetectorString=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StatusString)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"StatusString=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GlobalNodes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"GlobalNodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NGlobalNodes)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NGlobalNodes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NGlobalNodesSaved)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NGlobalNodesSaved=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Quality)-(long)(p)),100,0,0,-1,-1,-1,1,"Quality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDOF)-(long)(p)),105,0,0,-1,-1,-1,1,"NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ParticleID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_string),-1,-1,1,"ParticleID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PIDWeight)-(long)(p)),100,0,0,-1,-1,-1,1,"PIDWeight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MatchingChi2Info)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"MatchingChi2Info=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NMatchingChi2Info)-(long)(p)),105,0,0,-1,-1,-1,1,"NMatchingChi2Info=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Truth)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo),-1,-1,1,"Truth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Constituents)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"Constituents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DownToTrackerConstituents)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClonesArray),-1,-1,1,"DownToTrackerConstituents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NDownToTrackerConstituents)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NDownToTrackerConstituents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TReconPerformanceEvalModule::TGlobalTruthInfo */
static void G__setup_memvarNDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo));
   { ND::TReconPerformanceEvalModule::TGlobalTruthInfo *p; p=(ND::TReconPerformanceEvalModule::TGlobalTruthInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->SetOK)-(long)(p)),103,0,0,-1,-1,-1,1,"SetOK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Momentum)-(long)(p)),100,0,0,-1,-1,-1,1,"Momentum=",0,"/ < Momentum of the true trajectory");
   G__memvar_setup((void*)((long)(&p->Direction)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Direction=",0,"/ < Direction of the true trajectory");
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,"/ < Charge of the trajectory");
   G__memvar_setup((void*)((long)(&p->Position)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TLorentzVector),-1,-1,1,"Position=",0,"/ < Initial position of the trajectory");
   G__memvar_setup((void*)((long)(&p->Efficiency)-(long)(p)),100,0,0,-1,-1,-1,1,"Efficiency=",0,"/ < Efficiency of this truth matching");
   G__memvar_setup((void*)((long)(&p->Purity)-(long)(p)),100,0,0,-1,-1,-1,1,"Purity=",0,"/ < Purity of this truth matching");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TExample2010aAnalysis1Module */
static void G__setup_memvarNDcLcLTExample2010aAnalysis1Module(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module));
   { ND::TExample2010aAnalysis1Module *p; p=(ND::TExample2010aAnalysis1Module*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTimeOffset)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fTimeOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGeometrySummaryModule */
static void G__setup_memvarNDcLcLTGeometrySummaryModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule));
   { ND::TGeometrySummaryModule *p; p=(ND::TGeometrySummaryModule*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fFGD1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fFGD1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFGD2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fFGD2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fP0D)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fP0D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFGD1Active)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fFGD1Active=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFGD2Active)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fFGD2Active=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fP0DActive)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fP0DActive=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTPC1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fTPC1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTPC2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fTPC2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTPC3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fTPC3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDSECAL)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fDSECAL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTECAL1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fTECAL1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTECAL2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fTECAL2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTECAL3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fTECAL3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTECAL4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fTECAL4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTECAL5)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fTECAL5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTECAL6)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fTECAL6=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPECAL1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fPECAL1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPECAL2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fPECAL2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPECAL3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fPECAL3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPECAL4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fPECAL4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPECAL5)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fPECAL5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPECAL6)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fPECAL6=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSMRD1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fSMRD1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSMRD2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fSMRD2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSMRD3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fSMRD3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSMRD4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),-1,-1,1,"fSMRD4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes),-1,-1,1,"fMM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MMmap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR),G__defined_typename("map<int,std::pair<int,const TGeoNode*> >"),-1,1,"MMmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGeometrySummaryModule::TDetectorBoundingBox */
static void G__setup_memvarNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox));
   { ND::TGeometrySummaryModule::TDetectorBoundingBox *p; p=(ND::TGeometrySummaryModule::TDetectorBoundingBox*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Minimum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Minimum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Maximum)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TVector3),-1,-1,1,"Maximum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGeometrySummaryModule::TTPCMicroMegasVolumes */
static void G__setup_memvarNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes));
   { ND::TGeometrySummaryModule::TTPCMicroMegasVolumes *p; p=(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->MMvolumes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR),G__defined_typename("map<int,std::pair<int,const TGeoNode*> >"),-1,1,"MMvolumes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TGRooTrackerVtxModule */
static void G__setup_memvarNDcLcLTGRooTrackerVtxModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule));
   { ND::TGRooTrackerVtxModule *p; p=(ND::TGRooTrackerVtxModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TRooTrackerVtxModuleBase */
static void G__setup_memvarNDcLcLTRooTrackerVtxModuleBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase));
   { ND::TRooTrackerVtxModuleBase *p; p=(ND::TRooTrackerVtxModuleBase*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fPassThroughPresent)-(long)(p)),103,0,0,-1,-1,-1,1,"fPassThroughPresent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ND::TNRooTrackerVtxModule */
static void G__setup_memvarNDcLcLTNRooTrackerVtxModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule));
   { ND::TNRooTrackerVtxModule *p; p=(ND::TNRooTrackerVtxModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarnd280ProjectDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncND(void) {
   /* ND */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_ND));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTND280Event(void) {
   /* ND::TND280Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event));
   G__memfunc_setup("TND280Event",898,G__nd280ProjectDict_163_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TND280Event",898,G__nd280ProjectDict_163_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event), -1, 0, 1, 1, 1, 0, "u 'ND::TND280Event' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_163_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TND280Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_163_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_163_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TND280Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_163_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TND280Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_163_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_163_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_163_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TND280Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_163_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_163_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TND280Event::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TND280Event", 1024, G__nd280ProjectDict_163_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_163_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Event), -1, 1, 1, 1, 1, 0, "u 'ND::TND280Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTDataVector(void) {
   /* ND::TDataVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector));
   G__memfunc_setup("TDataVector",1089,G__nd280ProjectDict_164_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDataVector",1089,G__nd280ProjectDict_164_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector), -1, 0, 1, 1, 1, 0, "u 'ND::TDataVector' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_164_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TDataVector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_164_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDataVector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_164_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TDataVector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_164_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TDataVector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_164_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_164_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDataVector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_164_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TDataVector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_164_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDataVector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_164_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TDataVector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDataVector", 1215, G__nd280ProjectDict_164_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_164_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDataVector), -1, 1, 1, 1, 1, 0, "u 'ND::TDataVector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTData(void) {
   /* ND::TData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData));
   G__memfunc_setup("TData",462,G__nd280ProjectDict_165_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TData",462,G__nd280ProjectDict_165_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData), -1, 0, 1, 1, 1, 0, "u 'ND::TData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_165_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_165_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_165_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_165_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_165_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_165_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_165_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_165_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_165_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TData", 588, G__nd280ProjectDict_165_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_165_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTData), -1, 1, 1, 1, 1, 0, "u 'ND::TData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTDatum(void) {
   /* ND::TDatum */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum));
   G__memfunc_setup("TDatum",591,G__nd280ProjectDict_166_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDatum",591,G__nd280ProjectDict_166_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum), -1, 0, 1, 1, 1, 0, "u 'ND::TDatum' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_166_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TDatum::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_166_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDatum::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_166_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TDatum::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_166_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TDatum::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_166_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_166_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDatum::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_166_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TDatum::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_166_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TDatum::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_166_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TDatum::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDatum", 717, G__nd280ProjectDict_166_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_166_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTDatum), -1, 1, 1, 1, 1, 0, "u 'ND::TDatum' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTND280Context(void) {
   /* ND::TND280Context */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Context));
   G__memfunc_setup("TND280Context",1125,G__nd280ProjectDict_192_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Context), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TND280Context",1125,G__nd280ProjectDict_192_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Context), -1, 0, 1, 1, 1, 0, "u 'ND::TND280Context' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TND280Context", 1251, G__nd280ProjectDict_192_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_192_0_4, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280Context), -1, 1, 1, 1, 1, 0, "u 'ND::TND280Context' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSHAHashValue(void) {
   /* ND::TSHAHashValue */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSHAHashValue));
   G__memfunc_setup("TSHAHashValue",1201,G__nd280ProjectDict_194_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSHAHashValue), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSHAHashValue",1201,G__nd280ProjectDict_194_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSHAHashValue), -1, 0, 1, 1, 1, 0, "u 'ND::TSHAHashValue' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSHAHashValue", 1327, G__nd280ProjectDict_194_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_194_0_4, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSHAHashValue), -1, 1, 1, 1, 1, 0, "u 'ND::TSHAHashValue' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTAlignmentId(void) {
   /* ND::TAlignmentId */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAlignmentId));
   G__memfunc_setup("TAlignmentId",1184,G__nd280ProjectDict_195_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAlignmentId), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TAlignmentId",1184,G__nd280ProjectDict_195_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAlignmentId), -1, 0, 1, 1, 1, 0, "u 'ND::TAlignmentId' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAlignmentId", 1310, G__nd280ProjectDict_195_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_195_0_4, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAlignmentId), -1, 1, 1, 1, 1, 0, "u 'ND::TAlignmentId' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTND280EventcLcLHeader(void) {
   /* ND::TND280Event::Header */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280EventcLcLHeader));
   G__memfunc_setup("Header",585,G__nd280ProjectDict_196_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280EventcLcLHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Header",585,G__nd280ProjectDict_196_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280EventcLcLHeader), -1, 0, 1, 1, 1, 0, "u 'ND::TND280Event::Header' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_196_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TND280Event::Header::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_196_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::Header::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_196_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TND280Event::Header::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_196_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TND280Event::Header::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__nd280ProjectDict_196_0_7, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__nd280ProjectDict_196_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__nd280ProjectDict_196_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_196_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_196_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::Header::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_196_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TND280Event::Header::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_196_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TND280Event::Header::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_196_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TND280Event::Header::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Header", 711, G__nd280ProjectDict_196_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_196_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTND280EventcLcLHeader), -1, 1, 1, 1, 1, 0, "u 'ND::TND280Event::Header' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrueVertex(void) {
   /* ND::TTrueVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex));
   G__memfunc_setup("TTrueVertex",1138,G__nd280ProjectDict_197_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrueVertex",1138,G__nd280ProjectDict_197_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex), -1, 0, 1, 1, 1, 0, "u 'ND::TTrueVertex' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_197_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrueVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_197_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_197_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrueVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_197_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrueVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_197_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_197_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_197_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrueVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_197_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_197_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrueVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrueVertex", 1264, G__nd280ProjectDict_197_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_197_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueVertex), -1, 1, 1, 1, 1, 0, "u 'ND::TTrueVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrueParticle(void) {
   /* ND::TTrueParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle));
   G__memfunc_setup("TTrueParticle",1320,G__nd280ProjectDict_240_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrueParticle",1320,G__nd280ProjectDict_240_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle), -1, 0, 1, 1, 1, 0, "u 'ND::TTrueParticle' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_240_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrueParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_240_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_240_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrueParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_240_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrueParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_240_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_240_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_240_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrueParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_240_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrueParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_240_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrueParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrueParticle", 1446, G__nd280ProjectDict_240_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_240_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrueParticle), -1, 1, 1, 1, 1, 0, "u 'ND::TTrueParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSubBaseObject(void) {
   /* ND::TSubBaseObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject));
   G__memfunc_setup("TSubBaseObject",1360,G__nd280ProjectDict_241_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSubBaseObject",1360,G__nd280ProjectDict_241_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject), -1, 0, 1, 1, 1, 0, "u 'ND::TSubBaseObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_241_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TSubBaseObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_241_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_241_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TSubBaseObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_241_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TSubBaseObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_241_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_241_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_241_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSubBaseObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_241_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_241_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSubBaseObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSubBaseObject", 1486, G__nd280ProjectDict_241_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_241_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject), -1, 1, 1, 1, 1, 0, "u 'ND::TSubBaseObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSubBaseShowerObject(void) {
   /* ND::TSubBaseShowerObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject));
   G__memfunc_setup("TSubBaseShowerObject",1992,G__nd280ProjectDict_242_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSubBaseShowerObject",1992,G__nd280ProjectDict_242_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject), -1, 0, 1, 1, 1, 0, "u 'ND::TSubBaseShowerObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_242_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TSubBaseShowerObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_242_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseShowerObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_242_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TSubBaseShowerObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_242_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TSubBaseShowerObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_242_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_242_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseShowerObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_242_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSubBaseShowerObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_242_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSubBaseShowerObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_242_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSubBaseShowerObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSubBaseShowerObject", 2118, G__nd280ProjectDict_242_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_242_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject), -1, 1, 1, 1, 1, 0, "u 'ND::TSubBaseShowerObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLGRooTrackerVtx(void) {
   /* ND::GRooTrackerVtx */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx));
   G__memfunc_setup("GRooTrackerVtx",1413,G__nd280ProjectDict_243_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GRooTrackerVtx",1413,G__nd280ProjectDict_243_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx), -1, 0, 1, 1, 1, 0, "u 'ND::GRooTrackerVtx' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_243_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::GRooTrackerVtx::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_243_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::GRooTrackerVtx::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_243_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::GRooTrackerVtx::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_243_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::GRooTrackerVtx::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_243_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_243_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::GRooTrackerVtx::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_243_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::GRooTrackerVtx::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_243_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::GRooTrackerVtx::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_243_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::GRooTrackerVtx::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~GRooTrackerVtx", 1539, G__nd280ProjectDict_243_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_243_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx), -1, 1, 1, 1, 1, 0, "u 'ND::GRooTrackerVtx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLJNuBeamFlux(void) {
   /* ND::JNuBeamFlux */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux));
   G__memfunc_setup("JNuBeamFlux",1057,G__nd280ProjectDict_244_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JNuBeamFlux",1057,G__nd280ProjectDict_244_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux), -1, 0, 1, 1, 1, 0, "u 'ND::JNuBeamFlux' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_244_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::JNuBeamFlux::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_244_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::JNuBeamFlux::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_244_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::JNuBeamFlux::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_244_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::JNuBeamFlux::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_244_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_244_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::JNuBeamFlux::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_244_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::JNuBeamFlux::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_244_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::JNuBeamFlux::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_244_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::JNuBeamFlux::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~JNuBeamFlux", 1183, G__nd280ProjectDict_244_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_244_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux), -1, 1, 1, 1, 1, 0, "u 'ND::JNuBeamFlux' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLRooTrackerVtxBase(void) {
   /* ND::RooTrackerVtxBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase));
   G__memfunc_setup("RooTrackerVtxBase",1721,G__nd280ProjectDict_245_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooTrackerVtxBase",1721,G__nd280ProjectDict_245_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase), -1, 0, 1, 1, 1, 0, "u 'ND::RooTrackerVtxBase' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_245_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::RooTrackerVtxBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_245_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::RooTrackerVtxBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_245_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::RooTrackerVtxBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_245_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::RooTrackerVtxBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_245_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_245_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::RooTrackerVtxBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_245_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::RooTrackerVtxBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_245_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::RooTrackerVtxBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_245_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::RooTrackerVtxBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooTrackerVtxBase", 1847, G__nd280ProjectDict_245_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_245_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase), -1, 1, 1, 1, 1, 0, "u 'ND::RooTrackerVtxBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLNRooTrackerVtx(void) {
   /* ND::NRooTrackerVtx */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx));
   G__memfunc_setup("NRooTrackerVtx",1420,G__nd280ProjectDict_247_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NRooTrackerVtx",1420,G__nd280ProjectDict_247_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx), -1, 0, 1, 1, 1, 0, "u 'ND::NRooTrackerVtx' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_247_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::NRooTrackerVtx::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_247_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::NRooTrackerVtx::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_247_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::NRooTrackerVtx::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_247_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::NRooTrackerVtx::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_247_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_247_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::NRooTrackerVtx::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_247_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::NRooTrackerVtx::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_247_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::NRooTrackerVtx::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_247_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::NRooTrackerVtx::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~NRooTrackerVtx", 1546, G__nd280ProjectDict_247_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_247_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx), -1, 1, 1, 1, 1, 0, "u 'ND::NRooTrackerVtx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLToaAnalysisUtils(void) {
   /* ND::ToaAnalysisUtils */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils));
   G__memfunc_setup("ToaAnalysisUtils",1657,G__nd280ProjectDict_248_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToaAnalysisUtils",1657,G__nd280ProjectDict_248_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils), -1, 0, 1, 1, 1, 0, "u 'ND::ToaAnalysisUtils' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_248_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::ToaAnalysisUtils::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_248_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::ToaAnalysisUtils::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_248_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::ToaAnalysisUtils::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_248_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::ToaAnalysisUtils::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_248_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_248_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::ToaAnalysisUtils::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_248_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::ToaAnalysisUtils::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_248_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::ToaAnalysisUtils::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_248_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::ToaAnalysisUtils::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ToaAnalysisUtils", 1783, G__nd280ProjectDict_248_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_248_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils), -1, 1, 1, 1, 1, 0, "u 'ND::ToaAnalysisUtils' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTBasicHeaderModule(void) {
   /* ND::TBasicHeaderModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule));
   G__memfunc_setup("TBasicHeaderModule",1765,G__nd280ProjectDict_251_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBasicHeaderModule",1765,G__nd280ProjectDict_251_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule), -1, 0, 1, 1, 1, 0, "u 'ND::TBasicHeaderModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_251_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TBasicHeaderModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_251_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBasicHeaderModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_251_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TBasicHeaderModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_251_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TBasicHeaderModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_251_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_251_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBasicHeaderModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_251_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBasicHeaderModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_251_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBasicHeaderModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_251_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBasicHeaderModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TBasicHeaderModule", 1891, G__nd280ProjectDict_251_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_251_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule), -1, 1, 1, 1, 1, 0, "u 'ND::TBasicHeaderModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTAnalysisHeaderModuleBase(void) {
   /* ND::TAnalysisHeaderModuleBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase));
   G__memfunc_setup("TAnalysisHeaderModuleBase",2498,G__nd280ProjectDict_252_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TAnalysisHeaderModuleBase",2498,G__nd280ProjectDict_252_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase), -1, 0, 1, 1, 1, 0, "u 'ND::TAnalysisHeaderModuleBase' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_252_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TAnalysisHeaderModuleBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_252_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisHeaderModuleBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_252_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TAnalysisHeaderModuleBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_252_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TAnalysisHeaderModuleBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_252_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_252_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisHeaderModuleBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_252_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TAnalysisHeaderModuleBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_252_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisHeaderModuleBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_252_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TAnalysisHeaderModuleBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TAnalysisHeaderModuleBase", 2624, G__nd280ProjectDict_252_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_252_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase), -1, 1, 1, 1, 1, 0, "u 'ND::TAnalysisHeaderModuleBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTAnalysisModuleBase(void) {
   /* ND::TAnalysisModuleBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase));
   G__memfunc_setup("TAnalysisModuleBase",1913,G__nd280ProjectDict_253_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TAnalysisModuleBase",1913,G__nd280ProjectDict_253_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase), -1, 0, 1, 1, 1, 0, "u 'ND::TAnalysisModuleBase' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_253_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TAnalysisModuleBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_253_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisModuleBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_253_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TAnalysisModuleBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_253_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TAnalysisModuleBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_253_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_253_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisModuleBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_253_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TAnalysisModuleBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_253_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisModuleBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_253_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TAnalysisModuleBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TAnalysisModuleBase", 2039, G__nd280ProjectDict_253_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_253_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase), -1, 1, 1, 1, 1, 0, "u 'ND::TAnalysisModuleBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTBasicDataQualityModule(void) {
   /* ND::TBasicDataQualityModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule));
   G__memfunc_setup("TBasicDataQualityModule",2303,G__nd280ProjectDict_558_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBasicDataQualityModule",2303,G__nd280ProjectDict_558_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule), -1, 0, 1, 1, 1, 0, "u 'ND::TBasicDataQualityModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_558_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TBasicDataQualityModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_558_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBasicDataQualityModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_558_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TBasicDataQualityModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_558_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TBasicDataQualityModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_558_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_558_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBasicDataQualityModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_558_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBasicDataQualityModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_558_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBasicDataQualityModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_558_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBasicDataQualityModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TBasicDataQualityModule", 2429, G__nd280ProjectDict_558_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_558_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule), -1, 1, 1, 1, 1, 0, "u 'ND::TBasicDataQualityModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTruthTrajectoriesModule(void) {
   /* ND::TTruthTrajectoriesModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule));
   G__memfunc_setup("TTruthTrajectoriesModule",2496,G__nd280ProjectDict_559_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTruthTrajectoriesModule",2496,G__nd280ProjectDict_559_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule), -1, 0, 1, 1, 1, 0, "u 'ND::TTruthTrajectoriesModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_559_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTruthTrajectoriesModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_559_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_559_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTruthTrajectoriesModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_559_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTruthTrajectoriesModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_559_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_559_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_559_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthTrajectoriesModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_559_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_559_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthTrajectoriesModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTruthTrajectoriesModule", 2622, G__nd280ProjectDict_559_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_559_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule), -1, 1, 1, 1, 1, 0, "u 'ND::TTruthTrajectoriesModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTAnalysisTruthModuleBase(void) {
   /* ND::TAnalysisTruthModuleBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase));
   G__memfunc_setup("TAnalysisTruthModuleBase",2448,G__nd280ProjectDict_560_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TAnalysisTruthModuleBase",2448,G__nd280ProjectDict_560_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase), -1, 0, 1, 1, 1, 0, "u 'ND::TAnalysisTruthModuleBase' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_560_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TAnalysisTruthModuleBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_560_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisTruthModuleBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_560_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TAnalysisTruthModuleBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_560_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TAnalysisTruthModuleBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_560_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_560_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisTruthModuleBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_560_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TAnalysisTruthModuleBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_560_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisTruthModuleBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_560_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TAnalysisTruthModuleBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TAnalysisTruthModuleBase", 2574, G__nd280ProjectDict_560_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_560_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase), -1, 1, 1, 1, 1, 0, "u 'ND::TAnalysisTruthModuleBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory(void) {
   /* ND::TTruthTrajectoriesModule::TTruthTrajectory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory));
   G__memfunc_setup("TTruthTrajectory",1682,G__nd280ProjectDict_617_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTruthTrajectory",1682,G__nd280ProjectDict_617_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory), -1, 0, 1, 1, 1, 0, "u 'ND::TTruthTrajectoriesModule::TTruthTrajectory' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_617_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_617_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_617_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_617_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_617_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_617_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_617_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_617_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_617_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthTrajectoriesModule::TTruthTrajectory::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTruthTrajectory", 1808, G__nd280ProjectDict_617_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_617_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory), -1, 1, 1, 1, 1, 0, "u 'ND::TTruthTrajectoriesModule::TTruthTrajectory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTruthVerticesModule(void) {
   /* ND::TTruthVerticesModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule));
   G__memfunc_setup("TTruthVerticesModule",2070,G__nd280ProjectDict_629_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTruthVerticesModule",2070,G__nd280ProjectDict_629_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule), -1, 0, 1, 1, 1, 0, "u 'ND::TTruthVerticesModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_629_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTruthVerticesModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_629_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthVerticesModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_629_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTruthVerticesModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_629_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTruthVerticesModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_629_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_629_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthVerticesModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_629_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthVerticesModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_629_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthVerticesModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_629_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthVerticesModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTruthVerticesModule", 2196, G__nd280ProjectDict_629_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_629_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule), -1, 1, 1, 1, 1, 0, "u 'ND::TTruthVerticesModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTruthVerticesModulecLcLTTruthVertex(void) {
   /* ND::TTruthVerticesModule::TTruthVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex));
   G__memfunc_setup("TTruthVertex",1257,G__nd280ProjectDict_630_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTruthVertex",1257,G__nd280ProjectDict_630_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex), -1, 0, 1, 1, 1, 0, "u 'ND::TTruthVerticesModule::TTruthVertex' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_630_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTruthVerticesModule::TTruthVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_630_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthVerticesModule::TTruthVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_630_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTruthVerticesModule::TTruthVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_630_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTruthVerticesModule::TTruthVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_630_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_630_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthVerticesModule::TTruthVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_630_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthVerticesModule::TTruthVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_630_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTruthVerticesModule::TTruthVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_630_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTruthVerticesModule::TTruthVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTruthVertex", 1383, G__nd280ProjectDict_630_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_630_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex), -1, 1, 1, 1, 1, 0, "u 'ND::TTruthVerticesModule::TTruthVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModule(void) {
   /* ND::TP0DReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule));
   G__memfunc_setup("TP0DReconModule",1397,G__nd280ProjectDict_631_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DReconModule",1397,G__nd280ProjectDict_631_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_631_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_631_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_631_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_631_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_631_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_631_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_631_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_631_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_631_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DReconModule", 1523, G__nd280ProjectDict_631_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_631_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTAnalysisReconModuleBase(void) {
   /* ND::TAnalysisReconModuleBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase));
   G__memfunc_setup("TAnalysisReconModuleBase",2416,G__nd280ProjectDict_632_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TAnalysisReconModuleBase",2416,G__nd280ProjectDict_632_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase), -1, 0, 1, 1, 1, 0, "u 'ND::TAnalysisReconModuleBase' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_632_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TAnalysisReconModuleBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_632_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisReconModuleBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_632_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TAnalysisReconModuleBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_632_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TAnalysisReconModuleBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_632_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_632_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisReconModuleBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_632_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TAnalysisReconModuleBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_632_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TAnalysisReconModuleBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_632_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TAnalysisReconModuleBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TAnalysisReconModuleBase", 2542, G__nd280ProjectDict_632_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_632_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase), -1, 1, 1, 1, 1, 0, "u 'ND::TAnalysisReconModuleBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DAlgoRes(void) {
   /* ND::TP0DReconModule::TP0DAlgoRes */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes));
   G__memfunc_setup("TP0DAlgoRes",965,G__nd280ProjectDict_637_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DAlgoRes",965,G__nd280ProjectDict_637_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DAlgoRes' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_637_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DAlgoRes::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_637_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DAlgoRes::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_637_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DAlgoRes::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_637_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DAlgoRes::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_637_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_637_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DAlgoRes::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_637_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DAlgoRes::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_637_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DAlgoRes::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_637_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DAlgoRes::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DAlgoRes", 1091, G__nd280ProjectDict_637_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_637_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DAlgoRes' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DVertex(void) {
   /* ND::TP0DReconModule::TP0DVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex));
   G__memfunc_setup("TP0DVertex",918,G__nd280ProjectDict_638_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DVertex",918,G__nd280ProjectDict_638_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DVertex' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_638_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_638_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_638_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_638_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_638_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_638_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_638_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_638_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_638_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DVertex", 1044, G__nd280ProjectDict_638_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_638_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DParticle(void) {
   /* ND::TP0DReconModule::TP0DParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle));
   G__memfunc_setup("TP0DParticle",1100,G__nd280ProjectDict_639_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DParticle",1100,G__nd280ProjectDict_639_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DParticle' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_639_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_639_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_639_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_639_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_639_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_639_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_639_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_639_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_639_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DParticle", 1226, G__nd280ProjectDict_639_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_639_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DShower(void) {
   /* ND::TP0DReconModule::TP0DShower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower));
   G__memfunc_setup("TP0DShower",912,G__nd280ProjectDict_640_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DShower",912,G__nd280ProjectDict_640_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DShower' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_640_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DShower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_640_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DShower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_640_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DShower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_640_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DShower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_640_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_640_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DShower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_640_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DShower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_640_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DShower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_640_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DShower::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DShower", 1038, G__nd280ProjectDict_640_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_640_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DShower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DTrack(void) {
   /* ND::TP0DReconModule::TP0DTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack));
   G__memfunc_setup("TP0DTrack",781,G__nd280ProjectDict_641_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DTrack",781,G__nd280ProjectDict_641_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_641_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_641_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_641_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_641_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_641_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_641_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_641_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_641_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_641_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DTrack", 907, G__nd280ProjectDict_641_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_641_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DNode(void) {
   /* ND::TP0DReconModule::TP0DNode */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode));
   G__memfunc_setup("TP0DNode",670,G__nd280ProjectDict_642_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DNode",670,G__nd280ProjectDict_642_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DNode' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_642_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DNode::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_642_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DNode::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_642_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DNode::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_642_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DNode::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_642_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_642_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DNode::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_642_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DNode::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_642_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DNode::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_642_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DNode::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DNode", 796, G__nd280ProjectDict_642_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_642_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DNode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DHit(void) {
   /* ND::TP0DReconModule::TP0DHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit));
   G__memfunc_setup("TP0DHit",573,G__nd280ProjectDict_643_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DHit",573,G__nd280ProjectDict_643_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_643_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_643_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_643_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_643_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_643_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_643_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_643_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_643_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_643_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DHit", 699, G__nd280ProjectDict_643_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_643_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DCluster(void) {
   /* ND::TP0DReconModule::TP0DCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster));
   G__memfunc_setup("TP0DCluster",1018,G__nd280ProjectDict_644_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DCluster",1018,G__nd280ProjectDict_644_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DCluster' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_644_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DReconModule::TP0DCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_644_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_644_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DReconModule::TP0DCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_644_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DReconModule::TP0DCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_644_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_644_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_644_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_644_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DReconModule::TP0DCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_644_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DReconModule::TP0DCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DCluster", 1144, G__nd280ProjectDict_644_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_644_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DReconModule::TP0DCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DECALReconModule(void) {
   /* ND::TP0DECALReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule));
   G__memfunc_setup("TP0DECALReconModule",1674,G__nd280ProjectDict_669_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DECALReconModule",1674,G__nd280ProjectDict_669_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_669_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DECALReconModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_669_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_669_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DECALReconModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_669_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DECALReconModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_669_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_669_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_669_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_669_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_669_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DECALReconModule", 1800, G__nd280ProjectDict_669_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_669_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack(void) {
   /* ND::TP0DECALReconModule::TP0DECALReconTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack));
   G__memfunc_setup("TP0DECALReconTrack",1561,G__nd280ProjectDict_670_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DECALReconTrack",1561,G__nd280ProjectDict_670_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule::TP0DECALReconTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_670_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_670_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_670_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_670_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_670_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_670_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_670_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_670_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_670_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::TP0DECALReconTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DECALReconTrack", 1687, G__nd280ProjectDict_670_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_670_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule::TP0DECALReconTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower(void) {
   /* ND::TP0DECALReconModule::TP0DECALReconShower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower));
   G__memfunc_setup("TP0DECALReconShower",1692,G__nd280ProjectDict_671_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DECALReconShower",1692,G__nd280ProjectDict_671_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower), -1, 0, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule::TP0DECALReconShower' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_671_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_671_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_671_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_671_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_671_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_671_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_671_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_671_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_671_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TP0DECALReconModule::TP0DECALReconShower::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DECALReconShower", 1818, G__nd280ProjectDict_671_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_671_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower), -1, 1, 1, 1, 1, 0, "u 'ND::TP0DECALReconModule::TP0DECALReconShower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModule(void) {
   /* ND::TTrackerECALReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule));
   G__memfunc_setup("TTrackerECALReconModule",2194,G__nd280ProjectDict_672_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerECALReconModule",2194,G__nd280ProjectDict_672_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_672_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALReconModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_672_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_672_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALReconModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_672_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALReconModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_672_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_672_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_672_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_672_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_672_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerECALReconModule", 2320, G__nd280ProjectDict_672_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_672_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconObject(void) {
   /* ND::TTrackerECALReconModule::TECALReconObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject));
   G__memfunc_setup("TECALReconObject",1463,G__nd280ProjectDict_673_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALReconObject",1463,G__nd280ProjectDict_673_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_673_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALReconModule::TECALReconObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_673_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_673_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALReconModule::TECALReconObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_673_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALReconModule::TECALReconObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_673_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_673_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_673_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_673_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_673_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALReconObject", 1589, G__nd280ProjectDict_673_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_673_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconTrack(void) {
   /* ND::TTrackerECALReconModule::TECALReconTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack));
   G__memfunc_setup("TECALReconTrack",1365,G__nd280ProjectDict_674_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALReconTrack",1365,G__nd280ProjectDict_674_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_674_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_674_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_674_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_674_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_674_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_674_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_674_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_674_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_674_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALReconTrack", 1491, G__nd280ProjectDict_674_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_674_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconShower(void) {
   /* ND::TTrackerECALReconModule::TECALReconShower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower));
   G__memfunc_setup("TECALReconShower",1496,G__nd280ProjectDict_675_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALReconShower",1496,G__nd280ProjectDict_675_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconShower' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_675_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALReconModule::TECALReconShower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_675_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconShower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_675_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALReconModule::TECALReconShower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_675_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALReconModule::TECALReconShower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_675_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_675_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconShower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_675_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconShower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_675_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconShower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_675_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconShower::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALReconShower", 1622, G__nd280ProjectDict_675_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_675_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconShower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconCluster(void) {
   /* ND::TTrackerECALReconModule::TECALReconCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster));
   G__memfunc_setup("TECALReconCluster",1602,G__nd280ProjectDict_676_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALReconCluster",1602,G__nd280ProjectDict_676_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconCluster' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_676_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_676_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_676_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_676_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_676_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_676_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_676_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_676_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_676_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALReconCluster", 1728, G__nd280ProjectDict_676_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_676_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject(void) {
   /* ND::TTrackerECALReconModule::TECALReconUnmatchedObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject));
   G__memfunc_setup("TECALReconUnmatchedObject",2384,G__nd280ProjectDict_677_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALReconUnmatchedObject",2384,G__nd280ProjectDict_677_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconUnmatchedObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_677_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_677_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_677_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_677_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_677_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_677_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_677_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_677_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_677_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALReconModule::TECALReconUnmatchedObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALReconUnmatchedObject", 2510, G__nd280ProjectDict_677_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_677_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALReconModule::TECALReconUnmatchedObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerECALPi0ReconModule(void) {
   /* ND::TTrackerECALPi0ReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule));
   G__memfunc_setup("TTrackerECALPi0ReconModule",2427,G__nd280ProjectDict_678_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerECALPi0ReconModule",2427,G__nd280ProjectDict_678_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerECALPi0ReconModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_678_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerECALPi0ReconModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_678_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALPi0ReconModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_678_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerECALPi0ReconModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_678_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerECALPi0ReconModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_678_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_678_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALPi0ReconModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_678_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALPi0ReconModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_678_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerECALPi0ReconModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_678_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerECALPi0ReconModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerECALPi0ReconModule", 2553, G__nd280ProjectDict_678_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_678_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerECALPi0ReconModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModule(void) {
   /* ND::TGlobalReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule));
   G__memfunc_setup("TGlobalReconModule",1794,G__nd280ProjectDict_679_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGlobalReconModule",1794,G__nd280ProjectDict_679_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_679_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_679_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_679_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_679_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_679_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_679_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_679_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_679_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_679_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGlobalReconModule", 1920, G__nd280ProjectDict_679_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_679_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalVertex(void) {
   /* ND::TGlobalReconModule::TGlobalVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex));
   G__memfunc_setup("TGlobalVertex",1315,G__nd280ProjectDict_680_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGlobalVertex",1315,G__nd280ProjectDict_680_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalVertex' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_680_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TGlobalVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_680_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_680_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TGlobalVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_680_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TGlobalVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_680_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_680_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_680_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_680_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_680_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGlobalVertex", 1441, G__nd280ProjectDict_680_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_680_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTVertexConstituent(void) {
   /* ND::TGlobalReconModule::TVertexConstituent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent));
   G__memfunc_setup("TVertexConstituent",1906,G__nd280ProjectDict_681_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TVertexConstituent",1906,G__nd280ProjectDict_681_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TVertexConstituent' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_681_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TVertexConstituent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_681_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TVertexConstituent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_681_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TVertexConstituent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_681_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TVertexConstituent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_681_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_681_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TVertexConstituent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_681_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TVertexConstituent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_681_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TVertexConstituent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_681_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TVertexConstituent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TVertexConstituent", 2032, G__nd280ProjectDict_681_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_681_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TVertexConstituent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTFgdCluster(void) {
   /* ND::TGlobalReconModule::TFgdCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster));
   G__memfunc_setup("TFgdCluster",1095,G__nd280ProjectDict_682_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgdCluster",1095,G__nd280ProjectDict_682_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TFgdCluster' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_682_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TFgdCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_682_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFgdCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_682_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TFgdCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_682_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TFgdCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_682_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_682_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFgdCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_682_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TFgdCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_682_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFgdCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_682_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TFgdCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgdCluster", 1221, G__nd280ProjectDict_682_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_682_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TFgdCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTFgdTimeBin(void) {
   /* ND::TGlobalReconModule::TFgdTimeBin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin));
   G__memfunc_setup("TFgdTimeBin",1037,G__nd280ProjectDict_683_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgdTimeBin",1037,G__nd280ProjectDict_683_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TFgdTimeBin' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_683_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TFgdTimeBin::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_683_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFgdTimeBin::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_683_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TFgdTimeBin::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_683_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TFgdTimeBin::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_683_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_683_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFgdTimeBin::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_683_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TFgdTimeBin::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_683_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFgdTimeBin::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_683_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TFgdTimeBin::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgdTimeBin", 1163, G__nd280ProjectDict_683_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_683_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TFgdTimeBin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTOutermostHits(void) {
   /* ND::TGlobalReconModule::TOutermostHits */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits));
   G__memfunc_setup("TOutermostHits",1470,G__nd280ProjectDict_684_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOutermostHits",1470,G__nd280ProjectDict_684_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TOutermostHits' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_684_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TOutermostHits::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_684_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TOutermostHits::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_684_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TOutermostHits::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_684_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TOutermostHits::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_684_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_684_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TOutermostHits::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_684_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TOutermostHits::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_684_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TOutermostHits::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_684_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TOutermostHits::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOutermostHits", 1596, G__nd280ProjectDict_684_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_684_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TOutermostHits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalHit(void) {
   /* ND::TGlobalReconModule::TGlobalHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit));
   G__memfunc_setup("TGlobalHit",970,G__nd280ProjectDict_685_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGlobalHit",970,G__nd280ProjectDict_685_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_685_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TGlobalHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_685_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_685_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TGlobalHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_685_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TGlobalHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_685_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_685_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_685_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_685_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_685_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGlobalHit", 1096, G__nd280ProjectDict_685_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_685_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalPID(void) {
   /* ND::TGlobalReconModule::TGlobalPID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID));
   G__memfunc_setup("TGlobalPID",898,G__nd280ProjectDict_686_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGlobalPID",898,G__nd280ProjectDict_686_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalPID' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_686_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TGlobalPID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_686_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_686_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TGlobalPID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_686_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TGlobalPID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_686_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_686_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_686_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalPID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_686_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_686_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalPID::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGlobalPID", 1024, G__nd280ProjectDict_686_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_686_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalPID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTPCObject(void) {
   /* ND::TGlobalReconModule::TTPCObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject));
   G__memfunc_setup("TTPCObject",914,G__nd280ProjectDict_687_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCObject",914,G__nd280ProjectDict_687_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTPCObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_687_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TTPCObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_687_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_687_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TTPCObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_687_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TTPCObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_687_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_687_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_687_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTPCObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_687_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_687_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTPCObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTPCObject", 1040, G__nd280ProjectDict_687_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_687_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTPCObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTFGDObject(void) {
   /* ND::TGlobalReconModule::TFGDObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject));
   G__memfunc_setup("TFGDObject",892,G__nd280ProjectDict_688_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFGDObject",892,G__nd280ProjectDict_688_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TFGDObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_688_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TFGDObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_688_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFGDObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_688_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TFGDObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_688_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TFGDObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_688_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_688_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFGDObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_688_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TFGDObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_688_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TFGDObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_688_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TFGDObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFGDObject", 1018, G__nd280ProjectDict_688_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_688_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TFGDObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTECALObject(void) {
   /* ND::TGlobalReconModule::TECALObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject));
   G__memfunc_setup("TECALObject",960,G__nd280ProjectDict_689_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALObject",960,G__nd280ProjectDict_689_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TECALObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_689_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TECALObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_689_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TECALObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_689_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TECALObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_689_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TECALObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_689_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_689_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TECALObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_689_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TECALObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_689_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TECALObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_689_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TECALObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALObject", 1086, G__nd280ProjectDict_689_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_689_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TECALObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTP0DObject(void) {
   /* ND::TGlobalReconModule::TP0DObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject));
   G__memfunc_setup("TP0DObject",879,G__nd280ProjectDict_690_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TP0DObject",879,G__nd280ProjectDict_690_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TP0DObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_690_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TP0DObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_690_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TP0DObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_690_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TP0DObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_690_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TP0DObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_690_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_690_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TP0DObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_690_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TP0DObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_690_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TP0DObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_690_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TP0DObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TP0DObject", 1005, G__nd280ProjectDict_690_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_690_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TP0DObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTSMRDObject(void) {
   /* ND::TGlobalReconModule::TSMRDObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject));
   G__memfunc_setup("TSMRDObject",993,G__nd280ProjectDict_691_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSMRDObject",993,G__nd280ProjectDict_691_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TSMRDObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_691_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TSMRDObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_691_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_691_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TSMRDObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_691_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TSMRDObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_691_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_691_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_691_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TSMRDObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_691_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_691_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TSMRDObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSMRDObject", 1119, G__nd280ProjectDict_691_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_691_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TSMRDObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTrackerObject(void) {
   /* ND::TGlobalReconModule::TTrackerObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject));
   G__memfunc_setup("TTrackerObject",1399,G__nd280ProjectDict_692_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerObject",1399,G__nd280ProjectDict_692_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTrackerObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_692_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TTrackerObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_692_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTrackerObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_692_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TTrackerObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_692_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TTrackerObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_692_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_692_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTrackerObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_692_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTrackerObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_692_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTrackerObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_692_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTrackerObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerObject", 1525, G__nd280ProjectDict_692_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_692_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTrackerObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate(void) {
   /* ND::TGlobalReconModule::TGlobalPIDAlternate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate));
   G__memfunc_setup("TGlobalPIDAlternate",1826,G__nd280ProjectDict_693_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGlobalPIDAlternate",1826,G__nd280ProjectDict_693_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalPIDAlternate' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_693_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_693_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_693_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_693_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_693_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_693_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_693_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_693_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_693_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TGlobalPIDAlternate::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGlobalPIDAlternate", 1952, G__nd280ProjectDict_693_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_693_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TGlobalPIDAlternate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTPCOtherObject(void) {
   /* ND::TGlobalReconModule::TTPCOtherObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject));
   G__memfunc_setup("TTPCOtherObject",1428,G__nd280ProjectDict_694_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCOtherObject",1428,G__nd280ProjectDict_694_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTPCOtherObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_694_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TTPCOtherObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_694_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCOtherObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_694_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TTPCOtherObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_694_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TTPCOtherObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_694_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_694_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCOtherObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_694_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTPCOtherObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_694_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TTPCOtherObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_694_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TTPCOtherObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTPCOtherObject", 1554, G__nd280ProjectDict_694_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_694_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TTPCOtherObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGlobalReconModulecLcLTSMRDHit(void) {
   /* ND::TGlobalReconModule::TSMRDHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit));
   G__memfunc_setup("TSMRDHit",687,G__nd280ProjectDict_695_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSMRDHit",687,G__nd280ProjectDict_695_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit), -1, 0, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TSMRDHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_695_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGlobalReconModule::TSMRDHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_695_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_695_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGlobalReconModule::TSMRDHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_695_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGlobalReconModule::TSMRDHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_695_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_695_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_695_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TSMRDHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_695_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGlobalReconModule::TSMRDHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_695_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGlobalReconModule::TSMRDHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSMRDHit", 813, G__nd280ProjectDict_695_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_695_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit), -1, 1, 1, 1, 1, 0, "u 'ND::TGlobalReconModule::TSMRDHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModule(void) {
   /* ND::TTrackerReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule));
   G__memfunc_setup("TTrackerReconModule",1917,G__nd280ProjectDict_696_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerReconModule",1917,G__nd280ProjectDict_696_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_696_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_696_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_696_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_696_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_696_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_696_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_696_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_696_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_696_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerReconModule", 2043, G__nd280ProjectDict_696_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_696_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerVertex(void) {
   /* ND::TTrackerReconModule::TTrackerVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex));
   G__memfunc_setup("TTrackerVertex",1438,G__nd280ProjectDict_697_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerVertex",1438,G__nd280ProjectDict_697_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerVertex' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_697_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrackerVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_697_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_697_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrackerVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_697_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrackerVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_697_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_697_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_697_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_697_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_697_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerVertex", 1564, G__nd280ProjectDict_697_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_697_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerResult(void) {
   /* ND::TTrackerReconModule::TTrackerResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult));
   G__memfunc_setup("TTrackerResult",1439,G__nd280ProjectDict_698_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerResult",1439,G__nd280ProjectDict_698_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerResult' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_698_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrackerResult::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_698_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerResult::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_698_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrackerResult::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_698_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrackerResult::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_698_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_698_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerResult::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_698_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerResult::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_698_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerResult::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_698_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerResult::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerResult", 1565, G__nd280ProjectDict_698_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_698_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrueParticle(void) {
   /* ND::TTrackerReconModule::TTrueParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle));
   G__memfunc_setup("TTrueParticle",1320,G__nd280ProjectDict_699_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrueParticle",1320,G__nd280ProjectDict_699_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrueParticle' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_699_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrueParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_699_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrueParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_699_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrueParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_699_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrueParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_699_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_699_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrueParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_699_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrueParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_699_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrueParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_699_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrueParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrueParticle", 1446, G__nd280ProjectDict_699_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_699_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrueParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerConstituent(void) {
   /* ND::TTrackerReconModule::TTrackerConstituent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent));
   G__memfunc_setup("TTrackerConstituent",1984,G__nd280ProjectDict_700_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerConstituent",1984,G__nd280ProjectDict_700_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerConstituent' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_700_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrackerConstituent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_700_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerConstituent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_700_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrackerConstituent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_700_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrackerConstituent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_700_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_700_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerConstituent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_700_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerConstituent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_700_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerConstituent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_700_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerConstituent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerConstituent", 2110, G__nd280ProjectDict_700_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_700_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerConstituent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTPCTrack(void) {
   /* ND::TTrackerReconModule::TTPCTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack));
   G__memfunc_setup("TTPCTrack",816,G__nd280ProjectDict_701_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCTrack",816,G__nd280ProjectDict_701_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTPCTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_701_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTPCTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_701_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTPCTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_701_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTPCTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_701_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTPCTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_701_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_701_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTPCTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_701_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTPCTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_701_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTPCTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_701_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTPCTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTPCTrack", 942, G__nd280ProjectDict_701_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_701_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTPCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTFGDTrack(void) {
   /* ND::TTrackerReconModule::TFGDTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack));
   G__memfunc_setup("TFGDTrack",794,G__nd280ProjectDict_702_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFGDTrack",794,G__nd280ProjectDict_702_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TFGDTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_702_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TFGDTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_702_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TFGDTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_702_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TFGDTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_702_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TFGDTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_702_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_702_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TFGDTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_702_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TFGDTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_702_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TFGDTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_702_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TFGDTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFGDTrack", 920, G__nd280ProjectDict_702_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_702_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TFGDTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerNode(void) {
   /* ND::TTrackerReconModule::TTrackerNode */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode));
   G__memfunc_setup("TTrackerNode",1190,G__nd280ProjectDict_703_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackerNode",1190,G__nd280ProjectDict_703_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerNode' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_703_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrackerNode::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_703_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerNode::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_703_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrackerNode::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_703_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrackerNode::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_703_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_703_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerNode::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_703_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerNode::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_703_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackerNode::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_703_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackerNode::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackerNode", 1316, G__nd280ProjectDict_703_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_703_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackerNode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackOther(void) {
   /* ND::TTrackerReconModule::TTrackOther */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther));
   G__memfunc_setup("TTrackOther",1099,G__nd280ProjectDict_704_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTrackOther",1099,G__nd280ProjectDict_704_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackOther' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_704_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TTrackOther::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_704_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackOther::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_704_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TTrackOther::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_704_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TTrackOther::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_704_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_704_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackOther::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_704_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackOther::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_704_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TTrackOther::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_704_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TTrackOther::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTrackOther", 1225, G__nd280ProjectDict_704_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_704_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TTrackOther' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTTrackerReconModulecLcLTUnusedHit(void) {
   /* ND::TTrackerReconModule::TUnusedHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit));
   G__memfunc_setup("TUnusedHit",1005,G__nd280ProjectDict_705_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TUnusedHit",1005,G__nd280ProjectDict_705_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit), -1, 0, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TUnusedHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_705_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TTrackerReconModule::TUnusedHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_705_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TUnusedHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_705_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TTrackerReconModule::TUnusedHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_705_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TTrackerReconModule::TUnusedHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_705_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_705_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TUnusedHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_705_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TUnusedHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_705_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TTrackerReconModule::TUnusedHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_705_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TTrackerReconModule::TUnusedHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TUnusedHit", 1131, G__nd280ProjectDict_705_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_705_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit), -1, 1, 1, 1, 1, 0, "u 'ND::TTrackerReconModule::TUnusedHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTECALTestbeamModule(void) {
   /* ND::TECALTestbeamModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule));
   G__memfunc_setup("TECALTestbeamModule",1796,G__nd280ProjectDict_706_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECALTestbeamModule",1796,G__nd280ProjectDict_706_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule), -1, 0, 1, 1, 1, 0, "u 'ND::TECALTestbeamModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_706_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TECALTestbeamModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_706_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TECALTestbeamModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_706_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TECALTestbeamModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_706_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TECALTestbeamModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_706_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_706_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TECALTestbeamModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_706_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TECALTestbeamModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_706_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TECALTestbeamModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_706_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TECALTestbeamModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TECALTestbeamModule", 1922, G__nd280ProjectDict_706_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_706_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule), -1, 1, 1, 1, 1, 0, "u 'ND::TECALTestbeamModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSmrdReconModule(void) {
   /* ND::TSmrdReconModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule));
   G__memfunc_setup("TSmrdReconModule",1607,G__nd280ProjectDict_707_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSmrdReconModule",1607,G__nd280ProjectDict_707_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule), -1, 0, 1, 1, 1, 0, "u 'ND::TSmrdReconModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_707_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TSmrdReconModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_707_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_707_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TSmrdReconModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_707_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TSmrdReconModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_707_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_707_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_707_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSmrdReconModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_707_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_707_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSmrdReconModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSmrdReconModule", 1733, G__nd280ProjectDict_707_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_707_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule), -1, 1, 1, 1, 1, 0, "u 'ND::TSmrdReconModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSmrdReconModulecLcLTSmrdReconHit(void) {
   /* ND::TSmrdReconModule::TSmrdReconHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit));
   G__memfunc_setup("TSmrdReconHit",1286,G__nd280ProjectDict_708_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSmrdReconHit",1286,G__nd280ProjectDict_708_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit), -1, 0, 1, 1, 1, 0, "u 'ND::TSmrdReconModule::TSmrdReconHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_708_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TSmrdReconModule::TSmrdReconHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_708_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdReconHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_708_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TSmrdReconModule::TSmrdReconHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_708_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TSmrdReconModule::TSmrdReconHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_708_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_708_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdReconHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_708_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSmrdReconModule::TSmrdReconHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_708_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdReconHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_708_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSmrdReconModule::TSmrdReconHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSmrdReconHit", 1412, G__nd280ProjectDict_708_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_708_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit), -1, 1, 1, 1, 1, 0, "u 'ND::TSmrdReconModule::TSmrdReconHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack(void) {
   /* ND::TSmrdReconModule::TSmrdIsoTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack));
   G__memfunc_setup("TSmrdIsoTrack",1290,G__nd280ProjectDict_709_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSmrdIsoTrack",1290,G__nd280ProjectDict_709_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TSmrdReconModule::TSmrdIsoTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_709_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_709_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_709_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_709_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_709_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_709_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_709_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_709_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_709_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TSmrdReconModule::TSmrdIsoTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSmrdIsoTrack", 1416, G__nd280ProjectDict_709_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_709_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TSmrdReconModule::TSmrdIsoTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTLowLevelInfoModule(void) {
   /* ND::TLowLevelInfoModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule));
   G__memfunc_setup("TLowLevelInfoModule",1904,G__nd280ProjectDict_710_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLowLevelInfoModule",1904,G__nd280ProjectDict_710_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule), -1, 0, 1, 1, 1, 0, "u 'ND::TLowLevelInfoModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_710_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TLowLevelInfoModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_710_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TLowLevelInfoModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_710_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TLowLevelInfoModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_710_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TLowLevelInfoModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_710_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_710_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TLowLevelInfoModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_710_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TLowLevelInfoModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_710_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TLowLevelInfoModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_710_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TLowLevelInfoModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLowLevelInfoModule", 2030, G__nd280ProjectDict_710_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_710_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule), -1, 1, 1, 1, 1, 0, "u 'ND::TLowLevelInfoModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit(void) {
   /* ND::TLowLevelInfoModule::TLowLevelTFBDigit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit));
   G__memfunc_setup("TLowLevelTFBDigit",1611,G__nd280ProjectDict_711_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLowLevelTFBDigit",1611,G__nd280ProjectDict_711_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit), -1, 0, 1, 1, 1, 0, "u 'ND::TLowLevelInfoModule::TLowLevelTFBDigit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_711_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TLowLevelInfoModule::TLowLevelTFBDigit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_711_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TLowLevelInfoModule::TLowLevelTFBDigit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_711_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TLowLevelInfoModule::TLowLevelTFBDigit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_711_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TLowLevelInfoModule::TLowLevelTFBDigit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_711_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_711_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TLowLevelInfoModule::TLowLevelTFBDigit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_711_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TLowLevelInfoModule::TLowLevelTFBDigit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_711_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TLowLevelInfoModule::TLowLevelTFBDigit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_711_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TLowLevelInfoModule::TLowLevelTFBDigit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLowLevelTFBDigit", 1737, G__nd280ProjectDict_711_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_711_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit), -1, 1, 1, 1, 1, 0, "u 'ND::TLowLevelInfoModule::TLowLevelTFBDigit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTLowLevelInfoModulecLcLTLowLevelHit(void) {
   /* ND::TLowLevelInfoModule::TLowLevelHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit));
   G__memfunc_setup("TLowLevelHit",1187,G__nd280ProjectDict_712_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLowLevelHit",1187,G__nd280ProjectDict_712_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit), -1, 0, 1, 1, 1, 0, "u 'ND::TLowLevelInfoModule::TLowLevelHit' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_712_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TLowLevelInfoModule::TLowLevelHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_712_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TLowLevelInfoModule::TLowLevelHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_712_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TLowLevelInfoModule::TLowLevelHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_712_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TLowLevelInfoModule::TLowLevelHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_712_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_712_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TLowLevelInfoModule::TLowLevelHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_712_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TLowLevelInfoModule::TLowLevelHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_712_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TLowLevelInfoModule::TLowLevelHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_712_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TLowLevelInfoModule::TLowLevelHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLowLevelHit", 1313, G__nd280ProjectDict_712_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_712_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit), -1, 1, 1, 1, 1, 0, "u 'ND::TLowLevelInfoModule::TLowLevelHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModule(void) {
   /* ND::TFgdOnlyModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule));
   G__memfunc_setup("TFgdOnlyModule",1389,G__nd280ProjectDict_713_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgdOnlyModule",1389,G__nd280ProjectDict_713_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule), -1, 0, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_713_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TFgdOnlyModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_713_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_713_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TFgdOnlyModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_713_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TFgdOnlyModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_713_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_713_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_713_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_713_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_713_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgdOnlyModule", 1515, G__nd280ProjectDict_713_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_713_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule), -1, 1, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack(void) {
   /* ND::TFgdOnlyModule::TFgd2DIsoTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack));
   G__memfunc_setup("TFgd2DIsoTrack",1275,G__nd280ProjectDict_714_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgd2DIsoTrack",1275,G__nd280ProjectDict_714_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd2DIsoTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_714_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_714_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_714_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_714_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_714_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_714_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_714_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_714_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_714_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd2DIsoTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgd2DIsoTrack", 1401, G__nd280ProjectDict_714_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_714_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd2DIsoTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack(void) {
   /* ND::TFgdOnlyModule::TFgd3DIsoTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack));
   G__memfunc_setup("TFgd3DIsoTrack",1276,G__nd280ProjectDict_715_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgd3DIsoTrack",1276,G__nd280ProjectDict_715_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack), -1, 0, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DIsoTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_715_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_715_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_715_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_715_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_715_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_715_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_715_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_715_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_715_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DIsoTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgd3DIsoTrack", 1402, G__nd280ProjectDict_715_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_715_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack), -1, 1, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DIsoTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID(void) {
   /* ND::TFgdOnlyModule::TFgd3DShowerPID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID));
   G__memfunc_setup("TFgd3DShowerPID",1329,G__nd280ProjectDict_716_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgd3DShowerPID",1329,G__nd280ProjectDict_716_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID), -1, 0, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DShowerPID' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_716_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_716_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_716_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_716_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_716_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_716_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_716_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_716_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_716_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DShowerPID::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgd3DShowerPID", 1455, G__nd280ProjectDict_716_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_716_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID), -1, 1, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DShowerPID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp(void) {
   /* ND::TFgdOnlyModule::TFgd3DShowerHyp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp));
   G__memfunc_setup("TFgd3DShowerHyp",1413,G__nd280ProjectDict_717_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgd3DShowerHyp",1413,G__nd280ProjectDict_717_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp), -1, 0, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DShowerHyp' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_717_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_717_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_717_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_717_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_717_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_717_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_717_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_717_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_717_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd3DShowerHyp::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgd3DShowerHyp", 1539, G__nd280ProjectDict_717_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_717_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp), -1, 1, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd3DShowerHyp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd2DCluster(void) {
   /* ND::TFgdOnlyModule::TFgd2DCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster));
   G__memfunc_setup("TFgd2DCluster",1213,G__nd280ProjectDict_718_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TFgd2DCluster",1213,G__nd280ProjectDict_718_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster), -1, 0, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd2DCluster' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_718_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_718_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_718_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_718_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_718_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_718_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_718_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_718_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_718_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TFgdOnlyModule::TFgd2DCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TFgd2DCluster", 1339, G__nd280ProjectDict_718_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_718_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster), -1, 1, 1, 1, 1, 0, "u 'ND::TFgdOnlyModule::TFgd2DCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTBeamSummaryDataModule(void) {
   /* ND::TBeamSummaryDataModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule));
   G__memfunc_setup("TBeamSummaryDataModule",2199,G__nd280ProjectDict_723_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBeamSummaryDataModule",2199,G__nd280ProjectDict_723_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule), -1, 0, 1, 1, 1, 0, "u 'ND::TBeamSummaryDataModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_723_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TBeamSummaryDataModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_723_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_723_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TBeamSummaryDataModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_723_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TBeamSummaryDataModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_723_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_723_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_723_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBeamSummaryDataModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_723_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_723_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBeamSummaryDataModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TBeamSummaryDataModule", 2325, G__nd280ProjectDict_723_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_723_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule), -1, 1, 1, 1, 1, 0, "u 'ND::TBeamSummaryDataModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData(void) {
   /* ND::TBeamSummaryDataModule::TBeamSummaryData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData));
   G__memfunc_setup("TBeamSummaryData",1585,G__nd280ProjectDict_724_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TBeamSummaryData",1585,G__nd280ProjectDict_724_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData), -1, 0, 1, 1, 1, 0, "u 'ND::TBeamSummaryDataModule::TBeamSummaryData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_724_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_724_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_724_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_724_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_724_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_724_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_724_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_724_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_724_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TBeamSummaryData", 1711, G__nd280ProjectDict_724_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_724_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData), -1, 1, 1, 1, 1, 0, "u 'ND::TBeamSummaryDataModule::TBeamSummaryData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData(void) {
   /* ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData));
   G__memfunc_setup("TOtherData",976,G__nd280ProjectDict_725_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOtherData",976,G__nd280ProjectDict_725_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData), -1, 0, 1, 1, 1, 0, "u 'ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_725_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_725_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_725_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_725_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_725_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_725_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_725_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_725_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_725_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOtherData", 1102, G__nd280ProjectDict_725_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_725_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData), -1, 1, 1, 1, 1, 0, "u 'ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTReconPerformanceEvalModule(void) {
   /* ND::TReconPerformanceEvalModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule));
   G__memfunc_setup("TReconPerformanceEvalModule",2731,G__nd280ProjectDict_726_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TReconPerformanceEvalModule",2731,G__nd280ProjectDict_726_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule), -1, 0, 1, 1, 1, 0, "u 'ND::TReconPerformanceEvalModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_726_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TReconPerformanceEvalModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_726_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TReconPerformanceEvalModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_726_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TReconPerformanceEvalModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_726_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TReconPerformanceEvalModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_726_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_726_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TReconPerformanceEvalModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_726_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TReconPerformanceEvalModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_726_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TReconPerformanceEvalModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_726_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TReconPerformanceEvalModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TReconPerformanceEvalModule", 2857, G__nd280ProjectDict_726_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_726_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule), -1, 1, 1, 1, 1, 0, "u 'ND::TReconPerformanceEvalModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject(void) {
   /* ND::TReconPerformanceEvalModule::TGlobalReconObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject));
   G__memfunc_setup("TGlobalReconObject",1779,G__nd280ProjectDict_727_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGlobalReconObject",1779,G__nd280ProjectDict_727_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject), -1, 0, 1, 1, 1, 0, "u 'ND::TReconPerformanceEvalModule::TGlobalReconObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_727_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TReconPerformanceEvalModule::TGlobalReconObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_727_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TReconPerformanceEvalModule::TGlobalReconObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_727_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TReconPerformanceEvalModule::TGlobalReconObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_727_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TReconPerformanceEvalModule::TGlobalReconObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_727_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_727_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TReconPerformanceEvalModule::TGlobalReconObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_727_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TReconPerformanceEvalModule::TGlobalReconObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_727_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TReconPerformanceEvalModule::TGlobalReconObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_727_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TReconPerformanceEvalModule::TGlobalReconObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGlobalReconObject", 1905, G__nd280ProjectDict_727_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_727_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject), -1, 1, 1, 1, 1, 0, "u 'ND::TReconPerformanceEvalModule::TGlobalReconObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo(void) {
   /* ND::TReconPerformanceEvalModule::TGlobalTruthInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo));
   G__memfunc_setup("TGlobalTruthInfo",1608,G__nd280ProjectDict_728_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGlobalTruthInfo",1608,G__nd280ProjectDict_728_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo), -1, 0, 1, 1, 1, 0, "u 'ND::TReconPerformanceEvalModule::TGlobalTruthInfo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_728_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_728_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_728_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_728_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TReconPerformanceEvalModule::TGlobalTruthInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_728_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_728_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TReconPerformanceEvalModule::TGlobalTruthInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_728_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TReconPerformanceEvalModule::TGlobalTruthInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_728_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TReconPerformanceEvalModule::TGlobalTruthInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_728_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TReconPerformanceEvalModule::TGlobalTruthInfo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGlobalTruthInfo", 1734, G__nd280ProjectDict_728_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_728_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo), -1, 1, 1, 1, 1, 0, "u 'ND::TReconPerformanceEvalModule::TGlobalTruthInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTExample2010aAnalysis1Module(void) {
   /* ND::TExample2010aAnalysis1Module */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module));
   G__memfunc_setup("TExample2010aAnalysis1Module",2591,G__nd280ProjectDict_733_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TExample2010aAnalysis1Module",2591,G__nd280ProjectDict_733_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module), -1, 0, 1, 1, 1, 0, "u 'ND::TExample2010aAnalysis1Module' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_733_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TExample2010aAnalysis1Module::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_733_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TExample2010aAnalysis1Module::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_733_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TExample2010aAnalysis1Module::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_733_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TExample2010aAnalysis1Module::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_733_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_733_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TExample2010aAnalysis1Module::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_733_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TExample2010aAnalysis1Module::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_733_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TExample2010aAnalysis1Module::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_733_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TExample2010aAnalysis1Module::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TExample2010aAnalysis1Module", 2717, G__nd280ProjectDict_733_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_733_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module), -1, 1, 1, 1, 1, 0, "u 'ND::TExample2010aAnalysis1Module' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGeometrySummaryModule(void) {
   /* ND::TGeometrySummaryModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule));
   G__memfunc_setup("TGeometrySummaryModule",2292,G__nd280ProjectDict_734_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGeometrySummaryModule",2292,G__nd280ProjectDict_734_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule), -1, 0, 1, 1, 1, 0, "u 'ND::TGeometrySummaryModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_734_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGeometrySummaryModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_734_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_734_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGeometrySummaryModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_734_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGeometrySummaryModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_734_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_734_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_734_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGeometrySummaryModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_734_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_734_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGeometrySummaryModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGeometrySummaryModule", 2418, G__nd280ProjectDict_734_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_734_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule), -1, 1, 1, 1, 1, 0, "u 'ND::TGeometrySummaryModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox(void) {
   /* ND::TGeometrySummaryModule::TDetectorBoundingBox */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox));
   G__memfunc_setup("TDetectorBoundingBox",2029,G__nd280ProjectDict_808_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDetectorBoundingBox",2029,G__nd280ProjectDict_808_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox), -1, 0, 1, 1, 1, 0, "u 'ND::TGeometrySummaryModule::TDetectorBoundingBox' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_808_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_808_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_808_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_808_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_808_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_808_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_808_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_808_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_808_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGeometrySummaryModule::TDetectorBoundingBox::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDetectorBoundingBox", 2155, G__nd280ProjectDict_808_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_808_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox), -1, 1, 1, 1, 1, 0, "u 'ND::TGeometrySummaryModule::TDetectorBoundingBox' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes(void) {
   /* ND::TGeometrySummaryModule::TTPCMicroMegasVolumes */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes));
   G__memfunc_setup("TTPCMicroMegasVolumes",2061,G__nd280ProjectDict_809_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCMicroMegasVolumes",2061,G__nd280ProjectDict_809_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes), -1, 0, 1, 1, 1, 0, "u 'ND::TGeometrySummaryModule::TTPCMicroMegasVolumes' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_809_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_809_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_809_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_809_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_809_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_809_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_809_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_809_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_809_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGeometrySummaryModule::TTPCMicroMegasVolumes::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TTPCMicroMegasVolumes", 2187, G__nd280ProjectDict_809_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_809_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes), -1, 1, 1, 1, 1, 0, "u 'ND::TGeometrySummaryModule::TTPCMicroMegasVolumes' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTGRooTrackerVtxModule(void) {
   /* ND::TGRooTrackerVtxModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule));
   G__memfunc_setup("TGRooTrackerVtxModule",2111,G__nd280ProjectDict_818_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGRooTrackerVtxModule",2111,G__nd280ProjectDict_818_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule), -1, 0, 1, 1, 1, 0, "u 'ND::TGRooTrackerVtxModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_818_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TGRooTrackerVtxModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_818_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGRooTrackerVtxModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_818_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TGRooTrackerVtxModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_818_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TGRooTrackerVtxModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_818_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_818_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGRooTrackerVtxModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_818_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGRooTrackerVtxModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_818_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TGRooTrackerVtxModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_818_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TGRooTrackerVtxModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGRooTrackerVtxModule", 2237, G__nd280ProjectDict_818_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_818_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule), -1, 1, 1, 1, 1, 0, "u 'ND::TGRooTrackerVtxModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTRooTrackerVtxModuleBase(void) {
   /* ND::TRooTrackerVtxModuleBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase));
   G__memfunc_setup("TRooTrackerVtxModuleBase",2419,G__nd280ProjectDict_819_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRooTrackerVtxModuleBase",2419,G__nd280ProjectDict_819_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase), -1, 0, 1, 1, 1, 0, "u 'ND::TRooTrackerVtxModuleBase' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_819_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TRooTrackerVtxModuleBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_819_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TRooTrackerVtxModuleBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_819_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TRooTrackerVtxModuleBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_819_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TRooTrackerVtxModuleBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_819_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_819_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TRooTrackerVtxModuleBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_819_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TRooTrackerVtxModuleBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_819_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TRooTrackerVtxModuleBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_819_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TRooTrackerVtxModuleBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TRooTrackerVtxModuleBase", 2545, G__nd280ProjectDict_819_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_819_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase), -1, 1, 1, 1, 1, 0, "u 'ND::TRooTrackerVtxModuleBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNDcLcLTNRooTrackerVtxModule(void) {
   /* ND::TNRooTrackerVtxModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule));
   G__memfunc_setup("TNRooTrackerVtxModule",2118,G__nd280ProjectDict_820_0_1, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TNRooTrackerVtxModule",2118,G__nd280ProjectDict_820_0_2, 105, G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule), -1, 0, 1, 1, 1, 0, "u 'ND::TNRooTrackerVtxModule' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__nd280ProjectDict_820_0_3, 85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ND::TNRooTrackerVtxModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__nd280ProjectDict_820_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TNRooTrackerVtxModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__nd280ProjectDict_820_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ND::TNRooTrackerVtxModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__nd280ProjectDict_820_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ND::TNRooTrackerVtxModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__nd280ProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__nd280ProjectDict_820_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__nd280ProjectDict_820_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TNRooTrackerVtxModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__nd280ProjectDict_820_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TNRooTrackerVtxModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__nd280ProjectDict_820_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ND::TNRooTrackerVtxModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__nd280ProjectDict_820_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ND::TNRooTrackerVtxModule::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TNRooTrackerVtxModule", 2244, G__nd280ProjectDict_820_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__nd280ProjectDict_820_0_16, (int) ('u'), G__get_linked_tagnum(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule), -1, 1, 1, 1, 1, 0, "u 'ND::TNRooTrackerVtxModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncnd280ProjectDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalnd280ProjectDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcnd280ProjectDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__nd280ProjectDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_ND = { "ND" , 110 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTND280Event = { "ND::TND280Event" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTDataVector = { "ND::TDataVector" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTData = { "ND::TData" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTDatum = { "ND::TDatum" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR = { "vector<ND::TDatum*,allocator<ND::TDatum*> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ND::TDatum*,allocator<ND::TDatum*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTND280Context = { "ND::TND280Context" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTND280ContextcLcLTime = { "ND::TND280Context::Time" , 101 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTSHAHashValue = { "ND::TSHAHashValue" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTAlignmentId = { "ND::TAlignmentId" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTND280EventcLcLHeader = { "ND::TND280Event::Header" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrueVertex = { "ND::TTrueVertex" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrueParticle = { "ND::TTrueParticle" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTSubBaseObject = { "ND::TSubBaseObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject = { "ND::TSubBaseShowerObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx = { "ND::GRooTrackerVtx" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLJNuBeamFlux = { "ND::JNuBeamFlux" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase = { "ND::RooTrackerVtxBase" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TObjString = { "TObjString" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx = { "ND::NRooTrackerVtx" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils = { "ND::ToaAnalysisUtils" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLToaAnalysisUtilscLcLEParticleCategory = { "ND::ToaAnalysisUtils::EParticleCategory" , 101 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLToaAnalysisUtilscLcLESubdetector = { "ND::ToaAnalysisUtils::ESubdetector" , 101 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule = { "ND::TBasicHeaderModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase = { "ND::TAnalysisHeaderModuleBase" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase = { "ND::TAnalysisModuleBase" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_pairlEstringcOintgR = { "pair<string,int>" , 115 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule = { "ND::TBasicDataQualityModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule = { "ND::TTruthTrajectoriesModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase = { "ND::TAnalysisTruthModuleBase" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory = { "ND::TTruthTrajectoriesModule::TTruthTrajectory" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR = { "vector<TLorentzVector,allocator<TLorentzVector> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TLorentzVector,allocator<TLorentzVector> >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR = { "vector<TVector3,allocator<TVector3> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector3,allocator<TVector3> >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule = { "ND::TTruthVerticesModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex = { "ND::TTruthVerticesModule::TTruthVertex" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DReconModule = { "ND::TP0DReconModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase = { "ND::TAnalysisReconModuleBase" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes = { "ND::TP0DReconModule::TP0DAlgoRes" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex = { "ND::TP0DReconModule::TP0DVertex" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle = { "ND::TP0DReconModule::TP0DParticle" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower = { "ND::TP0DReconModule::TP0DShower" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack = { "ND::TP0DReconModule::TP0DTrack" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode = { "ND::TP0DReconModule::TP0DNode" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit = { "ND::TP0DReconModule::TP0DHit" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster = { "ND::TP0DReconModule::TP0DCluster" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR = { "vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlETPRegexpcOallocatorlETPRegexpgRsPgR = { "vector<TPRegexp,allocator<TPRegexp> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlETPRegexpcOallocatorlETPRegexpgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TPRegexp,allocator<TPRegexp> >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_maplEunsignedsPintcOshortcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOshortgRsPgRsPgR = { "map<unsigned int,short,less<unsigned int>,allocator<pair<const unsigned int,short> > >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule = { "ND::TP0DECALReconModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack = { "ND::TP0DECALReconModule::TP0DECALReconTrack" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower = { "ND::TP0DECALReconModule::TP0DECALReconShower" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule = { "ND::TTrackerECALReconModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject = { "ND::TTrackerECALReconModule::TECALReconObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack = { "ND::TTrackerECALReconModule::TECALReconTrack" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower = { "ND::TTrackerECALReconModule::TECALReconShower" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster = { "ND::TTrackerECALReconModule::TECALReconCluster" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject = { "ND::TTrackerECALReconModule::TECALReconUnmatchedObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule = { "ND::TTrackerECALPi0ReconModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModule = { "ND::TGlobalReconModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex = { "ND::TGlobalReconModule::TGlobalVertex" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent = { "ND::TGlobalReconModule::TVertexConstituent" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster = { "ND::TGlobalReconModule::TFgdCluster" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin = { "ND::TGlobalReconModule::TFgdTimeBin" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits = { "ND::TGlobalReconModule::TOutermostHits" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit = { "ND::TGlobalReconModule::TGlobalHit" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID = { "ND::TGlobalReconModule::TGlobalPID" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject = { "ND::TGlobalReconModule::TTPCObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject = { "ND::TGlobalReconModule::TFGDObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject = { "ND::TGlobalReconModule::TECALObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject = { "ND::TGlobalReconModule::TP0DObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject = { "ND::TGlobalReconModule::TSMRDObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject = { "ND::TGlobalReconModule::TTrackerObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate = { "ND::TGlobalReconModule::TGlobalPIDAlternate" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject = { "ND::TGlobalReconModule::TTPCOtherObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit = { "ND::TGlobalReconModule::TSMRDHit" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerReconModule = { "ND::TTrackerReconModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex = { "ND::TTrackerReconModule::TTrackerVertex" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult = { "ND::TTrackerReconModule::TTrackerResult" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle = { "ND::TTrackerReconModule::TTrueParticle" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent = { "ND::TTrackerReconModule::TTrackerConstituent" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack = { "ND::TTrackerReconModule::TTPCTrack" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack = { "ND::TTrackerReconModule::TFGDTrack" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode = { "ND::TTrackerReconModule::TTrackerNode" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther = { "ND::TTrackerReconModule::TTrackOther" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit = { "ND::TTrackerReconModule::TUnusedHit" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule = { "ND::TECALTestbeamModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTSmrdReconModule = { "ND::TSmrdReconModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit = { "ND::TSmrdReconModule::TSmrdReconHit" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack = { "ND::TSmrdReconModule::TSmrdIsoTrack" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule = { "ND::TLowLevelInfoModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit = { "ND::TLowLevelInfoModule::TLowLevelTFBDigit" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit = { "ND::TLowLevelInfoModule::TLowLevelHit" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule = { "ND::TFgdOnlyModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack = { "ND::TFgdOnlyModule::TFgd2DIsoTrack" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack = { "ND::TFgdOnlyModule::TFgd3DIsoTrack" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID = { "ND::TFgdOnlyModule::TFgd3DShowerPID" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp = { "ND::TFgdOnlyModule::TFgd3DShowerHyp" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster = { "ND::TFgdOnlyModule::TFgd2DCluster" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR = { "vector<TVector3*,allocator<TVector3*> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVector3mUcOallocatorlETVector3mUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector3*,allocator<TVector3*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule = { "ND::TBeamSummaryDataModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData = { "ND::TBeamSummaryDataModule::TBeamSummaryData" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData = { "ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule = { "ND::TReconPerformanceEvalModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject = { "ND::TReconPerformanceEvalModule::TGlobalReconObject" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo = { "ND::TReconPerformanceEvalModule::TGlobalTruthInfo" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR = { "vector<pair<string,int>,allocator<pair<string,int> > >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<string,int>,allocator<pair<string,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module = { "ND::TExample2010aAnalysis1Module" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule = { "ND::TGeometrySummaryModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox = { "ND::TGeometrySummaryModule::TDetectorBoundingBox" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes = { "ND::TGeometrySummaryModule::TTPCMicroMegasVolumes" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR = { "map<int,pair<int,const TGeoNode*>,less<int>,allocator<pair<const int,pair<int,const TGeoNode*> > > >" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule = { "ND::TGRooTrackerVtxModule" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase = { "ND::TRooTrackerVtxModuleBase" , 99 , -1 };
G__linked_taginfo G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule = { "ND::TNRooTrackerVtxModule" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablend280ProjectDict() {
  G__nd280ProjectDictLN_TClass.tagnum = -1 ;
  G__nd280ProjectDictLN_TBuffer.tagnum = -1 ;
  G__nd280ProjectDictLN_TMemberInspector.tagnum = -1 ;
  G__nd280ProjectDictLN_TObject.tagnum = -1 ;
  G__nd280ProjectDictLN_TNamed.tagnum = -1 ;
  G__nd280ProjectDictLN_TString.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_string.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TClonesArray.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_ND.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTND280Event.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTDataVector.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTData.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTDatum.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTND280Context.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTND280ContextcLcLTime.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTSHAHashValue.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTAlignmentId.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTND280EventcLcLHeader.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrueVertex.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__nd280ProjectDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__nd280ProjectDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TVector3.tagnum = -1 ;
  G__nd280ProjectDictLN_TLorentzVector.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrueParticle.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTSubBaseObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLJNuBeamFlux.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase.tagnum = -1 ;
  G__nd280ProjectDictLN_TObjString.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLToaAnalysisUtilscLcLEParticleCategory.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLToaAnalysisUtilscLcLESubdetector.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase.tagnum = -1 ;
  G__nd280ProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__nd280ProjectDictLN_TTree.tagnum = -1 ;
  G__nd280ProjectDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_pairlEstringcOintgR.tagnum = -1 ;
  G__nd280ProjectDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase.tagnum = -1 ;
  G__nd280ProjectDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DReconModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlETPRegexpcOallocatorlETPRegexpgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlETPRegexpcOallocatorlETPRegexpgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_maplEunsignedsPintcOshortcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOshortgRsPgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerReconModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTSmrdReconModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVector3mUcOallocatorlETVector3mUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule.tagnum = -1 ;
  G__nd280ProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes.tagnum = -1 ;
  G__nd280ProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase.tagnum = -1 ;
  G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablend280ProjectDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TString);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_string);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_ND),0,-1,262144,(char*)NULL,G__setup_memvarND,G__setup_memfuncND);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTND280Event),sizeof(ND::TND280Event),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTND280Event,G__setup_memfuncNDcLcLTND280Event);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTDataVector),sizeof(ND::TDataVector),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTDataVector,G__setup_memfuncNDcLcLTDataVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTData),sizeof(ND::TData),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTData,G__setup_memfuncNDcLcLTData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTDatum),sizeof(ND::TDatum),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTDatum,G__setup_memfuncNDcLcLTDatum);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlENDcLcLTDatummUcOallocatorlENDcLcLTDatummUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTND280Context),sizeof(ND::TND280Context),-1,263936,(char*)NULL,G__setup_memvarNDcLcLTND280Context,G__setup_memfuncNDcLcLTND280Context);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTND280ContextcLcLTime),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTSHAHashValue),sizeof(ND::TSHAHashValue),-1,263936,(char*)NULL,G__setup_memvarNDcLcLTSHAHashValue,G__setup_memfuncNDcLcLTSHAHashValue);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTAlignmentId),sizeof(ND::TAlignmentId),-1,263936,(char*)NULL,G__setup_memvarNDcLcLTAlignmentId,G__setup_memfuncNDcLcLTAlignmentId);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTND280EventcLcLHeader),sizeof(ND::TND280Event::Header),-1,263936,"Generated by MakeProject.",G__setup_memvarNDcLcLTND280EventcLcLHeader,G__setup_memfuncNDcLcLTND280EventcLcLHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrueVertex),sizeof(ND::TTrueVertex),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrueVertex,G__setup_memfuncNDcLcLTTrueVertex);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrueParticle),sizeof(ND::TTrueParticle),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrueParticle,G__setup_memfuncNDcLcLTTrueParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTSubBaseObject),sizeof(ND::TSubBaseObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTSubBaseObject,G__setup_memfuncNDcLcLTSubBaseObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTSubBaseShowerObject),sizeof(ND::TSubBaseShowerObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTSubBaseShowerObject,G__setup_memfuncNDcLcLTSubBaseShowerObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLGRooTrackerVtx),sizeof(ND::GRooTrackerVtx),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLGRooTrackerVtx,G__setup_memfuncNDcLcLGRooTrackerVtx);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLJNuBeamFlux),sizeof(ND::JNuBeamFlux),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLJNuBeamFlux,G__setup_memfuncNDcLcLJNuBeamFlux);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLRooTrackerVtxBase),sizeof(ND::RooTrackerVtxBase),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLRooTrackerVtxBase,G__setup_memfuncNDcLcLRooTrackerVtxBase);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TObjString);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLNRooTrackerVtx),sizeof(ND::NRooTrackerVtx),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLNRooTrackerVtx,G__setup_memfuncNDcLcLNRooTrackerVtx);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtils),sizeof(ND::ToaAnalysisUtils),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLToaAnalysisUtils,G__setup_memfuncNDcLcLToaAnalysisUtils);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtilscLcLEParticleCategory),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLToaAnalysisUtilscLcLESubdetector),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTBasicHeaderModule),sizeof(ND::TBasicHeaderModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTBasicHeaderModule,G__setup_memfuncNDcLcLTBasicHeaderModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTAnalysisHeaderModuleBase),sizeof(ND::TAnalysisHeaderModuleBase),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTAnalysisHeaderModuleBase,G__setup_memfuncNDcLcLTAnalysisHeaderModuleBase);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTAnalysisModuleBase),sizeof(ND::TAnalysisModuleBase),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTAnalysisModuleBase,G__setup_memfuncNDcLcLTAnalysisModuleBase);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_pairlEstringcOintgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTBasicDataQualityModule),sizeof(ND::TBasicDataQualityModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTBasicDataQualityModule,G__setup_memfuncNDcLcLTBasicDataQualityModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModule),sizeof(ND::TTruthTrajectoriesModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTTruthTrajectoriesModule,G__setup_memfuncNDcLcLTTruthTrajectoriesModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTAnalysisTruthModuleBase),sizeof(ND::TAnalysisTruthModuleBase),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTAnalysisTruthModuleBase,G__setup_memfuncNDcLcLTAnalysisTruthModuleBase);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory),sizeof(ND::TTruthTrajectoriesModule::TTruthTrajectory),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory,G__setup_memfuncNDcLcLTTruthTrajectoriesModulecLcLTTruthTrajectory);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModule),sizeof(ND::TTruthVerticesModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTTruthVerticesModule,G__setup_memfuncNDcLcLTTruthVerticesModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTruthVerticesModulecLcLTTruthVertex),sizeof(ND::TTruthVerticesModule::TTruthVertex),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTruthVerticesModulecLcLTTruthVertex,G__setup_memfuncNDcLcLTTruthVerticesModulecLcLTTruthVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DReconModule),sizeof(ND::TP0DReconModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModule,G__setup_memfuncNDcLcLTP0DReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTAnalysisReconModuleBase),sizeof(ND::TAnalysisReconModuleBase),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTAnalysisReconModuleBase,G__setup_memfuncNDcLcLTAnalysisReconModuleBase);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DAlgoRes),sizeof(ND::TP0DReconModule::TP0DAlgoRes),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DAlgoRes,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DAlgoRes);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DVertex),sizeof(ND::TP0DReconModule::TP0DVertex),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DVertex,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DParticle),sizeof(ND::TP0DReconModule::TP0DParticle),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DParticle,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DShower),sizeof(ND::TP0DReconModule::TP0DShower),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DShower,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DShower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DTrack),sizeof(ND::TP0DReconModule::TP0DTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DTrack,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DNode),sizeof(ND::TP0DReconModule::TP0DNode),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DNode,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DNode);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DHit),sizeof(ND::TP0DReconModule::TP0DHit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DHit,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DReconModulecLcLTP0DCluster),sizeof(ND::TP0DReconModule::TP0DCluster),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DReconModulecLcLTP0DCluster,G__setup_memfuncNDcLcLTP0DReconModulecLcLTP0DCluster);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlETPRegexpcOallocatorlETPRegexpgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETPRegexpcOallocatorlETPRegexpgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_maplEunsignedsPintcOshortcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOshortgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModule),sizeof(ND::TP0DECALReconModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DECALReconModule,G__setup_memfuncNDcLcLTP0DECALReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack),sizeof(ND::TP0DECALReconModule::TP0DECALReconTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack,G__setup_memfuncNDcLcLTP0DECALReconModulecLcLTP0DECALReconTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTP0DECALReconModulecLcLTP0DECALReconShower),sizeof(ND::TP0DECALReconModule::TP0DECALReconShower),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower,G__setup_memfuncNDcLcLTP0DECALReconModulecLcLTP0DECALReconShower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModule),sizeof(ND::TTrackerECALReconModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALReconModule,G__setup_memfuncNDcLcLTTrackerECALReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconObject),sizeof(ND::TTrackerECALReconModule::TECALReconObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconObject,G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconTrack),sizeof(ND::TTrackerECALReconModule::TECALReconTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconTrack,G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconShower),sizeof(ND::TTrackerECALReconModule::TECALReconShower),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconShower,G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconShower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconCluster),sizeof(ND::TTrackerECALReconModule::TECALReconCluster),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconCluster,G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject),sizeof(ND::TTrackerECALReconModule::TECALReconUnmatchedObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject,G__setup_memfuncNDcLcLTTrackerECALReconModulecLcLTECALReconUnmatchedObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerECALPi0ReconModule),sizeof(ND::TTrackerECALPi0ReconModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerECALPi0ReconModule,G__setup_memfuncNDcLcLTTrackerECALPi0ReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModule),sizeof(ND::TGlobalReconModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModule,G__setup_memfuncNDcLcLTGlobalReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalVertex),sizeof(ND::TGlobalReconModule::TGlobalVertex),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalVertex,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTVertexConstituent),sizeof(ND::TGlobalReconModule::TVertexConstituent),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTVertexConstituent,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTVertexConstituent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdCluster),sizeof(ND::TGlobalReconModule::TFgdCluster),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTFgdCluster,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTFgdCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFgdTimeBin),sizeof(ND::TGlobalReconModule::TFgdTimeBin),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTFgdTimeBin,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTFgdTimeBin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTOutermostHits),sizeof(ND::TGlobalReconModule::TOutermostHits),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTOutermostHits,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTOutermostHits);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalHit),sizeof(ND::TGlobalReconModule::TGlobalHit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalHit,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPID),sizeof(ND::TGlobalReconModule::TGlobalPID),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalPID,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalPID);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCObject),sizeof(ND::TGlobalReconModule::TTPCObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTTPCObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTPCObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTFGDObject),sizeof(ND::TGlobalReconModule::TFGDObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTFGDObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTFGDObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTECALObject),sizeof(ND::TGlobalReconModule::TECALObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTECALObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTECALObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTP0DObject),sizeof(ND::TGlobalReconModule::TP0DObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTP0DObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTP0DObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDObject),sizeof(ND::TGlobalReconModule::TSMRDObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTSMRDObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTSMRDObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTrackerObject),sizeof(ND::TGlobalReconModule::TTrackerObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTTrackerObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTrackerObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate),sizeof(ND::TGlobalReconModule::TGlobalPIDAlternate),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTGlobalPIDAlternate);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTTPCOtherObject),sizeof(ND::TGlobalReconModule::TTPCOtherObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTTPCOtherObject,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTTPCOtherObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGlobalReconModulecLcLTSMRDHit),sizeof(ND::TGlobalReconModule::TSMRDHit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGlobalReconModulecLcLTSMRDHit,G__setup_memfuncNDcLcLTGlobalReconModulecLcLTSMRDHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModule),sizeof(ND::TTrackerReconModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModule,G__setup_memfuncNDcLcLTTrackerReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerVertex),sizeof(ND::TTrackerReconModule::TTrackerVertex),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerVertex,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerResult),sizeof(ND::TTrackerReconModule::TTrackerResult),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerResult,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerResult);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrueParticle),sizeof(ND::TTrackerReconModule::TTrueParticle),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrueParticle,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrueParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerConstituent),sizeof(ND::TTrackerReconModule::TTrackerConstituent),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerConstituent,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerConstituent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTPCTrack),sizeof(ND::TTrackerReconModule::TTPCTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTPCTrack,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTPCTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTFGDTrack),sizeof(ND::TTrackerReconModule::TFGDTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTFGDTrack,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTFGDTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackerNode),sizeof(ND::TTrackerReconModule::TTrackerNode),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackerNode,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackerNode);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTTrackOther),sizeof(ND::TTrackerReconModule::TTrackOther),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTTrackOther,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTTrackOther);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTTrackerReconModulecLcLTUnusedHit),sizeof(ND::TTrackerReconModule::TUnusedHit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTTrackerReconModulecLcLTUnusedHit,G__setup_memfuncNDcLcLTTrackerReconModulecLcLTUnusedHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTECALTestbeamModule),sizeof(ND::TECALTestbeamModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTECALTestbeamModule,G__setup_memfuncNDcLcLTECALTestbeamModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModule),sizeof(ND::TSmrdReconModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTSmrdReconModule,G__setup_memfuncNDcLcLTSmrdReconModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdReconHit),sizeof(ND::TSmrdReconModule::TSmrdReconHit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTSmrdReconModulecLcLTSmrdReconHit,G__setup_memfuncNDcLcLTSmrdReconModulecLcLTSmrdReconHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTSmrdReconModulecLcLTSmrdIsoTrack),sizeof(ND::TSmrdReconModule::TSmrdIsoTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack,G__setup_memfuncNDcLcLTSmrdReconModulecLcLTSmrdIsoTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModule),sizeof(ND::TLowLevelInfoModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTLowLevelInfoModule,G__setup_memfuncNDcLcLTLowLevelInfoModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit),sizeof(ND::TLowLevelInfoModule::TLowLevelTFBDigit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit,G__setup_memfuncNDcLcLTLowLevelInfoModulecLcLTLowLevelTFBDigit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTLowLevelInfoModulecLcLTLowLevelHit),sizeof(ND::TLowLevelInfoModule::TLowLevelHit),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTLowLevelInfoModulecLcLTLowLevelHit,G__setup_memfuncNDcLcLTLowLevelInfoModulecLcLTLowLevelHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModule),sizeof(ND::TFgdOnlyModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTFgdOnlyModule,G__setup_memfuncNDcLcLTFgdOnlyModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack),sizeof(ND::TFgdOnlyModule::TFgd2DIsoTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack,G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd2DIsoTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack),sizeof(ND::TFgdOnlyModule::TFgd3DIsoTrack),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack,G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DIsoTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID),sizeof(ND::TFgdOnlyModule::TFgd3DShowerPID),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID,G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DShowerPID);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp),sizeof(ND::TFgdOnlyModule::TFgd3DShowerHyp),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp,G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd3DShowerHyp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTFgdOnlyModulecLcLTFgd2DCluster),sizeof(ND::TFgdOnlyModule::TFgd2DCluster),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTFgdOnlyModulecLcLTFgd2DCluster,G__setup_memfuncNDcLcLTFgdOnlyModulecLcLTFgd2DCluster);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlETVector3mUcOallocatorlETVector3mUgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETVector3mUcOallocatorlETVector3mUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModule),sizeof(ND::TBeamSummaryDataModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTBeamSummaryDataModule,G__setup_memfuncNDcLcLTBeamSummaryDataModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData),sizeof(ND::TBeamSummaryDataModule::TBeamSummaryData),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData,G__setup_memfuncNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData),sizeof(ND::TBeamSummaryDataModule::TBeamSummaryData::TOtherData),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData,G__setup_memfuncNDcLcLTBeamSummaryDataModulecLcLTBeamSummaryDatacLcLTOtherData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModule),sizeof(ND::TReconPerformanceEvalModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTReconPerformanceEvalModule,G__setup_memfuncNDcLcLTReconPerformanceEvalModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject),sizeof(ND::TReconPerformanceEvalModule::TGlobalReconObject),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject,G__setup_memfuncNDcLcLTReconPerformanceEvalModulecLcLTGlobalReconObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo),sizeof(ND::TReconPerformanceEvalModule::TGlobalTruthInfo),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo,G__setup_memfuncNDcLcLTReconPerformanceEvalModulecLcLTGlobalTruthInfo);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTExample2010aAnalysis1Module),sizeof(ND::TExample2010aAnalysis1Module),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTExample2010aAnalysis1Module,G__setup_memfuncNDcLcLTExample2010aAnalysis1Module);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModule),sizeof(ND::TGeometrySummaryModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTGeometrySummaryModule,G__setup_memfuncNDcLcLTGeometrySummaryModule);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox),sizeof(ND::TGeometrySummaryModule::TDetectorBoundingBox),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox,G__setup_memfuncNDcLcLTGeometrySummaryModulecLcLTDetectorBoundingBox);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes),sizeof(ND::TGeometrySummaryModule::TTPCMicroMegasVolumes),-1,292608,"Generated by MakeProject.",G__setup_memvarNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes,G__setup_memfuncNDcLcLTGeometrySummaryModulecLcLTTPCMicroMegasVolumes);
   G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_maplEintcOpairlEintcOconstsPTGeoNodemUgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEintcOconstsPTGeoNodemUgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTGRooTrackerVtxModule),sizeof(ND::TGRooTrackerVtxModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTGRooTrackerVtxModule,G__setup_memfuncNDcLcLTGRooTrackerVtxModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTRooTrackerVtxModuleBase),sizeof(ND::TRooTrackerVtxModuleBase),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTRooTrackerVtxModuleBase,G__setup_memfuncNDcLcLTRooTrackerVtxModuleBase);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__nd280ProjectDictLN_NDcLcLTNRooTrackerVtxModule),sizeof(ND::TNRooTrackerVtxModule),-1,325376,"Generated by MakeProject.",G__setup_memvarNDcLcLTNRooTrackerVtxModule,G__setup_memfuncNDcLcLTNRooTrackerVtxModule);
}
extern "C" void G__cpp_setupnd280ProjectDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupnd280ProjectDict()");
  G__set_cpp_environmentnd280ProjectDict();
  G__cpp_setup_tagtablend280ProjectDict();

  G__cpp_setup_inheritancend280ProjectDict();

  G__cpp_setup_typetablend280ProjectDict();

  G__cpp_setup_memvarnd280ProjectDict();

  G__cpp_setup_memfuncnd280ProjectDict();
  G__cpp_setup_globalnd280ProjectDict();
  G__cpp_setup_funcnd280ProjectDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncnd280ProjectDict();
  return;
}
class G__cpp_setup_initnd280ProjectDict {
  public:
    G__cpp_setup_initnd280ProjectDict() { G__add_setup_func("nd280ProjectDict",(G__incsetup)(&G__cpp_setupnd280ProjectDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initnd280ProjectDict() { G__remove_setup_func("nd280ProjectDict"); }
};
G__cpp_setup_initnd280ProjectDict G__cpp_setup_initializernd280ProjectDict;

